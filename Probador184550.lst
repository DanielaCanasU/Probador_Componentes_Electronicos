CCS PCH C Compiler, Version 5.112, 29001               16-dic.-24 09:52

               Filename:   C:\Users\gabog\OneDrive\Documentos\GitHub\Probador_Componentes_Electronicos\Probador184550.lst

               ROM used:   7734 bytes (24%)
                           Largest free fragment is 25030
               RAM used:   64 (3%) at main() level
                           91 (4%) worst case
               Stack used: 7 locations (6 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0E56
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00DA
0060:  BTFSS  FF0.4
0062:  GOTO   006C
0066:  BTFSC  FF0.1
0068:  GOTO   00CE
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18f4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
00BA:  CLRF   FF7
00BC:  ADDLW  CA
00BE:  MOVWF  FF6
00C0:  MOVLW  00
00C2:  ADDWFC FF7,F
00C4:  TBLRD*+
00C6:  MOVF   FF5,W
00C8:  RETURN 0
00CA:  DATA 28,0C
00CC:  DATA 01,06
*
00F4:  DATA 20,4D
00F6:  DATA 45,4E
00F8:  DATA 55,20
00FA:  DATA 50,52
00FC:  DATA 49,4E
00FE:  DATA 43,49
0100:  DATA 50,41
0102:  DATA 4C,00
0104:  DATA 20,31
0106:  DATA 3E,41
0108:  DATA 44,36
010A:  DATA 32,30
010C:  DATA 20,33
010E:  DATA 3E,4E
0110:  DATA 45,58
0112:  DATA 54,00
0114:  DATA 20,41
0116:  DATA 44,36
0118:  DATA 32,30
011A:  DATA 20,54
011C:  DATA 65,73
011E:  DATA 74,69
0120:  DATA 6E,67
0122:  DATA 2E,2E
0124:  DATA 2E,00
0126:  DATA 20,56
0128:  DATA 3A,25
012A:  DATA 30,2E
012C:  DATA 32,66
012E:  DATA 2E,20
0130:  DATA 32,3E
0132:  DATA 52,65
0134:  DATA 74,00
0136:  DATA 20,4D
0138:  DATA 45,4E
013A:  DATA 55,20
013C:  DATA 50,52
013E:  DATA 49,4E
0140:  DATA 43,49
0142:  DATA 50,41
0144:  DATA 4C,00
0146:  DATA 20,31
0148:  DATA 3E,41
014A:  DATA 44,36
014C:  DATA 32,30
014E:  DATA 20,33
0150:  DATA 3E,4E
0152:  DATA 45,58
0154:  DATA 54,00
0156:  DATA 20,31
0158:  DATA 3E,35
015A:  DATA 35,35
015C:  DATA 20,32
015E:  DATA 3E,4C
0160:  DATA 4D,32
0162:  DATA 32,34
0164:  DATA 00,00
0166:  DATA 20,34
0168:  DATA 3E,37
016A:  DATA 34,31
016C:  DATA 20,33
016E:  DATA 3E,50
0170:  DATA 61,67
0172:  DATA 2E,53
0174:  DATA 69,67
0176:  DATA 2E,00
0178:  DATA 20,35
017A:  DATA 35,35
017C:  DATA 20,54
017E:  DATA 65,73
0180:  DATA 74,69
0182:  DATA 6E,67
0184:  DATA 2E,2E
0186:  DATA 2E,00
0188:  DATA 20,32
018A:  DATA 3E,56
018C:  DATA 6F,6C
018E:  DATA 76,65
0190:  DATA 72,00
0192:  DATA 20,31
0194:  DATA 3E,35
0196:  DATA 35,35
0198:  DATA 20,32
019A:  DATA 3E,4C
019C:  DATA 4D,32
019E:  DATA 32,34
01A0:  DATA 00,00
01A2:  DATA 20,34
01A4:  DATA 3E,37
01A6:  DATA 34,31
01A8:  DATA 20,33
01AA:  DATA 3E,50
01AC:  DATA 61,67
01AE:  DATA 2E,53
01B0:  DATA 69,67
01B2:  DATA 2E,00
01B4:  DATA 4D,61
01B6:  DATA 6C,6F
01B8:  DATA 20,25
01BA:  DATA 69,00
01BC:  DATA 20,32
01BE:  DATA 3E,56
01C0:  DATA 6F,6C
01C2:  DATA 76,65
01C4:  DATA 72,00
01C6:  DATA 20,31
01C8:  DATA 3E,35
01CA:  DATA 35,35
01CC:  DATA 20,32
01CE:  DATA 3E,4C
01D0:  DATA 4D,32
01D2:  DATA 32,34
01D4:  DATA 00,00
01D6:  DATA 20,34
01D8:  DATA 3E,37
01DA:  DATA 34,31
01DC:  DATA 20,33
01DE:  DATA 3E,50
01E0:  DATA 61,67
01E2:  DATA 2E,53
01E4:  DATA 69,67
01E6:  DATA 2E,00
01E8:  DATA 42,75
01EA:  DATA 65,6E
01EC:  DATA 6F,20
01EE:  DATA 25,69
01F0:  DATA 00,00
01F2:  DATA 20,32
01F4:  DATA 3E,56
01F6:  DATA 6F,6C
01F8:  DATA 76,65
01FA:  DATA 72,00
01FC:  DATA 20,31
01FE:  DATA 3E,35
0200:  DATA 35,35
0202:  DATA 20,32
0204:  DATA 3E,4C
0206:  DATA 4D,32
0208:  DATA 32,34
020A:  DATA 00,00
020C:  DATA 20,34
020E:  DATA 3E,37
0210:  DATA 34,31
0212:  DATA 20,33
0214:  DATA 3E,50
0216:  DATA 61,67
0218:  DATA 2E,53
021A:  DATA 69,67
021C:  DATA 2E,00
021E:  DATA 20,52
0220:  DATA 65,67
0222:  DATA 72,65
0224:  DATA 73,61
0226:  DATA 6E,64
0228:  DATA 6F,2E
022A:  DATA 2E,2E
022C:  DATA 00,00
022E:  DATA 20,31
0230:  DATA 3E,35
0232:  DATA 35,35
0234:  DATA 20,32
0236:  DATA 3E,4C
0238:  DATA 4D,32
023A:  DATA 32,34
023C:  DATA 00,00
023E:  DATA 20,34
0240:  DATA 3E,37
0242:  DATA 34,31
0244:  DATA 20,33
0246:  DATA 3E,50
0248:  DATA 61,67
024A:  DATA 2E,53
024C:  DATA 69,67
024E:  DATA 2E,00
0250:  DATA 20,4C
0252:  DATA 4D,32
0254:  DATA 32,34
0256:  DATA 20,54
0258:  DATA 65,73
025A:  DATA 74,69
025C:  DATA 6E,67
025E:  DATA 2E,2E
0260:  DATA 2E,00
0262:  DATA 20,32
0264:  DATA 3E,56
0266:  DATA 6F,6C
0268:  DATA 76,65
026A:  DATA 72,00
026C:  DATA 20,41
026E:  DATA 6D,70
0270:  DATA 4F,70
0272:  DATA 2D,31
0274:  DATA 20,42
0276:  DATA 75,65
0278:  DATA 6E,6F
027A:  DATA 21,00
027C:  DATA 20,4C
027E:  DATA 4D,32
0280:  DATA 32,34
0282:  DATA 20,54
0284:  DATA 65,73
0286:  DATA 74,69
0288:  DATA 6E,67
028A:  DATA 2E,2E
028C:  DATA 2E,00
028E:  DATA 20,41
0290:  DATA 6D,70
0292:  DATA 4F,70
0294:  DATA 2D,32
0296:  DATA 20,42
0298:  DATA 75,65
029A:  DATA 6E,6F
029C:  DATA 21,00
029E:  DATA 20,4C
02A0:  DATA 4D,32
02A2:  DATA 32,34
02A4:  DATA 20,54
02A6:  DATA 65,73
02A8:  DATA 74,69
02AA:  DATA 6E,67
02AC:  DATA 2E,2E
02AE:  DATA 2E,00
02B0:  DATA 20,41
02B2:  DATA 6D,70
02B4:  DATA 4F,70
02B6:  DATA 2D,33
02B8:  DATA 20,42
02BA:  DATA 75,65
02BC:  DATA 6E,6F
02BE:  DATA 21,00
02C0:  DATA 20,4C
02C2:  DATA 4D,32
02C4:  DATA 32,34
02C6:  DATA 20,54
02C8:  DATA 65,73
02CA:  DATA 74,69
02CC:  DATA 6E,67
02CE:  DATA 2E,2E
02D0:  DATA 2E,00
02D2:  DATA 20,41
02D4:  DATA 6D,70
02D6:  DATA 4F,70
02D8:  DATA 2D,34
02DA:  DATA 20,42
02DC:  DATA 75,65
02DE:  DATA 6E,6F
02E0:  DATA 21,00
02E2:  DATA 20,4C
02E4:  DATA 4D,32
02E6:  DATA 32,34
02E8:  DATA 20,54
02EA:  DATA 65,73
02EC:  DATA 74,69
02EE:  DATA 6E,67
02F0:  DATA 2E,2E
02F2:  DATA 2E,00
02F4:  DATA 20,42
02F6:  DATA 75,65
02F8:  DATA 6E,6F
02FA:  DATA 73,20
02FC:  DATA 25,69
02FE:  DATA 00,00
0300:  DATA 20,52
0302:  DATA 65,67
0304:  DATA 72,65
0306:  DATA 73,61
0308:  DATA 6E,64
030A:  DATA 6F,2E
030C:  DATA 2E,00
030E:  DATA 20,31
0310:  DATA 3E,35
0312:  DATA 35,35
0314:  DATA 20,32
0316:  DATA 3E,4C
0318:  DATA 4D,32
031A:  DATA 32,34
031C:  DATA 00,00
031E:  DATA 20,34
0320:  DATA 3E,37
0322:  DATA 34,31
0324:  DATA 20,33
0326:  DATA 3E,50
0328:  DATA 61,67
032A:  DATA 2E,53
032C:  DATA 69,67
032E:  DATA 2E,00
0330:  DATA 20,37
0332:  DATA 34,31
0334:  DATA 20,54
0336:  DATA 65,73
0338:  DATA 74,69
033A:  DATA 6E,67
033C:  DATA 2E,2E
033E:  DATA 2E,00
0340:  DATA 20,32
0342:  DATA 3E,56
0344:  DATA 6F,6C
0346:  DATA 76,65
0348:  DATA 72,00
034A:  DATA 20,41
034C:  DATA 6D,70
034E:  DATA 4F,70
0350:  DATA 20,42
0352:  DATA 75,65
0354:  DATA 6E,6F
0356:  DATA 21,00
0358:  DATA 20,52
035A:  DATA 65,67
035C:  DATA 72,65
035E:  DATA 73,61
0360:  DATA 6E,64
0362:  DATA 6F,2E
0364:  DATA 2E,2E
0366:  DATA 00,00
0368:  DATA 20,31
036A:  DATA 3E,35
036C:  DATA 35,35
036E:  DATA 20,32
0370:  DATA 3E,4C
0372:  DATA 4D,32
0374:  DATA 32,34
0376:  DATA 00,00
0378:  DATA 20,34
037A:  DATA 3E,37
037C:  DATA 34,31
037E:  DATA 20,33
0380:  DATA 3E,50
0382:  DATA 61,67
0384:  DATA 2E,53
0386:  DATA 69,67
0388:  DATA 2E,00
038A:  DATA 20,52
038C:  DATA 65,67
038E:  DATA 72,65
0390:  DATA 73,61
0392:  DATA 6E,64
0394:  DATA 6F,2E
0396:  DATA 2E,2E
0398:  DATA 00,00
039A:  DATA 20,31
039C:  DATA 3E,35
039E:  DATA 35,35
03A0:  DATA 20,32
03A2:  DATA 3E,4C
03A4:  DATA 4D,32
03A6:  DATA 32,34
03A8:  DATA 00,00
03AA:  DATA 20,34
03AC:  DATA 3E,37
03AE:  DATA 34,31
03B0:  DATA 20,33
03B2:  DATA 3E,50
03B4:  DATA 61,67
03B6:  DATA 2E,53
03B8:  DATA 69,67
03BA:  DATA 2E,00
03BC:  DATA 20,31
03BE:  DATA 3E,4C
03C0:  DATA 4D,33
03C2:  DATA 35,38
03C4:  DATA 20,32
03C6:  DATA 3E,4C
03C8:  DATA 4D,33
03CA:  DATA 34,38
03CC:  DATA 00,00
03CE:  DATA 20,34
03D0:  DATA 3E,4C
03D2:  DATA 4D,33
03D4:  DATA 32,34
03D6:  DATA 20,33
03D8:  DATA 3E,50
03DA:  DATA 61,67
03DC:  DATA 2E,53
03DE:  DATA 69,67
03E0:  DATA 2E,00
03E2:  DATA 20,4C
03E4:  DATA 4D,33
03E6:  DATA 35,38
03E8:  DATA 20,54
03EA:  DATA 65,73
03EC:  DATA 74,69
03EE:  DATA 6E,67
03F0:  DATA 2E,2E
03F2:  DATA 2E,00
03F4:  DATA 20,32
03F6:  DATA 3E,56
03F8:  DATA 6F,6C
03FA:  DATA 76,65
03FC:  DATA 72,00
03FE:  DATA 20,41
0400:  DATA 6D,70
0402:  DATA 4F,70
0404:  DATA 2D,31
0406:  DATA 20,42
0408:  DATA 75,65
040A:  DATA 6E,6F
040C:  DATA 21,00
040E:  DATA 20,4C
0410:  DATA 4D,33
0412:  DATA 35,38
0414:  DATA 20,54
0416:  DATA 65,73
0418:  DATA 74,69
041A:  DATA 6E,67
041C:  DATA 2E,2E
041E:  DATA 2E,00
0420:  DATA 20,41
0422:  DATA 6D,70
0424:  DATA 4F,70
0426:  DATA 2D,32
0428:  DATA 20,42
042A:  DATA 75,65
042C:  DATA 6E,6F
042E:  DATA 21,00
0430:  DATA 20,4C
0432:  DATA 4D,33
0434:  DATA 35,38
0436:  DATA 20,54
0438:  DATA 65,73
043A:  DATA 74,69
043C:  DATA 6E,67
043E:  DATA 2E,2E
0440:  DATA 2E,00
0442:  DATA 20,42
0444:  DATA 75,65
0446:  DATA 6E,6F
0448:  DATA 73,20
044A:  DATA 25,69
044C:  DATA 00,00
044E:  DATA 20,52
0450:  DATA 65,67
0452:  DATA 72,65
0454:  DATA 73,61
0456:  DATA 6E,64
0458:  DATA 6F,2E
045A:  DATA 2E,00
045C:  DATA 20,31
045E:  DATA 3E,4C
0460:  DATA 4D,33
0462:  DATA 35,38
0464:  DATA 20,32
0466:  DATA 3E,4C
0468:  DATA 4D,33
046A:  DATA 34,38
046C:  DATA 00,00
046E:  DATA 20,34
0470:  DATA 3E,4C
0472:  DATA 4D,33
0474:  DATA 32,34
0476:  DATA 20,33
0478:  DATA 3E,50
047A:  DATA 61,67
047C:  DATA 2E,53
047E:  DATA 69,67
0480:  DATA 2E,00
0482:  DATA 20,52
0484:  DATA 65,67
0486:  DATA 72,65
0488:  DATA 73,61
048A:  DATA 6E,64
048C:  DATA 6F,2E
048E:  DATA 2E,2E
0490:  DATA 00,00
0492:  DATA 20,31
0494:  DATA 3E,4C
0496:  DATA 4D,33
0498:  DATA 35,38
049A:  DATA 20,32
049C:  DATA 3E,4C
049E:  DATA 4D,33
04A0:  DATA 34,38
04A2:  DATA 00,00
04A4:  DATA 20,34
04A6:  DATA 3E,4C
04A8:  DATA 4D,33
04AA:  DATA 32,34
04AC:  DATA 20,33
04AE:  DATA 3E,50
04B0:  DATA 61,67
04B2:  DATA 2E,53
04B4:  DATA 69,67
04B6:  DATA 2E,00
04B8:  DATA 20,4C
04BA:  DATA 4D,33
04BC:  DATA 32,34
04BE:  DATA 20,54
04C0:  DATA 65,73
04C2:  DATA 74,69
04C4:  DATA 6E,67
04C6:  DATA 2E,2E
04C8:  DATA 2E,00
04CA:  DATA 20,32
04CC:  DATA 3E,56
04CE:  DATA 6F,6C
04D0:  DATA 76,65
04D2:  DATA 72,00
04D4:  DATA 20,41
04D6:  DATA 6D,70
04D8:  DATA 4F,70
04DA:  DATA 2D,31
04DC:  DATA 20,42
04DE:  DATA 75,65
04E0:  DATA 6E,6F
04E2:  DATA 21,00
04E4:  DATA 20,4C
04E6:  DATA 4D,33
04E8:  DATA 32,34
04EA:  DATA 20,54
04EC:  DATA 65,73
04EE:  DATA 74,69
04F0:  DATA 6E,67
04F2:  DATA 2E,2E
04F4:  DATA 2E,00
04F6:  DATA 20,41
04F8:  DATA 6D,70
04FA:  DATA 4F,70
04FC:  DATA 2D,32
04FE:  DATA 20,42
0500:  DATA 75,65
0502:  DATA 6E,6F
0504:  DATA 21,00
0506:  DATA 20,4C
0508:  DATA 4D,33
050A:  DATA 32,34
050C:  DATA 20,54
050E:  DATA 65,73
0510:  DATA 74,69
0512:  DATA 6E,67
0514:  DATA 2E,2E
0516:  DATA 2E,00
0518:  DATA 20,41
051A:  DATA 6D,70
051C:  DATA 4F,70
051E:  DATA 2D,33
0520:  DATA 20,42
0522:  DATA 75,65
0524:  DATA 6E,6F
0526:  DATA 21,00
0528:  DATA 20,4C
052A:  DATA 4D,33
052C:  DATA 32,34
052E:  DATA 20,54
0530:  DATA 65,73
0532:  DATA 74,69
0534:  DATA 6E,67
0536:  DATA 2E,2E
0538:  DATA 2E,00
053A:  DATA 20,41
053C:  DATA 6D,70
053E:  DATA 4F,70
0540:  DATA 2D,34
0542:  DATA 20,42
0544:  DATA 75,65
0546:  DATA 6E,6F
0548:  DATA 21,00
054A:  DATA 20,4C
054C:  DATA 4D,33
054E:  DATA 32,34
0550:  DATA 20,54
0552:  DATA 65,73
0554:  DATA 74,69
0556:  DATA 6E,67
0558:  DATA 2E,2E
055A:  DATA 2E,00
055C:  DATA 20,42
055E:  DATA 75,65
0560:  DATA 6E,6F
0562:  DATA 73,20
0564:  DATA 25,69
0566:  DATA 00,00
0568:  DATA 20,52
056A:  DATA 65,67
056C:  DATA 72,65
056E:  DATA 73,61
0570:  DATA 6E,64
0572:  DATA 6F,2E
0574:  DATA 2E,2E
0576:  DATA 00,00
0578:  DATA 20,31
057A:  DATA 3E,4C
057C:  DATA 4D,33
057E:  DATA 35,38
0580:  DATA 20,32
0582:  DATA 3E,4C
0584:  DATA 4D,33
0586:  DATA 34,38
0588:  DATA 00,00
058A:  DATA 20,34
058C:  DATA 3E,4C
058E:  DATA 4D,33
0590:  DATA 32,34
0592:  DATA 20,33
0594:  DATA 3E,50
0596:  DATA 61,67
0598:  DATA 2E,53
059A:  DATA 69,67
059C:  DATA 2E,00
059E:  DATA 20,52
05A0:  DATA 65,67
05A2:  DATA 72,65
05A4:  DATA 73,61
05A6:  DATA 6E,64
05A8:  DATA 6F,2E
05AA:  DATA 2E,2E
05AC:  DATA 00,00
05AE:  DATA 20,31
05B0:  DATA 3E,4C
05B2:  DATA 4D,33
05B4:  DATA 35,38
05B6:  DATA 20,32
05B8:  DATA 3E,4C
05BA:  DATA 4D,33
05BC:  DATA 34,38
05BE:  DATA 00,00
05C0:  DATA 20,34
05C2:  DATA 3E,4C
05C4:  DATA 4D,33
05C6:  DATA 32,34
05C8:  DATA 20,33
05CA:  DATA 3E,50
05CC:  DATA 61,67
05CE:  DATA 2E,53
05D0:  DATA 69,67
05D2:  DATA 2E,00
05D4:  DATA 20,31
05D6:  DATA 3E,4E
05D8:  DATA 50,4E
05DA:  DATA 20,32
05DC:  DATA 3E,50
05DE:  DATA 4E,50
05E0:  DATA 00,00
05E2:  DATA 20,34
05E4:  DATA 3E,4E
05E6:  DATA 41,44
05E8:  DATA 41,20
05EA:  DATA 33,3E
05EC:  DATA 52,65
05EE:  DATA 67,72
05F0:  DATA 65,73
05F2:  DATA 61,72
05F4:  DATA 00,00
05F6:  DATA 4E,50
05F8:  DATA 4E,20
05FA:  DATA 54,65
05FC:  DATA 73,74
05FE:  DATA 69,6E
0600:  DATA 67,2E
0602:  DATA 2E,2E
0604:  DATA 00,00
0606:  DATA 4E,50
0608:  DATA 4E,20
060A:  DATA 42,55
060C:  DATA 45,4E
060E:  DATA 4F,00
0610:  DATA 20,32
0612:  DATA 3E,56
0614:  DATA 6F,6C
0616:  DATA 76,65
0618:  DATA 72,00
061A:  DATA 4E,50
061C:  DATA 4E,20
061E:  DATA 4D,41
0620:  DATA 4C,4F
0622:  DATA 00,00
0624:  DATA 20,32
0626:  DATA 3E,56
0628:  DATA 6F,6C
062A:  DATA 76,65
062C:  DATA 72,00
062E:  DATA 20,52
0630:  DATA 65,67
0632:  DATA 72,65
0634:  DATA 73,61
0636:  DATA 6E,64
0638:  DATA 6F,2E
063A:  DATA 2E,2E
063C:  DATA 00,00
063E:  DATA 20,31
0640:  DATA 3E,4E
0642:  DATA 50,4E
0644:  DATA 20,32
0646:  DATA 3E,50
0648:  DATA 4E,50
064A:  DATA 00,00
064C:  DATA 20,34
064E:  DATA 3E,4E
0650:  DATA 41,44
0652:  DATA 41,20
0654:  DATA 33,3E
0656:  DATA 52,65
0658:  DATA 67,72
065A:  DATA 65,73
065C:  DATA 61,72
065E:  DATA 00,00
0660:  DATA 50,4E
0662:  DATA 50,20
0664:  DATA 54,65
0666:  DATA 73,74
0668:  DATA 69,6E
066A:  DATA 67,2E
066C:  DATA 2E,2E
066E:  DATA 00,00
0670:  DATA 50,4E
0672:  DATA 50,20
0674:  DATA 42,55
0676:  DATA 45,4E
0678:  DATA 4F,00
067A:  DATA 20,32
067C:  DATA 3E,56
067E:  DATA 6F,6C
0680:  DATA 76,65
0682:  DATA 72,00
0684:  DATA 50,4E
0686:  DATA 50,20
0688:  DATA 4D,41
068A:  DATA 4C,4F
068C:  DATA 00,00
068E:  DATA 20,32
0690:  DATA 3E,56
0692:  DATA 6F,6C
0694:  DATA 76,65
0696:  DATA 72,00
0698:  DATA 20,52
069A:  DATA 65,67
069C:  DATA 72,65
069E:  DATA 73,61
06A0:  DATA 6E,64
06A2:  DATA 6F,2E
06A4:  DATA 2E,2E
06A6:  DATA 00,00
06A8:  DATA 20,31
06AA:  DATA 3E,4E
06AC:  DATA 50,4E
06AE:  DATA 20,32
06B0:  DATA 3E,50
06B2:  DATA 4E,50
06B4:  DATA 00,00
06B6:  DATA 20,34
06B8:  DATA 3E,4E
06BA:  DATA 41,44
06BC:  DATA 41,20
06BE:  DATA 33,3E
06C0:  DATA 52,65
06C2:  DATA 67,72
06C4:  DATA 65,73
06C6:  DATA 61,72
06C8:  DATA 00,00
*
0976:  TBLRD*+
0978:  MOVF   FF5,F
097A:  BZ    0994
097C:  MOVFF  FF6,3F
0980:  MOVFF  FF7,40
0984:  MOVFF  FF5,4C
0988:  RCALL  0934
098A:  MOVFF  3F,FF6
098E:  MOVFF  40,FF7
0992:  BRA    0976
0994:  RETURN 0
*
09F4:  MOVLW  8E
09F6:  MOVWF  00
09F8:  MOVFF  40,01
09FC:  MOVFF  3F,02
0A00:  CLRF   03
0A02:  MOVF   01,F
0A04:  BNZ   0A18
0A06:  MOVFF  02,01
0A0A:  CLRF   02
0A0C:  MOVLW  08
0A0E:  SUBWF  00,F
0A10:  MOVF   01,F
0A12:  BNZ   0A18
0A14:  CLRF   00
0A16:  BRA    0A28
0A18:  BCF    FD8.0
0A1A:  BTFSC  01.7
0A1C:  BRA    0A26
0A1E:  RLCF   02,F
0A20:  RLCF   01,F
0A22:  DECF   00,F
0A24:  BRA    0A18
0A26:  BCF    01.7
0A28:  GOTO   0F44 (RETURN)
0A2C:  MOVF   4C,W
0A2E:  BTFSC  FD8.2
0A30:  BRA    0B14
0A32:  MOVWF  00
0A34:  MOVF   50,W
0A36:  BTFSC  FD8.2
0A38:  BRA    0B14
0A3A:  ADDWF  00,F
0A3C:  BNC   0A46
0A3E:  MOVLW  81
0A40:  ADDWF  00,F
0A42:  BC    0B14
0A44:  BRA    0A4E
0A46:  MOVLW  7F
0A48:  SUBWF  00,F
0A4A:  BNC   0B14
0A4C:  BZ    0B14
0A4E:  MOVFF  4D,54
0A52:  MOVF   51,W
0A54:  XORWF  54,F
0A56:  BSF    4D.7
0A58:  BSF    51.7
0A5A:  MOVF   4F,W
0A5C:  MULWF  53
0A5E:  MOVFF  FF4,56
0A62:  MOVF   4E,W
0A64:  MULWF  52
0A66:  MOVFF  FF4,03
0A6A:  MOVFF  FF3,55
0A6E:  MULWF  53
0A70:  MOVF   FF3,W
0A72:  ADDWF  56,F
0A74:  MOVF   FF4,W
0A76:  ADDWFC 55,F
0A78:  MOVLW  00
0A7A:  ADDWFC 03,F
0A7C:  MOVF   4F,W
0A7E:  MULWF  52
0A80:  MOVF   FF3,W
0A82:  ADDWF  56,F
0A84:  MOVF   FF4,W
0A86:  ADDWFC 55,F
0A88:  MOVLW  00
0A8A:  CLRF   02
0A8C:  ADDWFC 03,F
0A8E:  ADDWFC 02,F
0A90:  MOVF   4D,W
0A92:  MULWF  53
0A94:  MOVF   FF3,W
0A96:  ADDWF  55,F
0A98:  MOVF   FF4,W
0A9A:  ADDWFC 03,F
0A9C:  MOVLW  00
0A9E:  ADDWFC 02,F
0AA0:  MOVF   4D,W
0AA2:  MULWF  52
0AA4:  MOVF   FF3,W
0AA6:  ADDWF  03,F
0AA8:  MOVF   FF4,W
0AAA:  ADDWFC 02,F
0AAC:  MOVLW  00
0AAE:  CLRF   01
0AB0:  ADDWFC 01,F
0AB2:  MOVF   4F,W
0AB4:  MULWF  51
0AB6:  MOVF   FF3,W
0AB8:  ADDWF  55,F
0ABA:  MOVF   FF4,W
0ABC:  ADDWFC 03,F
0ABE:  MOVLW  00
0AC0:  ADDWFC 02,F
0AC2:  ADDWFC 01,F
0AC4:  MOVF   4E,W
0AC6:  MULWF  51
0AC8:  MOVF   FF3,W
0ACA:  ADDWF  03,F
0ACC:  MOVF   FF4,W
0ACE:  ADDWFC 02,F
0AD0:  MOVLW  00
0AD2:  ADDWFC 01,F
0AD4:  MOVF   4D,W
0AD6:  MULWF  51
0AD8:  MOVF   FF3,W
0ADA:  ADDWF  02,F
0ADC:  MOVF   FF4,W
0ADE:  ADDWFC 01,F
0AE0:  INCF   00,F
0AE2:  BTFSC  01.7
0AE4:  BRA    0AF0
0AE6:  RLCF   55,F
0AE8:  RLCF   03,F
0AEA:  RLCF   02,F
0AEC:  RLCF   01,F
0AEE:  DECF   00,F
0AF0:  MOVLW  00
0AF2:  BTFSS  55.7
0AF4:  BRA    0B0A
0AF6:  INCF   03,F
0AF8:  ADDWFC 02,F
0AFA:  ADDWFC 01,F
0AFC:  MOVF   01,W
0AFE:  BNZ   0B0A
0B00:  MOVF   02,W
0B02:  BNZ   0B0A
0B04:  MOVF   03,W
0B06:  BNZ   0B0A
0B08:  INCF   00,F
0B0A:  BTFSC  54.7
0B0C:  BSF    01.7
0B0E:  BTFSS  54.7
0B10:  BCF    01.7
0B12:  BRA    0B1C
0B14:  CLRF   00
0B16:  CLRF   01
0B18:  CLRF   02
0B1A:  CLRF   03
0B1C:  RETURN 0
0B1E:  TBLRD*+
0B20:  MOVFF  FF6,40
0B24:  MOVFF  FF7,41
0B28:  MOVFF  FF5,4C
0B2C:  RCALL  0934
0B2E:  MOVFF  40,FF6
0B32:  MOVFF  41,FF7
0B36:  DECFSZ 3F,F
0B38:  BRA    0B1E
0B3A:  RETURN 0
0B3C:  MOVF   4C,W
0B3E:  SUBLW  B6
0B40:  MOVWF  4C
0B42:  CLRF   03
0B44:  MOVFF  4D,50
0B48:  BSF    4D.7
0B4A:  BCF    FD8.0
0B4C:  RRCF   4D,F
0B4E:  RRCF   4E,F
0B50:  RRCF   4F,F
0B52:  RRCF   03,F
0B54:  RRCF   02,F
0B56:  RRCF   01,F
0B58:  RRCF   00,F
0B5A:  DECFSZ 4C,F
0B5C:  BRA    0B4A
0B5E:  BTFSS  50.7
0B60:  BRA    0B78
0B62:  COMF   00,F
0B64:  COMF   01,F
0B66:  COMF   02,F
0B68:  COMF   03,F
0B6A:  INCF   00,F
0B6C:  BTFSC  FD8.2
0B6E:  INCF   01,F
0B70:  BTFSC  FD8.2
0B72:  INCF   02,F
0B74:  BTFSC  FD8.2
0B76:  INCF   03,F
0B78:  GOTO   0C58 (RETURN)
0B7C:  BTFSC  FD8.1
0B7E:  BRA    0B86
0B80:  CLRF   FEA
0B82:  MOVLW  54
0B84:  MOVWF  FE9
0B86:  CLRF   00
0B88:  CLRF   01
0B8A:  CLRF   02
0B8C:  CLRF   03
0B8E:  CLRF   54
0B90:  CLRF   55
0B92:  CLRF   56
0B94:  CLRF   57
0B96:  MOVF   53,W
0B98:  IORWF  52,W
0B9A:  IORWF  51,W
0B9C:  IORWF  50,W
0B9E:  BZ    0BF8
0BA0:  MOVLW  20
0BA2:  MOVWF  58
0BA4:  BCF    FD8.0
0BA6:  RLCF   4C,F
0BA8:  RLCF   4D,F
0BAA:  RLCF   4E,F
0BAC:  RLCF   4F,F
0BAE:  RLCF   54,F
0BB0:  RLCF   55,F
0BB2:  RLCF   56,F
0BB4:  RLCF   57,F
0BB6:  MOVF   53,W
0BB8:  SUBWF  57,W
0BBA:  BNZ   0BCC
0BBC:  MOVF   52,W
0BBE:  SUBWF  56,W
0BC0:  BNZ   0BCC
0BC2:  MOVF   51,W
0BC4:  SUBWF  55,W
0BC6:  BNZ   0BCC
0BC8:  MOVF   50,W
0BCA:  SUBWF  54,W
0BCC:  BNC   0BEC
0BCE:  MOVF   50,W
0BD0:  SUBWF  54,F
0BD2:  MOVF   51,W
0BD4:  BTFSS  FD8.0
0BD6:  INCFSZ 51,W
0BD8:  SUBWF  55,F
0BDA:  MOVF   52,W
0BDC:  BTFSS  FD8.0
0BDE:  INCFSZ 52,W
0BE0:  SUBWF  56,F
0BE2:  MOVF   53,W
0BE4:  BTFSS  FD8.0
0BE6:  INCFSZ 53,W
0BE8:  SUBWF  57,F
0BEA:  BSF    FD8.0
0BEC:  RLCF   00,F
0BEE:  RLCF   01,F
0BF0:  RLCF   02,F
0BF2:  RLCF   03,F
0BF4:  DECFSZ 58,F
0BF6:  BRA    0BA4
0BF8:  MOVFF  54,FEF
0BFC:  MOVFF  55,FEC
0C00:  MOVFF  56,FEC
0C04:  MOVFF  57,FEC
0C08:  RETURN 0
0C0A:  MOVF   FE9,W
0C0C:  MOVWF  44
0C0E:  MOVF   43,W
0C10:  MOVWF  46
0C12:  BZ    0C46
0C14:  MOVFF  42,4F
0C18:  MOVFF  41,4E
0C1C:  MOVFF  40,4D
0C20:  MOVFF  3F,4C
0C24:  CLRF   53
0C26:  CLRF   52
0C28:  MOVLW  20
0C2A:  MOVWF  51
0C2C:  MOVLW  82
0C2E:  MOVWF  50
0C30:  RCALL  0A2C
0C32:  MOVFF  03,42
0C36:  MOVFF  02,41
0C3A:  MOVFF  01,40
0C3E:  MOVFF  00,3F
0C42:  DECFSZ 46,F
0C44:  BRA    0C14
0C46:  MOVFF  42,4F
0C4A:  MOVFF  41,4E
0C4E:  MOVFF  40,4D
0C52:  MOVFF  3F,4C
0C56:  BRA    0B3C
0C58:  MOVFF  03,42
0C5C:  MOVFF  02,41
0C60:  MOVFF  01,40
0C64:  MOVFF  00,3F
0C68:  BTFSS  42.7
0C6A:  BRA    0C86
0C6C:  DECF   44,F
0C6E:  BSF    44.5
0C70:  COMF   3F,F
0C72:  COMF   40,F
0C74:  COMF   41,F
0C76:  COMF   42,F
0C78:  INCF   3F,F
0C7A:  BTFSC  FD8.2
0C7C:  INCF   40,F
0C7E:  BTFSC  FD8.2
0C80:  INCF   41,F
0C82:  BTFSC  FD8.2
0C84:  INCF   42,F
0C86:  MOVLW  3B
0C88:  MOVWF  4B
0C8A:  MOVLW  9A
0C8C:  MOVWF  4A
0C8E:  MOVLW  CA
0C90:  MOVWF  49
0C92:  CLRF   48
0C94:  MOVLW  0A
0C96:  MOVWF  46
0C98:  MOVF   43,W
0C9A:  BTFSC  FD8.2
0C9C:  INCF   44,F
0C9E:  BSF    FD8.1
0CA0:  CLRF   FEA
0CA2:  MOVLW  3F
0CA4:  MOVWF  FE9
0CA6:  MOVFF  42,4F
0CAA:  MOVFF  41,4E
0CAE:  MOVFF  40,4D
0CB2:  MOVFF  3F,4C
0CB6:  MOVFF  4B,53
0CBA:  MOVFF  4A,52
0CBE:  MOVFF  49,51
0CC2:  MOVFF  48,50
0CC6:  RCALL  0B7C
0CC8:  MOVF   01,W
0CCA:  MOVF   00,F
0CCC:  BNZ   0CEC
0CCE:  INCF   43,W
0CD0:  SUBWF  46,W
0CD2:  BZ    0CEC
0CD4:  MOVF   44,W
0CD6:  BZ    0CF0
0CD8:  ANDLW  0F
0CDA:  SUBWF  46,W
0CDC:  BZ    0CE0
0CDE:  BC    0D4E
0CE0:  BTFSC  44.7
0CE2:  BRA    0D4E
0CE4:  BTFSC  44.6
0CE6:  BRA    0CF0
0CE8:  MOVLW  20
0CEA:  BRA    0D46
0CEC:  MOVLW  20
0CEE:  ANDWF  44,F
0CF0:  BTFSS  44.5
0CF2:  BRA    0D0C
0CF4:  BCF    44.5
0CF6:  MOVF   43,W
0CF8:  BTFSS  FD8.2
0CFA:  DECF   44,F
0CFC:  MOVF   00,W
0CFE:  MOVWF  44
0D00:  MOVLW  2D
0D02:  MOVWF  4C
0D04:  RCALL  0934
0D06:  MOVF   44,W
0D08:  MOVWF  00
0D0A:  CLRF   44
0D0C:  MOVF   43,W
0D0E:  SUBWF  46,W
0D10:  BNZ   0D26
0D12:  MOVF   00,W
0D14:  MOVWF  44
0D16:  MOVLW  2E
0D18:  MOVWF  4C
0D1A:  RCALL  0934
0D1C:  MOVF   44,W
0D1E:  MOVWF  00
0D20:  MOVLW  20
0D22:  ANDWF  44,F
0D24:  MOVLW  00
0D26:  MOVLW  30
0D28:  BTFSS  44.5
0D2A:  BRA    0D46
0D2C:  BCF    44.5
0D2E:  MOVF   43,W
0D30:  BTFSS  FD8.2
0D32:  DECF   44,F
0D34:  MOVF   00,W
0D36:  MOVWF  44
0D38:  MOVLW  2D
0D3A:  MOVWF  4C
0D3C:  RCALL  0934
0D3E:  MOVF   44,W
0D40:  MOVWF  00
0D42:  CLRF   44
0D44:  MOVLW  30
0D46:  ADDWF  00,F
0D48:  MOVFF  00,4C
0D4C:  RCALL  0934
0D4E:  BCF    FD8.1
0D50:  MOVFF  4B,4F
0D54:  MOVFF  4A,4E
0D58:  MOVFF  49,4D
0D5C:  MOVFF  48,4C
0D60:  CLRF   53
0D62:  CLRF   52
0D64:  CLRF   51
0D66:  MOVLW  0A
0D68:  MOVWF  50
0D6A:  RCALL  0B7C
0D6C:  MOVFF  03,4B
0D70:  MOVFF  02,4A
0D74:  MOVFF  01,49
0D78:  MOVFF  00,48
0D7C:  DECFSZ 46,F
0D7E:  BRA    0C9E
0D80:  GOTO   0FDE (RETURN)
0D84:  MOVF   46,W
0D86:  CLRF   01
0D88:  SUBWF  45,W
0D8A:  BC    0D92
0D8C:  MOVFF  45,00
0D90:  BRA    0DAA
0D92:  CLRF   00
0D94:  MOVLW  08
0D96:  MOVWF  47
0D98:  RLCF   45,F
0D9A:  RLCF   00,F
0D9C:  MOVF   46,W
0D9E:  SUBWF  00,W
0DA0:  BTFSC  FD8.0
0DA2:  MOVWF  00
0DA4:  RLCF   01,F
0DA6:  DECFSZ 47,F
0DA8:  BRA    0D98
0DAA:  RETURN 0
0DAC:  MOVLW  20
0DAE:  BTFSS  40.4
0DB0:  MOVLW  30
0DB2:  MOVWF  41
0DB4:  MOVFF  3F,00
0DB8:  BTFSS  3F.7
0DBA:  BRA    0DCC
0DBC:  COMF   00,F
0DBE:  INCF   00,F
0DC0:  MOVFF  00,3F
0DC4:  MOVLW  2D
0DC6:  MOVWF  41
0DC8:  BSF    40.7
0DCA:  BSF    40.0
0DCC:  MOVF   01,W
0DCE:  MOVFF  3F,45
0DD2:  MOVLW  64
0DD4:  MOVWF  46
0DD6:  RCALL  0D84
0DD8:  MOVFF  00,3F
0DDC:  MOVLW  30
0DDE:  ADDWF  01,W
0DE0:  MOVWF  42
0DE2:  MOVFF  3F,45
0DE6:  MOVLW  0A
0DE8:  MOVWF  46
0DEA:  RCALL  0D84
0DEC:  MOVLW  30
0DEE:  ADDWF  00,W
0DF0:  MOVWF  44
0DF2:  MOVLW  30
0DF4:  ADDWF  01,W
0DF6:  MOVWF  43
0DF8:  MOVFF  41,00
0DFC:  MOVLW  30
0DFE:  SUBWF  42,W
0E00:  BZ    0E0A
0E02:  BSF    40.1
0E04:  BTFSC  40.7
0E06:  BSF    40.2
0E08:  BRA    0E2E
0E0A:  MOVFF  41,42
0E0E:  MOVLW  20
0E10:  MOVWF  41
0E12:  MOVLW  30
0E14:  SUBWF  43,W
0E16:  BZ    0E20
0E18:  BSF    40.0
0E1A:  BTFSC  40.7
0E1C:  BSF    40.1
0E1E:  BRA    0E2E
0E20:  BTFSS  FD8.2
0E22:  BSF    40.0
0E24:  BNZ   0E2E
0E26:  MOVFF  42,43
0E2A:  MOVLW  20
0E2C:  MOVWF  42
0E2E:  BTFSC  40.2
0E30:  BRA    0E3C
0E32:  BTFSC  40.1
0E34:  BRA    0E42
0E36:  BTFSC  40.0
0E38:  BRA    0E48
0E3A:  BRA    0E4E
0E3C:  MOVFF  41,4C
0E40:  RCALL  0934
0E42:  MOVFF  42,4C
0E46:  RCALL  0934
0E48:  MOVFF  43,4C
0E4C:  RCALL  0934
0E4E:  MOVFF  44,4C
0E52:  RCALL  0934
0E54:  RETURN 0
.................... 
.................... #list
.................... 
.................... #device ADC = 10
.................... #use i2c(Master,Fast=100000, sda=PIN_B0, scl=PIN_B1,force_sw)
*
06F2:  MOVLW  08
06F4:  MOVWF  01
06F6:  NOP   
06F8:  BCF    F8A.1
06FA:  BCF    F93.1
06FC:  NOP   
06FE:  RLCF   5A,F
0700:  BCF    F8A.0
0702:  BTFSC  FD8.0
0704:  BSF    F93.0
0706:  BTFSS  FD8.0
0708:  BCF    F93.0
070A:  BSF    F93.1
070C:  BTFSS  F81.1
070E:  BRA    070C
0710:  DECFSZ 01,F
0712:  BRA    06F6
0714:  NOP   
0716:  BCF    F8A.1
0718:  BCF    F93.1
071A:  NOP   
071C:  BSF    F93.0
071E:  NOP   
0720:  NOP   
0722:  BSF    F93.1
0724:  BTFSS  F81.1
0726:  BRA    0724
0728:  CLRF   01
072A:  NOP   
072C:  BTFSC  F81.0
072E:  BSF    01.0
0730:  BCF    F8A.1
0732:  BCF    F93.1
0734:  BCF    F8A.0
0736:  BCF    F93.0
0738:  RETURN 0
.................... #include <i2c_Flex_LCD.c>
.................... //----------------------------------------------------------------------------- 
.................... // Title:         i2c_Flex_LCD 
.................... // Description:   Driver for common LCD with 1/2/3 or 4 rows by 1...20 columns 
.................... //                using PCF8574T interface board with I2C protocol. 
.................... // Date:          Nov-2013 
.................... // Ver.Rev.:      1.1 
.................... // Author:        Hugo Silva (sergio-hugo@bol.com.br) #Based on the routines of 
.................... //                "20X4_LCD_I2C_DRIVER.h" from Pumrin S. and "lcd4_i2c.c" from XP8100 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // lcd_init() Must be called before any other function. 
.................... // 
.................... // lcd_putc(c) Will display c on the next position of the LCD. 
.................... //  
.................... //     \f Clear LCD display 
.................... //     \n Set write position on next lcd line 
.................... //     \b LCD backspace 
.................... //     lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1) 
.................... // 
.................... // lcd_backlight_led(ON)/lcd_backlight_led(OFF) = Turn ON/OFF LCD Backlight LED 
.................... // 
.................... //----------------------------------------------------------------------------- 
.................... // LCD pins D0-D3 are not used. 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // Comment   : Control of a compatible LCD (1...4 rows by 1...4 columns) from 
.................... //              a bus I2C with an EXPANDER of I/O with connection I2C. 
.................... //              The tests of these routines have been programmed using the IC 
.................... //              Phillips PCF8574T. I've used 4 bits mode programming. 
.................... //              The 8 bits mode programming is possible if you use 2 x PCF8574T. 
.................... //              RW Pin is not being used. 
.................... // 
.................... // As defined in the following structure the pin connection is as follows: 
.................... // 
.................... //  PCF8574P     LCD 
.................... //  ========     ====== 
.................... //     P0        RS 
.................... //     P1        RW    (Not used!) 
.................... //     P2        Enable  
.................... //     P3        Led Backlight 
.................... //     P4        D4 
.................... //     P5        D5 
.................... //     P6        D6 
.................... //     P7        D7 
.................... // 
.................... //  The SCL and SDA pins should be pull-up resistor as shown below: 
.................... // 
.................... //             +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SDA pin  
.................... //(SDA)                      
.................... //              +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SCL pin  
.................... //(SCL) 
.................... // 
.................... //To PIC                    To i2c slave 
.................... //Vss pin ----------------- Vss or ground pin  
.................... //                | 
.................... //              ----- 
.................... //               ---  Ground 
.................... //                -  
.................... //  
.................... // THIS DOCUMENT IS PROVIDED TO THE USER "AS IS" 
.................... //----------------------------------------------------------------------------- 
.................... byte LCD_ADDR ;//             0x4E        //I2C slave address for LCD module 
.................... byte lcd_total_rows ;//       2           //Number of rows: 1,2,3 or 4 
.................... byte lcd_total_columns ;//    16          //Number of columns: 1...20   
.................... 
.................... #define RS                    0b00000001  //P0 - PCF8574T Pin connected to RS 
.................... #define RW                    0b00000010  //P1 - PCF8574T Pin connected to RW 
.................... #define ENABLE                0b00000100  //P2 - PCF8574T Pin connected to EN 
.................... #define LCD_BACKLIGHT         0b00001000  //P3 - PCF8574T Pin connected to BACKLIGHT LED 
.................... 
.................... #define addr_row_one          0x00        //LCD RAM address for row 1 
.................... #define addr_row_two          0x40        //LCD RAM address for row 2 
.................... #define addr_row_three        0x14        //LCD RAM address for row 3 
.................... #define addr_row_four         0x54        //LCD RAM address for row 4 
.................... 
.................... #define ON                    1 
.................... #define OFF                   0 
.................... #define NOT                   ~ 
.................... #define data_shifted          data<<4 
.................... 
.................... #use delay(clock=4Mhz)
*
06CA:  CLRF   FEA
06CC:  MOVLW  4D
06CE:  MOVWF  FE9
06D0:  MOVF   FEF,W
06D2:  BZ    06F0
06D4:  MOVLW  01
06D6:  MOVWF  01
06D8:  CLRF   00
06DA:  DECFSZ 00,F
06DC:  BRA    06DA
06DE:  DECFSZ 01,F
06E0:  BRA    06D8
06E2:  MOVLW  4A
06E4:  MOVWF  00
06E6:  DECFSZ 00,F
06E8:  BRA    06E6
06EA:  BRA    06EC
06EC:  DECFSZ FEF,F
06EE:  BRA    06D4
06F0:  RETURN 0
.................... int8 new_row_request=1, BACKLIGHT_LED=LCD_BACKLIGHT; 
.................... 
.................... void lcd_backlight_led(byte bl) 
.................... {  
....................       If (bl) BACKLIGHT_LED=LCD_BACKLIGHT; else BACKLIGHT_LED=OFF; 
.................... } 
.................... 
.................... void i2c_send_nibble(byte data, byte type) 
.................... {    
....................    switch (type) 
*
073A:  MOVF   58,W
073C:  XORLW  00
073E:  BZ    0746
0740:  XORLW  01
0742:  BZ    0786
0744:  BRA    07C8
....................    {      
....................       case 0 :      
....................       i2c_write(data_shifted | BACKLIGHT_LED); 
0746:  SWAPF  57,W
0748:  MOVWF  00
074A:  MOVLW  F0
074C:  ANDWF  00,F
074E:  MOVF   00,W
0750:  IORWF  1D,W
0752:  MOVWF  59
0754:  MOVWF  5A
0756:  RCALL  06F2
....................       delay_cycles(1); 
0758:  NOP   
....................       i2c_write(data_shifted | ENABLE | BACKLIGHT_LED ); 
075A:  SWAPF  57,W
075C:  MOVWF  00
075E:  MOVLW  F0
0760:  ANDWF  00,F
0762:  MOVF   00,W
0764:  IORLW  04
0766:  IORWF  1D,W
0768:  MOVWF  59
076A:  MOVWF  5A
076C:  RCALL  06F2
....................       delay_us(2); 
076E:  BRA    0770
....................       i2c_write(data_shifted & NOT ENABLE | BACKLIGHT_LED); 
0770:  SWAPF  57,W
0772:  MOVWF  00
0774:  MOVLW  F0
0776:  ANDWF  00,F
0778:  MOVF   00,W
077A:  ANDLW  FB
077C:  IORWF  1D,W
077E:  MOVWF  59
0780:  MOVWF  5A
0782:  RCALL  06F2
....................       break; 
0784:  BRA    07C8
....................       
....................       case 1 : 
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
0786:  SWAPF  57,W
0788:  MOVWF  00
078A:  MOVLW  F0
078C:  ANDWF  00,F
078E:  MOVF   00,W
0790:  IORLW  01
0792:  IORWF  1D,W
0794:  MOVWF  59
0796:  MOVWF  5A
0798:  RCALL  06F2
....................       delay_cycles(1); 
079A:  NOP   
....................       i2c_write(data_shifted | RS | ENABLE | BACKLIGHT_LED ); 
079C:  SWAPF  57,W
079E:  MOVWF  00
07A0:  MOVLW  F0
07A2:  ANDWF  00,F
07A4:  MOVF   00,W
07A6:  IORLW  01
07A8:  IORLW  04
07AA:  IORWF  1D,W
07AC:  MOVWF  59
07AE:  MOVWF  5A
07B0:  RCALL  06F2
....................       delay_us(2); 
07B2:  BRA    07B4
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
07B4:  SWAPF  57,W
07B6:  MOVWF  00
07B8:  MOVLW  F0
07BA:  ANDWF  00,F
07BC:  MOVF   00,W
07BE:  IORLW  01
07C0:  IORWF  1D,W
07C2:  MOVWF  59
07C4:  MOVWF  5A
07C6:  RCALL  06F2
....................       break; 
....................    } 
07C8:  RETURN 0
.................... } 
....................     
.................... void lcd_send_byte(byte data, byte type) 
....................    { 
....................         i2c_start(); 
07CA:  BSF    F93.0
07CC:  NOP   
07CE:  BSF    F93.1
07D0:  NOP   
07D2:  BCF    F8A.0
07D4:  BCF    F93.0
07D6:  NOP   
07D8:  BCF    F8A.1
07DA:  BCF    F93.1
....................         i2c_write(LCD_ADDR); 
07DC:  MOVFF  19,5A
07E0:  RCALL  06F2
....................         i2c_send_nibble(data >> 4 , type); 
07E2:  SWAPF  54,W
07E4:  MOVWF  56
07E6:  MOVLW  0F
07E8:  ANDWF  56,F
07EA:  MOVFF  56,57
07EE:  MOVFF  55,58
07F2:  RCALL  073A
....................         i2c_send_nibble(data & 0xf , type); 
07F4:  MOVF   54,W
07F6:  ANDLW  0F
07F8:  MOVWF  56
07FA:  MOVWF  57
07FC:  MOVFF  55,58
0800:  RCALL  073A
....................         i2c_stop();        
0802:  BCF    F93.0
0804:  NOP   
0806:  BSF    F93.1
0808:  BTFSS  F81.1
080A:  BRA    0808
080C:  NOP   
080E:  BRA    0810
0810:  NOP   
0812:  BSF    F93.0
0814:  NOP   
0816:  RETURN 0
....................    } 
.................... 
.................... void lcd_clear() 
.................... {  
....................         lcd_send_byte(0x01,0); 
0818:  MOVLW  01
081A:  MOVWF  54
081C:  CLRF   55
081E:  RCALL  07CA
....................         delay_ms(2); 
0820:  MOVLW  02
0822:  MOVWF  4D
0824:  RCALL  06CA
....................         new_row_request=1; 
0826:  MOVLW  01
0828:  MOVWF  1C
082A:  RETURN 0
.................... } 
.................... 
.................... void lcd_init(byte ADDR, byte col, byte row) 
.................... { 
....................    byte i;
....................    byte CONST lcd_type=2;  // 0=5x7, 1=5x10, 2=2 lines 
....................    byte CONST LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; // These bytes need to be sent to the LCD to start it up.
....................    
....................    LCD_ADDR =ADDR;//             0x4E        //I2C slave address for LCD module 
082C:  MOVFF  3F,19
....................    lcd_total_rows =row;//       2           //Number of rows: 1,2,3 or 4 
0830:  MOVFF  41,1A
....................    lcd_total_columns= col ;
0834:  MOVFF  40,1B
....................    disable_interrupts(GLOBAL); 
0838:  BCF    FF2.6
083A:  BCF    FF2.7
083C:  BTFSC  FF2.7
083E:  BRA    083A
....................    delay_ms(50); //LCD power up delay 
0840:  MOVLW  32
0842:  MOVWF  4D
0844:  RCALL  06CA
....................     
....................    i2c_start(); 
0846:  BSF    F93.0
0848:  NOP   
084A:  BSF    F93.1
084C:  NOP   
084E:  BCF    F8A.0
0850:  BCF    F93.0
0852:  NOP   
0854:  BCF    F8A.1
0856:  BCF    F93.1
....................    i2c_write(LCD_ADDR); 
0858:  MOVFF  19,5A
085C:  RCALL  06F2
....................       i2c_send_nibble(0x00,0); 
085E:  CLRF   57
0860:  CLRF   58
0862:  RCALL  073A
....................       delay_ms(15); 
0864:  MOVLW  0F
0866:  MOVWF  4D
0868:  RCALL  06CA
....................     
....................    for (i=1;i<=3;++i)    
086A:  MOVLW  01
086C:  MOVWF  42
086E:  MOVF   42,W
0870:  SUBLW  03
0872:  BNC   0886
....................    { 
....................       i2c_send_nibble(0x03,0); 
0874:  MOVLW  03
0876:  MOVWF  57
0878:  CLRF   58
087A:  RCALL  073A
....................       delay_ms(5); 
087C:  MOVLW  05
087E:  MOVWF  4D
0880:  RCALL  06CA
0882:  INCF   42,F
0884:  BRA    086E
....................    }    
....................       i2c_send_nibble(0x02,0); 
0886:  MOVLW  02
0888:  MOVWF  57
088A:  CLRF   58
088C:  RCALL  073A
....................       delay_ms(5); 
088E:  MOVLW  05
0890:  MOVWF  4D
0892:  RCALL  06CA
....................    i2c_stop(); 
0894:  BCF    F93.0
0896:  NOP   
0898:  BSF    F93.1
089A:  BTFSS  F81.1
089C:  BRA    089A
089E:  NOP   
08A0:  BRA    08A2
08A2:  NOP   
08A4:  BSF    F93.0
08A6:  NOP   
....................     
....................    for (i=0;i<=3;++i) { 
08A8:  CLRF   42
08AA:  MOVF   42,W
08AC:  SUBLW  03
08AE:  BNC   08C8
....................    lcd_send_byte(LCD_INIT_STRING[i],0); 
08B0:  CLRF   03
08B2:  MOVF   42,W
08B4:  RCALL  00BA
08B6:  MOVWF  43
08B8:  MOVWF  54
08BA:  CLRF   55
08BC:  RCALL  07CA
....................    delay_ms(5); 
08BE:  MOVLW  05
08C0:  MOVWF  4D
08C2:  RCALL  06CA
08C4:  INCF   42,F
08C6:  BRA    08AA
....................    } 
....................    lcd_clear();  //Clear Display 
08C8:  RCALL  0818
....................    enable_interrupts(GLOBAL); 
08CA:  MOVLW  C0
08CC:  IORWF  FF2,F
08CE:  GOTO   0EBE (RETURN)
.................... } 
.................... 
.................... void lcd_gotoxy( byte x, byte y) 
.................... { 
.................... byte row,column,row_addr,lcd_address; 
.................... static char data; 
.................... 
....................    if (y>lcd_total_rows) row=lcd_total_rows; else row=y; 
08D2:  MOVF   4E,W
08D4:  SUBWF  1A,W
08D6:  BC    08DE
08D8:  MOVFF  1A,4F
08DC:  BRA    08E2
08DE:  MOVFF  4E,4F
....................   
....................    switch(row) 
08E2:  MOVF   4F,W
08E4:  XORLW  01
08E6:  BZ    08F6
08E8:  XORLW  03
08EA:  BZ    08FA
08EC:  XORLW  01
08EE:  BZ    0900
08F0:  XORLW  07
08F2:  BZ    0906
08F4:  BRA    090C
....................    { 
....................       case 1:  row_addr=addr_row_one;     break; 
08F6:  CLRF   51
08F8:  BRA    090E
....................       case 2:  row_addr=addr_row_two;     break; 
08FA:  MOVLW  40
08FC:  MOVWF  51
08FE:  BRA    090E
....................       case 3:  row_addr=addr_row_three;   break; 
0900:  MOVLW  14
0902:  MOVWF  51
0904:  BRA    090E
....................       case 4:  row_addr=addr_row_four;    break; 
0906:  MOVLW  54
0908:  MOVWF  51
090A:  BRA    090E
....................       default: row_addr=addr_row_one;     break;  
090C:  CLRF   51
....................    }  
....................     
....................    if (x>lcd_total_columns) column=lcd_total_columns; else column=x;  
090E:  MOVF   4D,W
0910:  SUBWF  1B,W
0912:  BC    091A
0914:  MOVFF  1B,50
0918:  BRA    091E
091A:  MOVFF  4D,50
....................    lcd_address=(row_addr+(column-1)); 
091E:  MOVLW  01
0920:  SUBWF  50,W
0922:  ADDWF  51,W
0924:  MOVWF  52
....................    lcd_send_byte(0x80|lcd_address,0); 
0926:  MOVF   52,W
0928:  IORLW  80
092A:  MOVWF  53
092C:  MOVWF  54
092E:  CLRF   55
0930:  RCALL  07CA
0932:  RETURN 0
.................... } 
.................... 
.................... //Display the character on LCD screen. 
.................... void LCD_PUTC(char in_data) 
.................... {    
....................   switch(in_data) 
0934:  MOVF   4C,W
0936:  XORLW  0C
0938:  BZ    0944
093A:  XORLW  06
093C:  BZ    0948
093E:  XORLW  02
0940:  BZ    0960
0942:  BRA    096A
....................    {  
....................      case '\f': lcd_clear();                       break;                
0944:  RCALL  0818
0946:  BRA    0974
....................       
....................      case '\n': 
....................      new_row_request++; 
0948:  INCF   1C,F
....................      if (new_row_request>lcd_total_rows) new_row_request=1; 
094A:  MOVF   1C,W
094C:  SUBWF  1A,W
094E:  BC    0954
0950:  MOVLW  01
0952:  MOVWF  1C
....................      lcd_gotoxy(1, new_row_request); 
0954:  MOVLW  01
0956:  MOVWF  4D
0958:  MOVFF  1C,4E
095C:  RCALL  08D2
....................      break; 
095E:  BRA    0974
....................                   
....................      case '\b': lcd_send_byte(0x10,0);             break; 
0960:  MOVLW  10
0962:  MOVWF  54
0964:  CLRF   55
0966:  RCALL  07CA
0968:  BRA    0974
....................         
....................      default: lcd_send_byte(in_data,1);            break;      
096A:  MOVFF  4C,54
096E:  MOVLW  01
0970:  MOVWF  55
0972:  RCALL  07CA
....................       
....................    } 
0974:  RETURN 0
.................... } 
.................... 
.................... #fuses intrc,nowdt
.................... #use delay(clock=4Mhz)
*
0996:  CLRF   FEA
0998:  MOVLW  40
099A:  MOVWF  FE9
099C:  MOVF   FEF,W
099E:  BZ    09BC
09A0:  MOVLW  01
09A2:  MOVWF  01
09A4:  CLRF   00
09A6:  DECFSZ 00,F
09A8:  BRA    09A6
09AA:  DECFSZ 01,F
09AC:  BRA    09A4
09AE:  MOVLW  4A
09B0:  MOVWF  00
09B2:  DECFSZ 00,F
09B4:  BRA    09B2
09B6:  BRA    09B8
09B8:  DECFSZ FEF,F
09BA:  BRA    09A0
09BC:  RETURN 0
.................... //#include <lcd.c>
.................... #use fast_io(a)
.................... float Lecturaad620;
.................... int32 valor_recarga = 63899;
.................... //int32 valor_recarga = 0;
.................... int direccionI2C = 0x4E;
.................... int filas = 2;
.................... int columnas = 16;
.................... int pulsos_555 =  0;
.................... int1 bandera_prueba_555;
.................... int1 bandera_estado_555;
.................... int32 value;
.................... int opambuenos = 0;
.................... int1 NPN_estado;
.................... int1 PNP_estado;
.................... 
.................... #INT_EXT2
.................... void pulsos() {
....................    pulsos_555 = pulsos_555 + 1;
*
00CE:  MOVLW  01
00D0:  ADDWF  2A,F
....................    CLEAR_INTERRUPT(INT_EXT2);
00D2:  BCF    FF0.1
.................... }
.................... 
00D4:  BCF    FF0.1
00D6:  GOTO   006C
.................... #INT_RTCC 
.................... void tiempo_final_555() {
....................    DISABLE_INTERRUPTS(INT_EXT2);// Inhabilitar las interrupciones del timer0
00DA:  BCF    FF0.4
....................    DISABLE_INTERRUPTS(INT_RTCC);
00DC:  BCF    FF2.5
....................    bandera_prueba_555 = 0;
00DE:  BCF    2B.0
....................    if (pulsos_555 > 9) {
00E0:  MOVF   2A,W
00E2:  SUBLW  09
00E4:  BC    00EA
....................       bandera_estado_555 = 1;
00E6:  BSF    2B.1
....................    }
00E8:  BRA    00EC
....................    
....................    else {
....................       bandera_estado_555 = 0;
00EA:  BCF    2B.1
....................    }
....................    
....................    CLEAR_INTERRUPT(INT_RTCC);
00EC:  BCF    FF2.2
00EE:  BCF    FF2.2
00F0:  GOTO   006C
.................... }
.................... 
.................... int Boton(){
....................          if(input(PIN_A3)) {
*
09BE:  BTFSS  F80.3
09C0:  BRA    09CA
....................             return 1;
09C2:  MOVLW  01
09C4:  MOVWF  01
09C6:  BRA    09F2
....................             } else if(input(PIN_A4)) {
09C8:  BRA    09EE
09CA:  BTFSS  F80.4
09CC:  BRA    09D6
....................             return 2;
09CE:  MOVLW  02
09D0:  MOVWF  01
09D2:  BRA    09F2
....................             } else if(input(PIN_A5 )) {
09D4:  BRA    09EE
09D6:  BTFSS  F80.5
09D8:  BRA    09E2
....................             return 3;
09DA:  MOVLW  03
09DC:  MOVWF  01
09DE:  BRA    09F2
....................             } else if (input(PIN_C0)){
09E0:  BRA    09EE
09E2:  BSF    F94.0
09E4:  BTFSS  F82.0
09E6:  BRA    09EE
....................             return 4;
09E8:  MOVLW  04
09EA:  MOVWF  01
09EC:  BRA    09F2
....................             }
....................             return 0;
09EE:  MOVLW  00
09F0:  MOVWF  01
09F2:  RETURN 0
....................          }
.................... void main(){
*
0E56:  CLRF   FF8
0E58:  BCF    FD0.7
0E5A:  BSF    07.7
0E5C:  MOVLW  01
0E5E:  MOVWF  1C
0E60:  MOVLW  08
0E62:  MOVWF  1D
0E64:  CLRF   26
0E66:  CLRF   25
0E68:  MOVLW  F9
0E6A:  MOVWF  24
0E6C:  MOVLW  9B
0E6E:  MOVWF  23
0E70:  MOVLW  4E
0E72:  MOVWF  27
0E74:  MOVLW  02
0E76:  MOVWF  28
0E78:  MOVLW  10
0E7A:  MOVWF  29
0E7C:  CLRF   2A
0E7E:  CLRF   30
0E80:  CLRF   32
0E82:  CLRF   31
0E84:  MOVF   FC1,W
0E86:  ANDLW  C0
0E88:  IORLW  0F
0E8A:  MOVWF  FC1
0E8C:  MOVLW  07
0E8E:  MOVWF  FB4
0E90:  CLRF   1E
....................       setup_oscillator(OSC_4MHZ);
0E92:  MOVLW  60
0E94:  MOVWF  FD3
0E96:  MOVF   FD3,W
....................       set_tris_a(0xff);// puerto a entrada
0E98:  MOVLW  FF
0E9A:  MOVWF  F92
....................       set_tris_d(0x00);// puerto d salida
0E9C:  MOVLW  00
0E9E:  MOVWF  F95
....................       set_tris_c(0xff);// puerto c entrada
0EA0:  MOVLW  FF
0EA2:  MOVWF  F94
....................       SETUP_COUNTERS(RTCC_INTERNAL,RTCC_DIV_256);
0EA4:  BCF    FD1.0
0EA6:  MOVLW  87
0EA8:  MOVWF  FD5
....................       ENABLE_INTERRUPTS(GLOBAL);// Habilita las interrupciones globales
0EAA:  MOVLW  C0
0EAC:  IORWF  FF2,F
....................       ext_int_edge(H_TO_L); //Inicia el flanco de la interruccion de alto abajo
0EAE:  BCF    FF1.6
....................       lcd_init(direccionI2C,filas,columnas);
0EB0:  MOVFF  27,3F
0EB4:  MOVFF  28,40
0EB8:  MOVFF  29,41
0EBC:  BRA    082C
....................       setup_adc_ports(0x0e);
0EBE:  MOVF   FC1,W
0EC0:  ANDLW  C0
0EC2:  IORLW  0E
0EC4:  MOVWF  FC1
....................       setup_adc(adc_clock_internal);
0EC6:  MOVF   FC0,W
0EC8:  ANDLW  C0
0ECA:  IORLW  07
0ECC:  MOVWF  FC0
0ECE:  BSF    FC0.7
0ED0:  BSF    FC2.0
....................             /**
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(5,1);
....................       printf(lcd_putc," UNEXPO");
....................       lcd_gotoxy(2,2);
....................       printf(lcd_putc," BARQUISIMETO");
....................       delay_ms(3000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Daniela Canas");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Gabriel Gimenez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Guedez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Zambrano");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Tutor]");
....................       delay_ms(1000);
....................       **/
....................       
.................... MENUPRINCIPAL:
....................       while(true){
....................           printf(lcd_putc,"\f");
0ED2:  MOVLW  0C
0ED4:  MOVWF  4C
0ED6:  MOVLB  0
0ED8:  RCALL  0934
....................           lcd_gotoxy(0,1);
0EDA:  CLRF   4D
0EDC:  MOVLW  01
0EDE:  MOVWF  4E
0EE0:  RCALL  08D2
....................           printf(lcd_putc," MENU PRINCIPAL");
0EE2:  MOVLW  F4
0EE4:  MOVWF  FF6
0EE6:  MOVLW  00
0EE8:  MOVWF  FF7
0EEA:  RCALL  0976
....................           lcd_gotoxy(0,2);
0EEC:  CLRF   4D
0EEE:  MOVLW  02
0EF0:  MOVWF  4E
0EF2:  RCALL  08D2
....................           printf(lcd_putc," 1>AD620 3>NEXT");
0EF4:  MOVLW  04
0EF6:  MOVWF  FF6
0EF8:  MOVLW  01
0EFA:  MOVWF  FF7
0EFC:  RCALL  0976
....................           delay_ms(1000);
0EFE:  MOVLW  04
0F00:  MOVWF  3F
0F02:  MOVLW  FA
0F04:  MOVWF  40
0F06:  RCALL  0996
0F08:  DECFSZ 3F,F
0F0A:  BRA    0F02
....................           while(1){
....................              if(Boton()==1){
0F0C:  RCALL  09BE
0F0E:  DECFSZ 01,W
0F10:  BRA    103E
....................                while(1){
....................                   set_adc_channel(0);
0F12:  MOVLW  00
0F14:  MOVWF  01
0F16:  MOVF   FC2,W
0F18:  ANDLW  C3
0F1A:  IORWF  01,W
0F1C:  MOVWF  FC2
....................                   delay_us(20);
0F1E:  MOVLW  06
0F20:  MOVWF  00
0F22:  DECFSZ 00,F
0F24:  BRA    0F22
0F26:  NOP   
....................                   float valor_adc = read_adc();
....................                   float lectura= valor_adc*0.004886;
....................                   float Lecturaad620=lectura;
0F28:  BSF    FC2.1
0F2A:  BTFSC  FC2.1
0F2C:  BRA    0F2A
0F2E:  MOVFF  FC4,02
0F32:  MOVFF  FC3,01
0F36:  MOVFF  FC4,03
0F3A:  MOVFF  FC3,3F
0F3E:  MOVFF  FC4,40
0F42:  BRA    09F4
0F44:  MOVFF  03,36
0F48:  MOVFF  02,35
0F4C:  MOVFF  01,34
0F50:  MOVFF  00,33
0F54:  MOVFF  36,4F
0F58:  MOVFF  35,4E
0F5C:  MOVFF  34,4D
0F60:  MOVFF  33,4C
0F64:  MOVLW  BD
0F66:  MOVWF  53
0F68:  MOVLW  1A
0F6A:  MOVWF  52
0F6C:  MOVLW  20
0F6E:  MOVWF  51
0F70:  MOVLW  77
0F72:  MOVWF  50
0F74:  RCALL  0A2C
0F76:  MOVFF  03,3A
0F7A:  MOVFF  02,39
0F7E:  MOVFF  01,38
0F82:  MOVFF  00,37
0F86:  MOVFF  3A,3E
0F8A:  MOVFF  39,3D
0F8E:  MOVFF  38,3C
0F92:  MOVFF  37,3B
....................                   printf(lcd_putc,"\f"); //Limpiar la pantalla
0F96:  MOVLW  0C
0F98:  MOVWF  4C
0F9A:  RCALL  0934
....................                   lcd_gotoxy(0,1);
0F9C:  CLRF   4D
0F9E:  MOVLW  01
0FA0:  MOVWF  4E
0FA2:  RCALL  08D2
....................                   printf(lcd_putc," AD620 Testing..."); //  escribir eso
0FA4:  MOVLW  14
0FA6:  MOVWF  FF6
0FA8:  MOVLW  01
0FAA:  MOVWF  FF7
0FAC:  RCALL  0976
....................                   lcd_gotoxy(0,2);
0FAE:  CLRF   4D
0FB0:  MOVLW  02
0FB2:  MOVWF  4E
0FB4:  RCALL  08D2
....................                   printf(lcd_putc," V:%0.2f. 2>Ret",Lecturaad620);
0FB6:  MOVLW  26
0FB8:  MOVWF  FF6
0FBA:  MOVLW  01
0FBC:  MOVWF  FF7
0FBE:  MOVLW  03
0FC0:  MOVWF  3F
0FC2:  RCALL  0B1E
0FC4:  MOVLW  C9
0FC6:  MOVWF  FE9
0FC8:  MOVFF  3E,42
0FCC:  MOVFF  3D,41
0FD0:  MOVFF  3C,40
0FD4:  MOVFF  3B,3F
0FD8:  MOVLW  02
0FDA:  MOVWF  43
0FDC:  BRA    0C0A
0FDE:  MOVLW  2E
0FE0:  MOVWF  FF6
0FE2:  MOVLW  01
0FE4:  MOVWF  FF7
0FE6:  MOVLW  07
0FE8:  MOVWF  3F
0FEA:  RCALL  0B1E
....................                   delay_ms(500);
0FEC:  MOVLW  02
0FEE:  MOVWF  3F
0FF0:  MOVLW  FA
0FF2:  MOVWF  40
0FF4:  RCALL  0996
0FF6:  DECFSZ 3F,F
0FF8:  BRA    0FF0
....................                   if(Boton()==2){
0FFA:  RCALL  09BE
0FFC:  MOVF   01,W
0FFE:  SUBLW  02
1000:  BNZ   103C
....................                      printf(lcd_putc,"\f");
1002:  MOVLW  0C
1004:  MOVWF  4C
1006:  RCALL  0934
....................                      lcd_gotoxy(0,1);
1008:  CLRF   4D
100A:  MOVLW  01
100C:  MOVWF  4E
100E:  RCALL  08D2
....................                      printf(lcd_putc," MENU PRINCIPAL");
1010:  MOVLW  36
1012:  MOVWF  FF6
1014:  MOVLW  01
1016:  MOVWF  FF7
1018:  RCALL  0976
....................                      lcd_gotoxy(0,2);
101A:  CLRF   4D
101C:  MOVLW  02
101E:  MOVWF  4E
1020:  RCALL  08D2
....................                      printf(lcd_putc," 1>AD620 3>NEXT");
1022:  MOVLW  46
1024:  MOVWF  FF6
1026:  MOVLW  01
1028:  MOVWF  FF7
102A:  RCALL  0976
....................                      delay_ms(1000);
102C:  MOVLW  04
102E:  MOVWF  3F
1030:  MOVLW  FA
1032:  MOVWF  40
1034:  RCALL  0996
1036:  DECFSZ 3F,F
1038:  BRA    1030
....................                      break;
103A:  BRA    103E
....................                   }
103C:  BRA    0F12
....................                 }     
....................              }
....................              if(Boton()==3){
103E:  RCALL  09BE
1040:  MOVF   01,W
1042:  SUBLW  03
1044:  BTFSS  FD8.2
1046:  GOTO   1E2E
....................                printf(lcd_putc,"\f");
104A:  MOVLW  0C
104C:  MOVWF  4C
104E:  RCALL  0934
....................                lcd_gotoxy(0,1);
1050:  CLRF   4D
1052:  MOVLW  01
1054:  MOVWF  4E
1056:  RCALL  08D2
....................                printf(lcd_putc," 1>555 2>LM224");
1058:  MOVLW  56
105A:  MOVWF  FF6
105C:  MOVLW  01
105E:  MOVWF  FF7
1060:  RCALL  0976
....................                lcd_gotoxy(0,2);
1062:  CLRF   4D
1064:  MOVLW  02
1066:  MOVWF  4E
1068:  RCALL  08D2
....................                printf(lcd_putc," 4>741 3>Pag.Sig.");
106A:  MOVLW  66
106C:  MOVWF  FF6
106E:  MOVLW  01
1070:  MOVWF  FF7
1072:  RCALL  0976
....................                delay_ms(1000);
1074:  MOVLW  04
1076:  MOVWF  3F
1078:  MOVLW  FA
107A:  MOVWF  40
107C:  RCALL  0996
107E:  DECFSZ 3F,F
1080:  BRA    1078
....................                while(1){
....................                   if(Boton()==1){
1082:  RCALL  09BE
1084:  DECFSZ 01,W
1086:  BRA    127A
....................                         bandera_prueba_555 = 1;
1088:  BSF    2B.0
....................                         SET_TIMER0(valor_recarga);
108A:  MOVFF  24,FD7
108E:  MOVFF  23,FD6
1092:  NOP   
....................                         value=get_timer0();
1094:  MOVF   FD6,W
1096:  MOVWF  2C
1098:  MOVFF  FD7,2D
109C:  CLRF   2E
109E:  CLRF   2F
....................                         ENABLE_INTERRUPTS(INT_RTCC);
10A0:  BSF    FF2.5
....................                         ENABLE_INTERRUPTS(INT_EXT2);// Habilita las interrupciones externas
10A2:  BSF    FF0.4
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
10A4:  MOVLW  0C
10A6:  MOVWF  4C
10A8:  RCALL  0934
....................                         lcd_gotoxy(0,1);
10AA:  CLRF   4D
10AC:  MOVLW  01
10AE:  MOVWF  4E
10B0:  RCALL  08D2
....................                         printf(lcd_putc," 555 Testing..."); //  escribir eso
10B2:  MOVLW  78
10B4:  MOVWF  FF6
10B6:  MOVLW  01
10B8:  MOVWF  FF7
10BA:  RCALL  0976
....................                         lcd_gotoxy(0,2);
10BC:  CLRF   4D
10BE:  MOVLW  02
10C0:  MOVWF  4E
10C2:  RCALL  08D2
....................                         printf(lcd_putc," 2>Volver");
10C4:  MOVLW  88
10C6:  MOVWF  FF6
10C8:  MOVLW  01
10CA:  MOVWF  FF7
10CC:  RCALL  0976
....................                             
....................                         while(bandera_prueba_555 == 1) {
10CE:  BTFSS  2B.0
10D0:  BRA    110C
....................                            if (Boton() == 2) {                        
10D2:  RCALL  09BE
10D4:  MOVF   01,W
10D6:  SUBLW  02
10D8:  BNZ   110A
....................                               printf(lcd_putc,"\f");
10DA:  MOVLW  0C
10DC:  MOVWF  4C
10DE:  RCALL  0934
....................                               lcd_gotoxy(0,1);
10E0:  CLRF   4D
10E2:  MOVLW  01
10E4:  MOVWF  4E
10E6:  CALL   08D2
....................                               printf(lcd_putc," 1>555 2>LM224");
10EA:  MOVLW  92
10EC:  MOVWF  FF6
10EE:  MOVLW  01
10F0:  MOVWF  FF7
10F2:  RCALL  0976
....................                               lcd_gotoxy(0,2);
10F4:  CLRF   4D
10F6:  MOVLW  02
10F8:  MOVWF  4E
10FA:  CALL   08D2
....................                               printf(lcd_putc," 4>741 3>Pag.Sig.");
10FE:  MOVLW  A2
1100:  MOVWF  FF6
1102:  MOVLW  01
1104:  MOVWF  FF7
1106:  RCALL  0976
....................                               break;
1108:  BRA    110C
....................                            }
110A:  BRA    10CE
....................                         }
....................                         
....................                         if (bandera_prueba_555 == 0) {
110C:  BTFSC  2B.0
110E:  BRA    1214
....................                            if (bandera_estado_555 == 0) {
1110:  BTFSC  2B.1
1112:  BRA    118E
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
1114:  MOVLW  0C
1116:  MOVWF  4C
1118:  RCALL  0934
....................                               lcd_gotoxy(0,1);
111A:  CLRF   4D
111C:  MOVLW  01
111E:  MOVWF  4E
1120:  CALL   08D2
....................                               printf(lcd_putc,"Malo %i", pulsos_555); //  escribir eso
1124:  MOVLW  B4
1126:  MOVWF  FF6
1128:  MOVLW  01
112A:  MOVWF  FF7
112C:  MOVLW  05
112E:  MOVWF  3F
1130:  RCALL  0B1E
1132:  MOVFF  2A,3F
1136:  MOVLW  18
1138:  MOVWF  40
113A:  RCALL  0DAC
....................                               lcd_gotoxy(0,2);
113C:  CLRF   4D
113E:  MOVLW  02
1140:  MOVWF  4E
1142:  CALL   08D2
....................                               printf(lcd_putc," 2>Volver");
1146:  MOVLW  BC
1148:  MOVWF  FF6
114A:  MOVLW  01
114C:  MOVWF  FF7
114E:  RCALL  0976
....................                               while(1) {
....................                                  if(Boton() == 2) {
1150:  RCALL  09BE
1152:  MOVF   01,W
1154:  SUBLW  02
1156:  BNZ   118C
....................                                     printf(lcd_putc,"\f");
1158:  MOVLW  0C
115A:  MOVWF  4C
115C:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1160:  CLRF   4D
1162:  MOVLW  01
1164:  MOVWF  4E
1166:  CALL   08D2
....................                                     printf(lcd_putc," 1>555 2>LM224");
116A:  MOVLW  C6
116C:  MOVWF  FF6
116E:  MOVLW  01
1170:  MOVWF  FF7
1172:  RCALL  0976
....................                                     lcd_gotoxy(0,2);
1174:  CLRF   4D
1176:  MOVLW  02
1178:  MOVWF  4E
117A:  CALL   08D2
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
117E:  MOVLW  D6
1180:  MOVWF  FF6
1182:  MOVLW  01
1184:  MOVWF  FF7
1186:  CALL   0976
....................                                     break;
118A:  BRA    118E
....................                                  }
118C:  BRA    1150
....................                               }
....................                            }
....................                            
....................                            if (bandera_estado_555 == 1) {
118E:  BTFSS  2B.1
1190:  BRA    1214
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
1192:  MOVLW  0C
1194:  MOVWF  4C
1196:  CALL   0934
....................                               lcd_gotoxy(0,1);
119A:  CLRF   4D
119C:  MOVLW  01
119E:  MOVWF  4E
11A0:  CALL   08D2
....................                               printf(lcd_putc,"Bueno %i", pulsos_555); //  escribir eso
11A4:  MOVLW  E8
11A6:  MOVWF  FF6
11A8:  MOVLW  01
11AA:  MOVWF  FF7
11AC:  MOVLW  06
11AE:  MOVWF  3F
11B0:  RCALL  0B1E
11B2:  MOVFF  2A,3F
11B6:  MOVLW  18
11B8:  MOVWF  40
11BA:  RCALL  0DAC
....................                               lcd_gotoxy(0,2);
11BC:  CLRF   4D
11BE:  MOVLW  02
11C0:  MOVWF  4E
11C2:  CALL   08D2
....................                               printf(lcd_putc," 2>Volver");
11C6:  MOVLW  F2
11C8:  MOVWF  FF6
11CA:  MOVLW  01
11CC:  MOVWF  FF7
11CE:  CALL   0976
....................                               while(1) {
....................                                  if(Boton() == 2) {
11D2:  CALL   09BE
11D6:  MOVF   01,W
11D8:  SUBLW  02
11DA:  BNZ   1212
....................                                     printf(lcd_putc,"\f");
11DC:  MOVLW  0C
11DE:  MOVWF  4C
11E0:  CALL   0934
....................                                     lcd_gotoxy(0,1);
11E4:  CLRF   4D
11E6:  MOVLW  01
11E8:  MOVWF  4E
11EA:  CALL   08D2
....................                                     printf(lcd_putc," 1>555 2>LM224");
11EE:  MOVLW  FC
11F0:  MOVWF  FF6
11F2:  MOVLW  01
11F4:  MOVWF  FF7
11F6:  CALL   0976
....................                                     lcd_gotoxy(0,2);
11FA:  CLRF   4D
11FC:  MOVLW  02
11FE:  MOVWF  4E
1200:  CALL   08D2
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
1204:  MOVLW  0C
1206:  MOVWF  FF6
1208:  MOVLW  02
120A:  MOVWF  FF7
120C:  CALL   0976
....................                                     break;
1210:  BRA    1214
....................                                  }
1212:  BRA    11D2
....................                               }
....................                            }
....................                         }
....................                         bandera_prueba_555 = 0;
1214:  BCF    2B.0
....................                         pulsos_555 = 0;
1216:  CLRF   2A
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
1218:  MOVLW  0C
121A:  MOVWF  4C
121C:  CALL   0934
....................                         lcd_gotoxy(0,2);
1220:  CLRF   4D
1222:  MOVLW  02
1224:  MOVWF  4E
1226:  CALL   08D2
....................                         printf(lcd_putc," Regresando...");
122A:  MOVLW  1E
122C:  MOVWF  FF6
122E:  MOVLW  02
1230:  MOVWF  FF7
1232:  CALL   0976
....................                         printf(lcd_putc,"\f");
1236:  MOVLW  0C
1238:  MOVWF  4C
123A:  CALL   0934
....................                         lcd_gotoxy(0,1);
123E:  CLRF   4D
1240:  MOVLW  01
1242:  MOVWF  4E
1244:  CALL   08D2
....................                         printf(lcd_putc," 1>555 2>LM224");
1248:  MOVLW  2E
124A:  MOVWF  FF6
124C:  MOVLW  02
124E:  MOVWF  FF7
1250:  CALL   0976
....................                         lcd_gotoxy(0,2);
1254:  CLRF   4D
1256:  MOVLW  02
1258:  MOVWF  4E
125A:  CALL   08D2
....................                         printf(lcd_putc," 4>741 3>Pag.Sig.");
125E:  MOVLW  3E
1260:  MOVWF  FF6
1262:  MOVLW  02
1264:  MOVWF  FF7
1266:  CALL   0976
....................                         delay_ms(1000);
126A:  MOVLW  04
126C:  MOVWF  3F
126E:  MOVLW  FA
1270:  MOVWF  40
1272:  CALL   0996
1276:  DECFSZ 3F,F
1278:  BRA    126E
....................                      }
....................                 
....................                   if(Boton()==2){
127A:  CALL   09BE
127E:  MOVF   01,W
1280:  SUBLW  02
1282:  BTFSS  FD8.2
1284:  BRA    149C
....................                         while(1){
....................                             output_high(PIN_B7); // Colocar en alto pin B7 
1286:  BCF    F93.7
1288:  BSF    F8A.7
....................                             printf(lcd_putc,"\f"); //Limpiar la pantalla
128A:  MOVLW  0C
128C:  MOVWF  4C
128E:  CALL   0934
....................                             lcd_gotoxy(0,1);
1292:  CLRF   4D
1294:  MOVLW  01
1296:  MOVWF  4E
1298:  CALL   08D2
....................                             printf(lcd_putc," LM224 Testing..."); //  escribir eso
129C:  MOVLW  50
129E:  MOVWF  FF6
12A0:  MOVLW  02
12A2:  MOVWF  FF7
12A4:  CALL   0976
....................                             lcd_gotoxy(0,2);
12A8:  CLRF   4D
12AA:  MOVLW  02
12AC:  MOVWF  4E
12AE:  CALL   08D2
....................                             printf(lcd_putc," 2>Volver");
12B2:  MOVLW  62
12B4:  MOVWF  FF6
12B6:  MOVLW  02
12B8:  MOVWF  FF7
12BA:  CALL   0976
....................                             delay_ms(1000);
12BE:  MOVLW  04
12C0:  MOVWF  3F
12C2:  MOVLW  FA
12C4:  MOVWF  40
12C6:  CALL   0996
12CA:  DECFSZ 3F,F
12CC:  BRA    12C2
....................                             if(input(PIN_C0)==1){
12CE:  BSF    F94.0
12D0:  BTFSS  F82.0
12D2:  BRA    131C
....................                                  printf(lcd_putc,"\f");
12D4:  MOVLW  0C
12D6:  MOVWF  4C
12D8:  CALL   0934
....................                                  lcd_gotoxy(0,1);
12DC:  CLRF   4D
12DE:  MOVLW  01
12E0:  MOVWF  4E
12E2:  CALL   08D2
....................                                  printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
12E6:  MOVLW  6C
12E8:  MOVWF  FF6
12EA:  MOVLW  02
12EC:  MOVWF  FF7
12EE:  CALL   0976
....................                                  lcd_gotoxy(0,2);
12F2:  CLRF   4D
12F4:  MOVLW  02
12F6:  MOVWF  4E
12F8:  CALL   08D2
....................                                  printf(lcd_putc," LM224 Testing...");
12FC:  MOVLW  7C
12FE:  MOVWF  FF6
1300:  MOVLW  02
1302:  MOVWF  FF7
1304:  CALL   0976
....................                                  delay_ms(500);
1308:  MOVLW  02
130A:  MOVWF  3F
130C:  MOVLW  FA
130E:  MOVWF  40
1310:  CALL   0996
1314:  DECFSZ 3F,F
1316:  BRA    130C
....................                                  opambuenos = opambuenos + 1;
1318:  MOVLW  01
131A:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C1)==1){
131C:  BSF    F94.1
131E:  BTFSS  F82.1
1320:  BRA    136A
....................                                  printf(lcd_putc,"\f");
1322:  MOVLW  0C
1324:  MOVWF  4C
1326:  CALL   0934
....................                                  lcd_gotoxy(0,1);
132A:  CLRF   4D
132C:  MOVLW  01
132E:  MOVWF  4E
1330:  CALL   08D2
....................                                  printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
1334:  MOVLW  8E
1336:  MOVWF  FF6
1338:  MOVLW  02
133A:  MOVWF  FF7
133C:  CALL   0976
....................                                  lcd_gotoxy(0,2);
1340:  CLRF   4D
1342:  MOVLW  02
1344:  MOVWF  4E
1346:  CALL   08D2
....................                                  printf(lcd_putc," LM224 Testing...");
134A:  MOVLW  9E
134C:  MOVWF  FF6
134E:  MOVLW  02
1350:  MOVWF  FF7
1352:  CALL   0976
....................                                  delay_ms(500);
1356:  MOVLW  02
1358:  MOVWF  3F
135A:  MOVLW  FA
135C:  MOVWF  40
135E:  CALL   0996
1362:  DECFSZ 3F,F
1364:  BRA    135A
....................                                  opambuenos = opambuenos + 1;
1366:  MOVLW  01
1368:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C2)==1){
136A:  BSF    F94.2
136C:  BTFSS  F82.2
136E:  BRA    13B8
....................                                  printf(lcd_putc,"\f");
1370:  MOVLW  0C
1372:  MOVWF  4C
1374:  CALL   0934
....................                                  lcd_gotoxy(0,1);
1378:  CLRF   4D
137A:  MOVLW  01
137C:  MOVWF  4E
137E:  CALL   08D2
....................                                  printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
1382:  MOVLW  B0
1384:  MOVWF  FF6
1386:  MOVLW  02
1388:  MOVWF  FF7
138A:  CALL   0976
....................                                  lcd_gotoxy(0,2);
138E:  CLRF   4D
1390:  MOVLW  02
1392:  MOVWF  4E
1394:  CALL   08D2
....................                                  printf(lcd_putc," LM224 Testing...");
1398:  MOVLW  C0
139A:  MOVWF  FF6
139C:  MOVLW  02
139E:  MOVWF  FF7
13A0:  CALL   0976
....................                                  delay_ms(500);
13A4:  MOVLW  02
13A6:  MOVWF  3F
13A8:  MOVLW  FA
13AA:  MOVWF  40
13AC:  CALL   0996
13B0:  DECFSZ 3F,F
13B2:  BRA    13A8
....................                                  opambuenos = opambuenos + 1;
13B4:  MOVLW  01
13B6:  ADDWF  30,F
....................                             } 
....................                             if(input(PIN_C5)==1){
13B8:  BSF    F94.5
13BA:  BTFSS  F82.5
13BC:  BRA    1406
....................                                  printf(lcd_putc,"\f");
13BE:  MOVLW  0C
13C0:  MOVWF  4C
13C2:  CALL   0934
....................                                  lcd_gotoxy(0,1);
13C6:  CLRF   4D
13C8:  MOVLW  01
13CA:  MOVWF  4E
13CC:  CALL   08D2
....................                                  printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
13D0:  MOVLW  D2
13D2:  MOVWF  FF6
13D4:  MOVLW  02
13D6:  MOVWF  FF7
13D8:  CALL   0976
....................                                  lcd_gotoxy(0,2);
13DC:  CLRF   4D
13DE:  MOVLW  02
13E0:  MOVWF  4E
13E2:  CALL   08D2
....................                                  printf(lcd_putc," LM224 Testing...");
13E6:  MOVLW  E2
13E8:  MOVWF  FF6
13EA:  MOVLW  02
13EC:  MOVWF  FF7
13EE:  CALL   0976
....................                                  delay_ms(500);
13F2:  MOVLW  02
13F4:  MOVWF  3F
13F6:  MOVLW  FA
13F8:  MOVWF  40
13FA:  CALL   0996
13FE:  DECFSZ 3F,F
1400:  BRA    13F6
....................                                  opambuenos = opambuenos + 1;
1402:  MOVLW  01
1404:  ADDWF  30,F
....................                             }   
....................                             if(opambuenos>=1){
1406:  MOVF   30,W
1408:  SUBLW  00
140A:  BC    149A
....................                                  output_low(PIN_B7); // Colocar en bajo pin B0
140C:  BCF    F93.7
140E:  BCF    F8A.7
....................                                  printf(lcd_putc,"\f"); //Limpiar la pantalla
1410:  MOVLW  0C
1412:  MOVWF  4C
1414:  CALL   0934
....................                                  lcd_gotoxy(0,1);
1418:  CLRF   4D
141A:  MOVLW  01
141C:  MOVWF  4E
141E:  CALL   08D2
....................                                  printf(lcd_putc," Buenos %i", opambuenos);
1422:  MOVLW  F4
1424:  MOVWF  FF6
1426:  MOVLW  02
1428:  MOVWF  FF7
142A:  MOVLW  08
142C:  MOVWF  3F
142E:  CALL   0B1E
1432:  MOVFF  30,3F
1436:  MOVLW  18
1438:  MOVWF  40
143A:  RCALL  0DAC
....................                                  lcd_gotoxy(0,2);
143C:  CLRF   4D
143E:  MOVLW  02
1440:  MOVWF  4E
1442:  CALL   08D2
....................                                  printf(lcd_putc," Regresando..");
1446:  MOVLW  00
1448:  MOVWF  FF6
144A:  MOVLW  03
144C:  MOVWF  FF7
144E:  CALL   0976
....................                                  delay_ms(1000);
1452:  MOVLW  04
1454:  MOVWF  3F
1456:  MOVLW  FA
1458:  MOVWF  40
145A:  CALL   0996
145E:  DECFSZ 3F,F
1460:  BRA    1456
....................                                  opambuenos = 0;
1462:  CLRF   30
....................                                  printf(lcd_putc,"\f");
1464:  MOVLW  0C
1466:  MOVWF  4C
1468:  CALL   0934
....................                                  lcd_gotoxy(0,1);
146C:  CLRF   4D
146E:  MOVLW  01
1470:  MOVWF  4E
1472:  CALL   08D2
....................                                  printf(lcd_putc," 1>555 2>LM224");
1476:  MOVLW  0E
1478:  MOVWF  FF6
147A:  MOVLW  03
147C:  MOVWF  FF7
147E:  CALL   0976
....................                                  lcd_gotoxy(0,2);
1482:  CLRF   4D
1484:  MOVLW  02
1486:  MOVWF  4E
1488:  CALL   08D2
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
148C:  MOVLW  1E
148E:  MOVWF  FF6
1490:  MOVLW  03
1492:  MOVWF  FF7
1494:  CALL   0976
....................                                 break;
1498:  BRA    149C
....................                             }
149A:  BRA    1286
....................                         } 
....................                   }
....................                   if(Boton()==4){
149C:  CALL   09BE
14A0:  MOVF   01,W
14A2:  SUBLW  04
14A4:  BTFSS  FD8.2
14A6:  BRA    15E8
....................                         while(1){
....................                         output_high(PIN_B7); // Colocar en alto pin B0 
14A8:  BCF    F93.7
14AA:  BSF    F8A.7
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
14AC:  MOVLW  0C
14AE:  MOVWF  4C
14B0:  CALL   0934
....................                         lcd_gotoxy(0,1);
14B4:  CLRF   4D
14B6:  MOVLW  01
14B8:  MOVWF  4E
14BA:  CALL   08D2
....................                         printf(lcd_putc," 741 Testing..."); //  escribir eso
14BE:  MOVLW  30
14C0:  MOVWF  FF6
14C2:  MOVLW  03
14C4:  MOVWF  FF7
14C6:  CALL   0976
....................                         lcd_gotoxy(0,2);
14CA:  CLRF   4D
14CC:  MOVLW  02
14CE:  MOVWF  4E
14D0:  CALL   08D2
....................                         printf(lcd_putc," 2>Volver");
14D4:  MOVLW  40
14D6:  MOVWF  FF6
14D8:  MOVLW  03
14DA:  MOVWF  FF7
14DC:  CALL   0976
....................                         delay_ms(1000);
14E0:  MOVLW  04
14E2:  MOVWF  3F
14E4:  MOVLW  FA
14E6:  MOVWF  40
14E8:  CALL   0996
14EC:  DECFSZ 3F,F
14EE:  BRA    14E4
....................                         if(input(PIN_C1)==1){
14F0:  BSF    F94.1
14F2:  BTFSS  F82.1
14F4:  BRA    1574
....................                                  printf(lcd_putc,"\f");
14F6:  MOVLW  0C
14F8:  MOVWF  4C
14FA:  CALL   0934
....................                                  lcd_gotoxy(0,1);
14FE:  CLRF   4D
1500:  MOVLW  01
1502:  MOVWF  4E
1504:  CALL   08D2
....................                                  printf(lcd_putc," AmpOp Bueno!"); //  escribir eso
1508:  MOVLW  4A
150A:  MOVWF  FF6
150C:  MOVLW  03
150E:  MOVWF  FF7
1510:  CALL   0976
....................                                  lcd_gotoxy(0,2);
1514:  CLRF   4D
1516:  MOVLW  02
1518:  MOVWF  4E
151A:  CALL   08D2
....................                                  printf(lcd_putc," Regresando...");
151E:  MOVLW  58
1520:  MOVWF  FF6
1522:  MOVLW  03
1524:  MOVWF  FF7
1526:  CALL   0976
....................                                  delay_ms(500);
152A:  MOVLW  02
152C:  MOVWF  3F
152E:  MOVLW  FA
1530:  MOVWF  40
1532:  CALL   0996
1536:  DECFSZ 3F,F
1538:  BRA    152E
....................                                  printf(lcd_putc,"\f");
153A:  MOVLW  0C
153C:  MOVWF  4C
153E:  CALL   0934
....................                                  lcd_gotoxy(0,1);
1542:  CLRF   4D
1544:  MOVLW  01
1546:  MOVWF  4E
1548:  CALL   08D2
....................                                  printf(lcd_putc," 1>555 2>LM224");
154C:  MOVLW  68
154E:  MOVWF  FF6
1550:  MOVLW  03
1552:  MOVWF  FF7
1554:  CALL   0976
....................                                  lcd_gotoxy(0,2);
1558:  CLRF   4D
155A:  MOVLW  02
155C:  MOVWF  4E
155E:  CALL   08D2
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
1562:  MOVLW  78
1564:  MOVWF  FF6
1566:  MOVLW  03
1568:  MOVWF  FF7
156A:  CALL   0976
....................                                  output_low(PIN_B7);
156E:  BCF    F93.7
1570:  BCF    F8A.7
....................                                 break;
1572:  BRA    15E8
....................                         }
....................                         if(Boton()==2){
1574:  CALL   09BE
1578:  MOVF   01,W
157A:  SUBLW  02
157C:  BNZ   15E6
....................                              output_low(PIN_B7); // Colocar en bajo pin B0
157E:  BCF    F93.7
1580:  BCF    F8A.7
....................                              printf(lcd_putc,"\f"); //Limpiar la pantalla
1582:  MOVLW  0C
1584:  MOVWF  4C
1586:  CALL   0934
....................                              lcd_gotoxy(0,2);
158A:  CLRF   4D
158C:  MOVLW  02
158E:  MOVWF  4E
1590:  CALL   08D2
....................                              printf(lcd_putc," Regresando...");
1594:  MOVLW  8A
1596:  MOVWF  FF6
1598:  MOVLW  03
159A:  MOVWF  FF7
159C:  CALL   0976
....................                              delay_ms(500);
15A0:  MOVLW  02
15A2:  MOVWF  3F
15A4:  MOVLW  FA
15A6:  MOVWF  40
15A8:  CALL   0996
15AC:  DECFSZ 3F,F
15AE:  BRA    15A4
....................                              printf(lcd_putc,"\f");
15B0:  MOVLW  0C
15B2:  MOVWF  4C
15B4:  CALL   0934
....................                              lcd_gotoxy(0,1);
15B8:  CLRF   4D
15BA:  MOVLW  01
15BC:  MOVWF  4E
15BE:  CALL   08D2
....................                              printf(lcd_putc," 1>555 2>LM224");
15C2:  MOVLW  9A
15C4:  MOVWF  FF6
15C6:  MOVLW  03
15C8:  MOVWF  FF7
15CA:  CALL   0976
....................                              lcd_gotoxy(0,2);
15CE:  CLRF   4D
15D0:  MOVLW  02
15D2:  MOVWF  4E
15D4:  CALL   08D2
....................                              printf(lcd_putc," 4>741 3>Pag.Sig.");
15D8:  MOVLW  AA
15DA:  MOVWF  FF6
15DC:  MOVLW  03
15DE:  MOVWF  FF7
15E0:  CALL   0976
....................                              break;
15E4:  BRA    15E8
....................                          }
15E6:  BRA    14A8
....................                         }   
....................                     }
....................                   if(Boton()==3){
15E8:  CALL   09BE
15EC:  MOVF   01,W
15EE:  SUBLW  03
15F0:  BTFSS  FD8.2
15F2:  GOTO   1E2A
....................                         while(1){
....................                         printf(lcd_putc,"\f");
15F6:  MOVLW  0C
15F8:  MOVWF  4C
15FA:  CALL   0934
....................                         lcd_gotoxy(0,1);
15FE:  CLRF   4D
1600:  MOVLW  01
1602:  MOVWF  4E
1604:  CALL   08D2
....................                         printf(lcd_putc," 1>LM358 2>LM348");
1608:  MOVLW  BC
160A:  MOVWF  FF6
160C:  MOVLW  03
160E:  MOVWF  FF7
1610:  CALL   0976
....................                         lcd_gotoxy(0,2);
1614:  CLRF   4D
1616:  MOVLW  02
1618:  MOVWF  4E
161A:  CALL   08D2
....................                         printf(lcd_putc," 4>LM324 3>Pag.Sig.");
161E:  MOVLW  CE
1620:  MOVWF  FF6
1622:  MOVLW  03
1624:  MOVWF  FF7
1626:  CALL   0976
....................                         delay_ms(1000);
162A:  MOVLW  04
162C:  MOVWF  3F
162E:  MOVLW  FA
1630:  MOVWF  40
1632:  CALL   0996
1636:  DECFSZ 3F,F
1638:  BRA    162E
....................                         if(Boton()==1){
163A:  CALL   09BE
163E:  DECFSZ 01,W
1640:  BRA    1830
....................                            while(1){
....................                                output_high(PIN_B7); // Colocar en alto pin B7 
1642:  BCF    F93.7
1644:  BSF    F8A.7
....................                                printf(lcd_putc,"\f"); //Limpiar la pantalla
1646:  MOVLW  0C
1648:  MOVWF  4C
164A:  CALL   0934
....................                                lcd_gotoxy(0,1);
164E:  CLRF   4D
1650:  MOVLW  01
1652:  MOVWF  4E
1654:  CALL   08D2
....................                                printf(lcd_putc," LM358 Testing..."); //  escribir eso
1658:  MOVLW  E2
165A:  MOVWF  FF6
165C:  MOVLW  03
165E:  MOVWF  FF7
1660:  CALL   0976
....................                                lcd_gotoxy(0,2);
1664:  CLRF   4D
1666:  MOVLW  02
1668:  MOVWF  4E
166A:  CALL   08D2
....................                                printf(lcd_putc," 2>Volver");
166E:  MOVLW  F4
1670:  MOVWF  FF6
1672:  MOVLW  03
1674:  MOVWF  FF7
1676:  CALL   0976
....................                                delay_ms(1000);
167A:  MOVLW  04
167C:  MOVWF  3F
167E:  MOVLW  FA
1680:  MOVWF  40
1682:  CALL   0996
1686:  DECFSZ 3F,F
1688:  BRA    167E
....................                                if(input(PIN_C1)==1){
168A:  BSF    F94.1
168C:  BTFSS  F82.1
168E:  BRA    16D8
....................                                     printf(lcd_putc,"\f");
1690:  MOVLW  0C
1692:  MOVWF  4C
1694:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1698:  CLRF   4D
169A:  MOVLW  01
169C:  MOVWF  4E
169E:  CALL   08D2
....................                                     printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
16A2:  MOVLW  FE
16A4:  MOVWF  FF6
16A6:  MOVLW  03
16A8:  MOVWF  FF7
16AA:  CALL   0976
....................                                     lcd_gotoxy(0,2);
16AE:  CLRF   4D
16B0:  MOVLW  02
16B2:  MOVWF  4E
16B4:  CALL   08D2
....................                                     printf(lcd_putc," LM358 Testing...");
16B8:  MOVLW  0E
16BA:  MOVWF  FF6
16BC:  MOVLW  04
16BE:  MOVWF  FF7
16C0:  CALL   0976
....................                                     delay_ms(500);
16C4:  MOVLW  02
16C6:  MOVWF  3F
16C8:  MOVLW  FA
16CA:  MOVWF  40
16CC:  CALL   0996
16D0:  DECFSZ 3F,F
16D2:  BRA    16C8
....................                                     opambuenos = opambuenos + 1;
16D4:  MOVLW  01
16D6:  ADDWF  30,F
....................                                }
....................                                if(input(PIN_C2)==1){
16D8:  BSF    F94.2
16DA:  BTFSS  F82.2
16DC:  BRA    1726
....................                                     printf(lcd_putc,"\f");
16DE:  MOVLW  0C
16E0:  MOVWF  4C
16E2:  CALL   0934
....................                                     lcd_gotoxy(0,1);
16E6:  CLRF   4D
16E8:  MOVLW  01
16EA:  MOVWF  4E
16EC:  CALL   08D2
....................                                     printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
16F0:  MOVLW  20
16F2:  MOVWF  FF6
16F4:  MOVLW  04
16F6:  MOVWF  FF7
16F8:  CALL   0976
....................                                     lcd_gotoxy(0,2);
16FC:  CLRF   4D
16FE:  MOVLW  02
1700:  MOVWF  4E
1702:  CALL   08D2
....................                                     printf(lcd_putc," LM358 Testing...");
1706:  MOVLW  30
1708:  MOVWF  FF6
170A:  MOVLW  04
170C:  MOVWF  FF7
170E:  CALL   0976
....................                                     delay_ms(500);
1712:  MOVLW  02
1714:  MOVWF  3F
1716:  MOVLW  FA
1718:  MOVWF  40
171A:  CALL   0996
171E:  DECFSZ 3F,F
1720:  BRA    1716
....................                                     opambuenos = opambuenos + 1;
1722:  MOVLW  01
1724:  ADDWF  30,F
....................                                }
....................                                if(opambuenos>=1){
1726:  MOVF   30,W
1728:  SUBLW  00
172A:  BC    17BC
....................                                     output_low(PIN_B7); // Colocar en bajo pin B0
172C:  BCF    F93.7
172E:  BCF    F8A.7
....................                                     printf(lcd_putc,"\f"); //Limpiar la pantalla
1730:  MOVLW  0C
1732:  MOVWF  4C
1734:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1738:  CLRF   4D
173A:  MOVLW  01
173C:  MOVWF  4E
173E:  CALL   08D2
....................                                     printf(lcd_putc," Buenos %i", opambuenos);
1742:  MOVLW  42
1744:  MOVWF  FF6
1746:  MOVLW  04
1748:  MOVWF  FF7
174A:  MOVLW  08
174C:  MOVWF  3F
174E:  CALL   0B1E
1752:  MOVFF  30,3F
1756:  MOVLW  18
1758:  MOVWF  40
175A:  CALL   0DAC
....................                                     lcd_gotoxy(0,2);
175E:  CLRF   4D
1760:  MOVLW  02
1762:  MOVWF  4E
1764:  CALL   08D2
....................                                     printf(lcd_putc," Regresando..");
1768:  MOVLW  4E
176A:  MOVWF  FF6
176C:  MOVLW  04
176E:  MOVWF  FF7
1770:  CALL   0976
....................                                     delay_ms(1000);
1774:  MOVLW  04
1776:  MOVWF  3F
1778:  MOVLW  FA
177A:  MOVWF  40
177C:  CALL   0996
1780:  DECFSZ 3F,F
1782:  BRA    1778
....................                                     opambuenos = 0;
1784:  CLRF   30
....................                                     printf(lcd_putc,"\f");
1786:  MOVLW  0C
1788:  MOVWF  4C
178A:  CALL   0934
....................                                     lcd_gotoxy(0,1);
178E:  CLRF   4D
1790:  MOVLW  01
1792:  MOVWF  4E
1794:  CALL   08D2
....................                                     printf(lcd_putc," 1>LM358 2>LM348");
1798:  MOVLW  5C
179A:  MOVWF  FF6
179C:  MOVLW  04
179E:  MOVWF  FF7
17A0:  CALL   0976
....................                                     lcd_gotoxy(0,2);
17A4:  CLRF   4D
17A6:  MOVLW  02
17A8:  MOVWF  4E
17AA:  CALL   08D2
....................                                     printf(lcd_putc," 4>LM324 3>Pag.Sig.");
17AE:  MOVLW  6E
17B0:  MOVWF  FF6
17B2:  MOVLW  04
17B4:  MOVWF  FF7
17B6:  CALL   0976
....................                                     break;
17BA:  BRA    1830
....................                                }
....................                                if(Boton()==2){
17BC:  CALL   09BE
17C0:  MOVF   01,W
17C2:  SUBLW  02
17C4:  BNZ   182E
....................                                    output_low(PIN_B7); // Colocar en bajo pin B0
17C6:  BCF    F93.7
17C8:  BCF    F8A.7
....................                                    printf(lcd_putc,"\f"); //Limpiar la pantalla
17CA:  MOVLW  0C
17CC:  MOVWF  4C
17CE:  CALL   0934
....................                                    lcd_gotoxy(0,2);
17D2:  CLRF   4D
17D4:  MOVLW  02
17D6:  MOVWF  4E
17D8:  CALL   08D2
....................                                    printf(lcd_putc," Regresando...");
17DC:  MOVLW  82
17DE:  MOVWF  FF6
17E0:  MOVLW  04
17E2:  MOVWF  FF7
17E4:  CALL   0976
....................                                    delay_ms(500);
17E8:  MOVLW  02
17EA:  MOVWF  3F
17EC:  MOVLW  FA
17EE:  MOVWF  40
17F0:  CALL   0996
17F4:  DECFSZ 3F,F
17F6:  BRA    17EC
....................                                    printf(lcd_putc,"\f");
17F8:  MOVLW  0C
17FA:  MOVWF  4C
17FC:  CALL   0934
....................                                    lcd_gotoxy(0,1);
1800:  CLRF   4D
1802:  MOVLW  01
1804:  MOVWF  4E
1806:  CALL   08D2
....................                                    printf(lcd_putc," 1>LM358 2>LM348");
180A:  MOVLW  92
180C:  MOVWF  FF6
180E:  MOVLW  04
1810:  MOVWF  FF7
1812:  CALL   0976
....................                                    lcd_gotoxy(0,2);
1816:  CLRF   4D
1818:  MOVLW  02
181A:  MOVWF  4E
181C:  CALL   08D2
....................                                    printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1820:  MOVLW  A4
1822:  MOVWF  FF6
1824:  MOVLW  04
1826:  MOVWF  FF7
1828:  CALL   0976
....................                                    break;
182C:  BRA    1830
....................                                }
182E:  BRA    1642
....................                            } 
....................                         }
....................                         if(Boton()==4){
1830:  CALL   09BE
1834:  MOVF   01,W
1836:  SUBLW  04
1838:  BTFSS  FD8.2
183A:  BRA    1AC6
....................                               while(1){
....................                                   output_high(PIN_B7); // Colocar en alto pin B7 
183C:  BCF    F93.7
183E:  BSF    F8A.7
....................                                   printf(lcd_putc,"\f"); //Limpiar la pantalla
1840:  MOVLW  0C
1842:  MOVWF  4C
1844:  CALL   0934
....................                                   lcd_gotoxy(0,1);
1848:  CLRF   4D
184A:  MOVLW  01
184C:  MOVWF  4E
184E:  CALL   08D2
....................                                   printf(lcd_putc," LM324 Testing..."); //  escribir eso
1852:  MOVLW  B8
1854:  MOVWF  FF6
1856:  MOVLW  04
1858:  MOVWF  FF7
185A:  CALL   0976
....................                                   lcd_gotoxy(0,2);
185E:  CLRF   4D
1860:  MOVLW  02
1862:  MOVWF  4E
1864:  CALL   08D2
....................                                   printf(lcd_putc," 2>Volver");
1868:  MOVLW  CA
186A:  MOVWF  FF6
186C:  MOVLW  04
186E:  MOVWF  FF7
1870:  CALL   0976
....................                                   delay_ms(1000);
1874:  MOVLW  04
1876:  MOVWF  3F
1878:  MOVLW  FA
187A:  MOVWF  40
187C:  CALL   0996
1880:  DECFSZ 3F,F
1882:  BRA    1878
....................                                   if(input(PIN_C0)==1){
1884:  BSF    F94.0
1886:  BTFSS  F82.0
1888:  BRA    18D2
....................                                        printf(lcd_putc,"\f");
188A:  MOVLW  0C
188C:  MOVWF  4C
188E:  CALL   0934
....................                                        lcd_gotoxy(0,1);
1892:  CLRF   4D
1894:  MOVLW  01
1896:  MOVWF  4E
1898:  CALL   08D2
....................                                        printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
189C:  MOVLW  D4
189E:  MOVWF  FF6
18A0:  MOVLW  04
18A2:  MOVWF  FF7
18A4:  CALL   0976
....................                                        lcd_gotoxy(0,2);
18A8:  CLRF   4D
18AA:  MOVLW  02
18AC:  MOVWF  4E
18AE:  CALL   08D2
....................                                        printf(lcd_putc," LM324 Testing...");
18B2:  MOVLW  E4
18B4:  MOVWF  FF6
18B6:  MOVLW  04
18B8:  MOVWF  FF7
18BA:  CALL   0976
....................                                        delay_ms(500);
18BE:  MOVLW  02
18C0:  MOVWF  3F
18C2:  MOVLW  FA
18C4:  MOVWF  40
18C6:  CALL   0996
18CA:  DECFSZ 3F,F
18CC:  BRA    18C2
....................                                        opambuenos = opambuenos + 1;
18CE:  MOVLW  01
18D0:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C1)==1){
18D2:  BSF    F94.1
18D4:  BTFSS  F82.1
18D6:  BRA    1920
....................                                        printf(lcd_putc,"\f");
18D8:  MOVLW  0C
18DA:  MOVWF  4C
18DC:  CALL   0934
....................                                        lcd_gotoxy(0,1);
18E0:  CLRF   4D
18E2:  MOVLW  01
18E4:  MOVWF  4E
18E6:  CALL   08D2
....................                                        printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
18EA:  MOVLW  F6
18EC:  MOVWF  FF6
18EE:  MOVLW  04
18F0:  MOVWF  FF7
18F2:  CALL   0976
....................                                        lcd_gotoxy(0,2);
18F6:  CLRF   4D
18F8:  MOVLW  02
18FA:  MOVWF  4E
18FC:  CALL   08D2
....................                                        printf(lcd_putc," LM324 Testing...");
1900:  MOVLW  06
1902:  MOVWF  FF6
1904:  MOVLW  05
1906:  MOVWF  FF7
1908:  CALL   0976
....................                                        delay_ms(500);
190C:  MOVLW  02
190E:  MOVWF  3F
1910:  MOVLW  FA
1912:  MOVWF  40
1914:  CALL   0996
1918:  DECFSZ 3F,F
191A:  BRA    1910
....................                                        opambuenos = opambuenos + 1;
191C:  MOVLW  01
191E:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C2)==1){
1920:  BSF    F94.2
1922:  BTFSS  F82.2
1924:  BRA    196E
....................                                        printf(lcd_putc,"\f");
1926:  MOVLW  0C
1928:  MOVWF  4C
192A:  CALL   0934
....................                                        lcd_gotoxy(0,1);
192E:  CLRF   4D
1930:  MOVLW  01
1932:  MOVWF  4E
1934:  CALL   08D2
....................                                        printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
1938:  MOVLW  18
193A:  MOVWF  FF6
193C:  MOVLW  05
193E:  MOVWF  FF7
1940:  CALL   0976
....................                                        lcd_gotoxy(0,2);
1944:  CLRF   4D
1946:  MOVLW  02
1948:  MOVWF  4E
194A:  CALL   08D2
....................                                        printf(lcd_putc," LM324 Testing...");
194E:  MOVLW  28
1950:  MOVWF  FF6
1952:  MOVLW  05
1954:  MOVWF  FF7
1956:  CALL   0976
....................                                        delay_ms(500);
195A:  MOVLW  02
195C:  MOVWF  3F
195E:  MOVLW  FA
1960:  MOVWF  40
1962:  CALL   0996
1966:  DECFSZ 3F,F
1968:  BRA    195E
....................                                        opambuenos = opambuenos + 1;
196A:  MOVLW  01
196C:  ADDWF  30,F
....................                                   } 
....................                                   if(input(PIN_C5)==1){
196E:  BSF    F94.5
1970:  BTFSS  F82.5
1972:  BRA    19BC
....................                                        printf(lcd_putc,"\f");
1974:  MOVLW  0C
1976:  MOVWF  4C
1978:  CALL   0934
....................                                        lcd_gotoxy(0,1);
197C:  CLRF   4D
197E:  MOVLW  01
1980:  MOVWF  4E
1982:  CALL   08D2
....................                                        printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
1986:  MOVLW  3A
1988:  MOVWF  FF6
198A:  MOVLW  05
198C:  MOVWF  FF7
198E:  CALL   0976
....................                                        lcd_gotoxy(0,2);
1992:  CLRF   4D
1994:  MOVLW  02
1996:  MOVWF  4E
1998:  CALL   08D2
....................                                        printf(lcd_putc," LM324 Testing...");
199C:  MOVLW  4A
199E:  MOVWF  FF6
19A0:  MOVLW  05
19A2:  MOVWF  FF7
19A4:  CALL   0976
....................                                        delay_ms(500);
19A8:  MOVLW  02
19AA:  MOVWF  3F
19AC:  MOVLW  FA
19AE:  MOVWF  40
19B0:  CALL   0996
19B4:  DECFSZ 3F,F
19B6:  BRA    19AC
....................                                        opambuenos = opambuenos + 1;
19B8:  MOVLW  01
19BA:  ADDWF  30,F
....................                                   }   
....................                                   if(opambuenos>=1){
19BC:  MOVF   30,W
19BE:  SUBLW  00
19C0:  BC    1A52
....................                                        output_low(PIN_B7); // Colocar en bajo pin B0
19C2:  BCF    F93.7
19C4:  BCF    F8A.7
....................                                        printf(lcd_putc,"\f"); //Limpiar la pantalla
19C6:  MOVLW  0C
19C8:  MOVWF  4C
19CA:  CALL   0934
....................                                        lcd_gotoxy(0,1);
19CE:  CLRF   4D
19D0:  MOVLW  01
19D2:  MOVWF  4E
19D4:  CALL   08D2
....................                                        printf(lcd_putc," Buenos %i", opambuenos);
19D8:  MOVLW  5C
19DA:  MOVWF  FF6
19DC:  MOVLW  05
19DE:  MOVWF  FF7
19E0:  MOVLW  08
19E2:  MOVWF  3F
19E4:  CALL   0B1E
19E8:  MOVFF  30,3F
19EC:  MOVLW  18
19EE:  MOVWF  40
19F0:  CALL   0DAC
....................                                        lcd_gotoxy(0,2);
19F4:  CLRF   4D
19F6:  MOVLW  02
19F8:  MOVWF  4E
19FA:  CALL   08D2
....................                                        printf(lcd_putc," Regresando...");
19FE:  MOVLW  68
1A00:  MOVWF  FF6
1A02:  MOVLW  05
1A04:  MOVWF  FF7
1A06:  CALL   0976
....................                                        delay_ms(1000);
1A0A:  MOVLW  04
1A0C:  MOVWF  3F
1A0E:  MOVLW  FA
1A10:  MOVWF  40
1A12:  CALL   0996
1A16:  DECFSZ 3F,F
1A18:  BRA    1A0E
....................                                        opambuenos = 0;
1A1A:  CLRF   30
....................                                        printf(lcd_putc,"\f");
1A1C:  MOVLW  0C
1A1E:  MOVWF  4C
1A20:  CALL   0934
....................                                        lcd_gotoxy(0,1);
1A24:  CLRF   4D
1A26:  MOVLW  01
1A28:  MOVWF  4E
1A2A:  CALL   08D2
....................                                        printf(lcd_putc," 1>LM358 2>LM348");
1A2E:  MOVLW  78
1A30:  MOVWF  FF6
1A32:  MOVLW  05
1A34:  MOVWF  FF7
1A36:  CALL   0976
....................                                        lcd_gotoxy(0,2);
1A3A:  CLRF   4D
1A3C:  MOVLW  02
1A3E:  MOVWF  4E
1A40:  CALL   08D2
....................                                        printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1A44:  MOVLW  8A
1A46:  MOVWF  FF6
1A48:  MOVLW  05
1A4A:  MOVWF  FF7
1A4C:  CALL   0976
....................                                       break;
1A50:  BRA    1AC6
....................                                   }
....................                                   if(Boton()==2){
1A52:  CALL   09BE
1A56:  MOVF   01,W
1A58:  SUBLW  02
1A5A:  BNZ   1AC4
....................                                       output_low(PIN_B7); // Colocar en bajo pin B0
1A5C:  BCF    F93.7
1A5E:  BCF    F8A.7
....................                                       printf(lcd_putc,"\f"); //Limpiar la pantalla
1A60:  MOVLW  0C
1A62:  MOVWF  4C
1A64:  CALL   0934
....................                                       lcd_gotoxy(0,2);
1A68:  CLRF   4D
1A6A:  MOVLW  02
1A6C:  MOVWF  4E
1A6E:  CALL   08D2
....................                                       printf(lcd_putc," Regresando...");
1A72:  MOVLW  9E
1A74:  MOVWF  FF6
1A76:  MOVLW  05
1A78:  MOVWF  FF7
1A7A:  CALL   0976
....................                                       delay_ms(500);
1A7E:  MOVLW  02
1A80:  MOVWF  3F
1A82:  MOVLW  FA
1A84:  MOVWF  40
1A86:  CALL   0996
1A8A:  DECFSZ 3F,F
1A8C:  BRA    1A82
....................                                       printf(lcd_putc,"\f");
1A8E:  MOVLW  0C
1A90:  MOVWF  4C
1A92:  CALL   0934
....................                                       lcd_gotoxy(0,1);
1A96:  CLRF   4D
1A98:  MOVLW  01
1A9A:  MOVWF  4E
1A9C:  CALL   08D2
....................                                       printf(lcd_putc," 1>LM358 2>LM348");
1AA0:  MOVLW  AE
1AA2:  MOVWF  FF6
1AA4:  MOVLW  05
1AA6:  MOVWF  FF7
1AA8:  CALL   0976
....................                                       lcd_gotoxy(0,2);
1AAC:  CLRF   4D
1AAE:  MOVLW  02
1AB0:  MOVWF  4E
1AB2:  CALL   08D2
....................                                       printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1AB6:  MOVLW  C0
1AB8:  MOVWF  FF6
1ABA:  MOVLW  05
1ABC:  MOVWF  FF7
1ABE:  CALL   0976
....................                                       break;
1AC2:  BRA    1AC6
....................                                   }
1AC4:  BRA    183C
....................                               }
....................                         }
....................                         if(Boton()==3){
1AC6:  CALL   09BE
1ACA:  MOVF   01,W
1ACC:  SUBLW  03
1ACE:  BTFSS  FD8.2
1AD0:  BRA    1E26
....................                            printf(lcd_putc,"\f");
1AD2:  MOVLW  0C
1AD4:  MOVWF  4C
1AD6:  CALL   0934
....................                            lcd_gotoxy(0,1);
1ADA:  CLRF   4D
1ADC:  MOVLW  01
1ADE:  MOVWF  4E
1AE0:  CALL   08D2
....................                            printf(lcd_putc," 1>NPN 2>PNP");
1AE4:  MOVLW  D4
1AE6:  MOVWF  FF6
1AE8:  MOVLW  05
1AEA:  MOVWF  FF7
1AEC:  CALL   0976
....................                            lcd_gotoxy(0,2);
1AF0:  CLRF   4D
1AF2:  MOVLW  02
1AF4:  MOVWF  4E
1AF6:  CALL   08D2
....................                            printf(lcd_putc," 4>NADA 3>Regresar");
1AFA:  MOVLW  E2
1AFC:  MOVWF  FF6
1AFE:  MOVLW  05
1B00:  MOVWF  FF7
1B02:  CALL   0976
....................                            delay_ms(1000);
1B06:  MOVLW  04
1B08:  MOVWF  3F
1B0A:  MOVLW  FA
1B0C:  MOVWF  40
1B0E:  CALL   0996
1B12:  DECFSZ 3F,F
1B14:  BRA    1B0A
....................                            while(1){
....................                               if(Boton()==1) {
1B16:  CALL   09BE
1B1A:  DECFSZ 01,W
1B1C:  BRA    1C8C
....................                                  NPN_estado = 1;
1B1E:  BSF    2B.2
....................                                  printf(lcd_putc,"\f");
1B20:  MOVLW  0C
1B22:  MOVWF  4C
1B24:  CALL   0934
....................                                  lcd_gotoxy(0,1);
1B28:  CLRF   4D
1B2A:  MOVLW  01
1B2C:  MOVWF  4E
1B2E:  CALL   08D2
....................                                  printf(lcd_putc,"NPN Testing...");
1B32:  MOVLW  F6
1B34:  MOVWF  FF6
1B36:  MOVLW  05
1B38:  MOVWF  FF7
1B3A:  CALL   0976
....................                                  delay_ms(1000);
1B3E:  MOVLW  04
1B40:  MOVWF  3F
1B42:  MOVLW  FA
1B44:  MOVWF  40
1B46:  CALL   0996
1B4A:  DECFSZ 3F,F
1B4C:  BRA    1B42
....................                                  if (input(PIN_C6) == 0) {
1B4E:  BSF    F94.6
1B50:  BTFSC  F82.6
1B52:  BRA    1B56
....................                                     NPN_estado = 0;
1B54:  BCF    2B.2
....................                                  }
....................                                  output_high(PIN_D0);
1B56:  BCF    F95.0
1B58:  BSF    F8C.0
....................                                  delay_ms(1500);
1B5A:  MOVLW  06
1B5C:  MOVWF  3F
1B5E:  MOVLW  FA
1B60:  MOVWF  40
1B62:  CALL   0996
1B66:  DECFSZ 3F,F
1B68:  BRA    1B5E
....................                                  if (input(PIN_C6) == 1) {
1B6A:  BSF    F94.6
1B6C:  BTFSS  F82.6
1B6E:  BRA    1B72
....................                                     NPN_estado = 0;
1B70:  BCF    2B.2
....................                                  }
....................                                  if (NPN_estado == 1) {
1B72:  BTFSS  2B.2
1B74:  BRA    1BC8
....................                                     printf(lcd_putc,"\f");
1B76:  MOVLW  0C
1B78:  MOVWF  4C
1B7A:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1B7E:  CLRF   4D
1B80:  MOVLW  01
1B82:  MOVWF  4E
1B84:  CALL   08D2
....................                                     printf(lcd_putc,"NPN BUENO");
1B88:  MOVLW  06
1B8A:  MOVWF  FF6
1B8C:  MOVLW  06
1B8E:  MOVWF  FF7
1B90:  CALL   0976
....................                                     lcd_gotoxy(0,2);
1B94:  CLRF   4D
1B96:  MOVLW  02
1B98:  MOVWF  4E
1B9A:  CALL   08D2
....................                                     printf(lcd_putc," 2>Volver");
1B9E:  MOVLW  10
1BA0:  MOVWF  FF6
1BA2:  MOVLW  06
1BA4:  MOVWF  FF7
1BA6:  CALL   0976
....................                                     delay_ms(1000);
1BAA:  MOVLW  04
1BAC:  MOVWF  3F
1BAE:  MOVLW  FA
1BB0:  MOVWF  40
1BB2:  CALL   0996
1BB6:  DECFSZ 3F,F
1BB8:  BRA    1BAE
....................                                     while(1) {
....................                                        if( Boton() == 2){
1BBA:  CALL   09BE
1BBE:  MOVF   01,W
1BC0:  SUBLW  02
1BC2:  BNZ   1BC6
....................                                           break;
1BC4:  BRA    1BC8
....................                                        }
1BC6:  BRA    1BBA
....................                                     }
....................                                  }
....................                                  if (NPN_estado == 0) {
1BC8:  BTFSC  2B.2
1BCA:  BRA    1C10
....................                                     printf(lcd_putc,"\f");
1BCC:  MOVLW  0C
1BCE:  MOVWF  4C
1BD0:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1BD4:  CLRF   4D
1BD6:  MOVLW  01
1BD8:  MOVWF  4E
1BDA:  CALL   08D2
....................                                     printf(lcd_putc,"NPN MALO");
1BDE:  MOVLW  1A
1BE0:  MOVWF  FF6
1BE2:  MOVLW  06
1BE4:  MOVWF  FF7
1BE6:  CALL   0976
....................                                     lcd_gotoxy(0,2);
1BEA:  CLRF   4D
1BEC:  MOVLW  02
1BEE:  MOVWF  4E
1BF0:  CALL   08D2
....................                                     printf(lcd_putc," 2>Volver");
1BF4:  MOVLW  24
1BF6:  MOVWF  FF6
1BF8:  MOVLW  06
1BFA:  MOVWF  FF7
1BFC:  CALL   0976
....................                                     delay_ms(1000);
1C00:  MOVLW  04
1C02:  MOVWF  3F
1C04:  MOVLW  FA
1C06:  MOVWF  40
1C08:  CALL   0996
1C0C:  DECFSZ 3F,F
1C0E:  BRA    1C04
....................                                  }
....................                                  while(1) {
....................                                     if(Boton() == 2){
1C10:  CALL   09BE
1C14:  MOVF   01,W
1C16:  SUBLW  02
1C18:  BNZ   1C8A
....................                                        NPN_estado == 1;
....................                                        output_low(PIN_D0);
1C1A:  BCF    F95.0
1C1C:  BCF    F8C.0
....................                                        lcd_gotoxy(0,2);
1C1E:  CLRF   4D
1C20:  MOVLW  02
1C22:  MOVWF  4E
1C24:  CALL   08D2
....................                                        printf(lcd_putc," Regresando...");
1C28:  MOVLW  2E
1C2A:  MOVWF  FF6
1C2C:  MOVLW  06
1C2E:  MOVWF  FF7
1C30:  CALL   0976
....................                                        delay_ms(1000);
1C34:  MOVLW  04
1C36:  MOVWF  3F
1C38:  MOVLW  FA
1C3A:  MOVWF  40
1C3C:  CALL   0996
1C40:  DECFSZ 3F,F
1C42:  BRA    1C38
....................                                        printf(lcd_putc,"\f");
1C44:  MOVLW  0C
1C46:  MOVWF  4C
1C48:  CALL   0934
....................                                        lcd_gotoxy(0,1);
1C4C:  CLRF   4D
1C4E:  MOVLW  01
1C50:  MOVWF  4E
1C52:  CALL   08D2
....................                                        printf(lcd_putc," 1>NPN 2>PNP");
1C56:  MOVLW  3E
1C58:  MOVWF  FF6
1C5A:  MOVLW  06
1C5C:  MOVWF  FF7
1C5E:  CALL   0976
....................                                        lcd_gotoxy(0,2);
1C62:  CLRF   4D
1C64:  MOVLW  02
1C66:  MOVWF  4E
1C68:  CALL   08D2
....................                                        printf(lcd_putc," 4>NADA 3>Regresar");
1C6C:  MOVLW  4C
1C6E:  MOVWF  FF6
1C70:  MOVLW  06
1C72:  MOVWF  FF7
1C74:  CALL   0976
....................                                        delay_ms(1000);
1C78:  MOVLW  04
1C7A:  MOVWF  3F
1C7C:  MOVLW  FA
1C7E:  MOVWF  40
1C80:  CALL   0996
1C84:  DECFSZ 3F,F
1C86:  BRA    1C7C
....................                                        break;
1C88:  BRA    1C8C
....................                                     }
1C8A:  BRA    1C10
....................                                  }
....................                               }
....................                               
....................                               if(Boton() == 2) {
1C8C:  CALL   09BE
1C90:  MOVF   01,W
1C92:  SUBLW  02
1C94:  BTFSS  FD8.2
1C96:  BRA    1E06
....................                                  PNP_estado = 1;
1C98:  BSF    2B.3
....................                                  printf(lcd_putc,"\f");
1C9A:  MOVLW  0C
1C9C:  MOVWF  4C
1C9E:  CALL   0934
....................                                  lcd_gotoxy(0,1);
1CA2:  CLRF   4D
1CA4:  MOVLW  01
1CA6:  MOVWF  4E
1CA8:  CALL   08D2
....................                                  printf(lcd_putc,"PNP Testing...");
1CAC:  MOVLW  60
1CAE:  MOVWF  FF6
1CB0:  MOVLW  06
1CB2:  MOVWF  FF7
1CB4:  CALL   0976
....................                                  delay_ms(1000);
1CB8:  MOVLW  04
1CBA:  MOVWF  3F
1CBC:  MOVLW  FA
1CBE:  MOVWF  40
1CC0:  CALL   0996
1CC4:  DECFSZ 3F,F
1CC6:  BRA    1CBC
....................                                  if (input(PIN_C7) == 0) {
1CC8:  BSF    F94.7
1CCA:  BTFSC  F82.7
1CCC:  BRA    1CD0
....................                                     PNP_estado = 0;
1CCE:  BCF    2B.3
....................                                  }
....................                                  output_high(PIN_D1);
1CD0:  BCF    F95.1
1CD2:  BSF    F8C.1
....................                                  delay_ms(1500);
1CD4:  MOVLW  06
1CD6:  MOVWF  3F
1CD8:  MOVLW  FA
1CDA:  MOVWF  40
1CDC:  CALL   0996
1CE0:  DECFSZ 3F,F
1CE2:  BRA    1CD8
....................                                  if (input(PIN_C7) == 1) {
1CE4:  BSF    F94.7
1CE6:  BTFSS  F82.7
1CE8:  BRA    1CEC
....................                                     PNP_estado = 0;
1CEA:  BCF    2B.3
....................                                  }
....................                                  if (PNP_estado == 1) {
1CEC:  BTFSS  2B.3
1CEE:  BRA    1D42
....................                                     printf(lcd_putc,"\f");
1CF0:  MOVLW  0C
1CF2:  MOVWF  4C
1CF4:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1CF8:  CLRF   4D
1CFA:  MOVLW  01
1CFC:  MOVWF  4E
1CFE:  CALL   08D2
....................                                     printf(lcd_putc,"PNP BUENO");
1D02:  MOVLW  70
1D04:  MOVWF  FF6
1D06:  MOVLW  06
1D08:  MOVWF  FF7
1D0A:  CALL   0976
....................                                     lcd_gotoxy(0,2);
1D0E:  CLRF   4D
1D10:  MOVLW  02
1D12:  MOVWF  4E
1D14:  CALL   08D2
....................                                     printf(lcd_putc," 2>Volver");
1D18:  MOVLW  7A
1D1A:  MOVWF  FF6
1D1C:  MOVLW  06
1D1E:  MOVWF  FF7
1D20:  CALL   0976
....................                                     delay_ms(1000);
1D24:  MOVLW  04
1D26:  MOVWF  3F
1D28:  MOVLW  FA
1D2A:  MOVWF  40
1D2C:  CALL   0996
1D30:  DECFSZ 3F,F
1D32:  BRA    1D28
....................                                     while(1) {
....................                                        if( Boton() == 2){
1D34:  CALL   09BE
1D38:  MOVF   01,W
1D3A:  SUBLW  02
1D3C:  BNZ   1D40
....................                                           break;
1D3E:  BRA    1D42
....................                                        }
1D40:  BRA    1D34
....................                                     }
....................                                  }
....................                                  if (PNP_estado == 0) {
1D42:  BTFSC  2B.3
1D44:  BRA    1D8A
....................                                     printf(lcd_putc,"\f");
1D46:  MOVLW  0C
1D48:  MOVWF  4C
1D4A:  CALL   0934
....................                                     lcd_gotoxy(0,1);
1D4E:  CLRF   4D
1D50:  MOVLW  01
1D52:  MOVWF  4E
1D54:  CALL   08D2
....................                                     printf(lcd_putc,"PNP MALO");
1D58:  MOVLW  84
1D5A:  MOVWF  FF6
1D5C:  MOVLW  06
1D5E:  MOVWF  FF7
1D60:  CALL   0976
....................                                     lcd_gotoxy(0,2);
1D64:  CLRF   4D
1D66:  MOVLW  02
1D68:  MOVWF  4E
1D6A:  CALL   08D2
....................                                     printf(lcd_putc," 2>Volver");
1D6E:  MOVLW  8E
1D70:  MOVWF  FF6
1D72:  MOVLW  06
1D74:  MOVWF  FF7
1D76:  CALL   0976
....................                                     delay_ms(1000);
1D7A:  MOVLW  04
1D7C:  MOVWF  3F
1D7E:  MOVLW  FA
1D80:  MOVWF  40
1D82:  CALL   0996
1D86:  DECFSZ 3F,F
1D88:  BRA    1D7E
....................                                  }
....................                                  while(1) {
....................                                     if(Boton() == 2){
1D8A:  CALL   09BE
1D8E:  MOVF   01,W
1D90:  SUBLW  02
1D92:  BNZ   1E04
....................                                        PNP_estado == 1;
....................                                        output_low(PIN_D1);
1D94:  BCF    F95.1
1D96:  BCF    F8C.1
....................                                        lcd_gotoxy(0,2);
1D98:  CLRF   4D
1D9A:  MOVLW  02
1D9C:  MOVWF  4E
1D9E:  CALL   08D2
....................                                        printf(lcd_putc," Regresando...");
1DA2:  MOVLW  98
1DA4:  MOVWF  FF6
1DA6:  MOVLW  06
1DA8:  MOVWF  FF7
1DAA:  CALL   0976
....................                                        delay_ms(1000);
1DAE:  MOVLW  04
1DB0:  MOVWF  3F
1DB2:  MOVLW  FA
1DB4:  MOVWF  40
1DB6:  CALL   0996
1DBA:  DECFSZ 3F,F
1DBC:  BRA    1DB2
....................                                        printf(lcd_putc,"\f");
1DBE:  MOVLW  0C
1DC0:  MOVWF  4C
1DC2:  CALL   0934
....................                                        lcd_gotoxy(0,1);
1DC6:  CLRF   4D
1DC8:  MOVLW  01
1DCA:  MOVWF  4E
1DCC:  CALL   08D2
....................                                        printf(lcd_putc," 1>NPN 2>PNP");
1DD0:  MOVLW  A8
1DD2:  MOVWF  FF6
1DD4:  MOVLW  06
1DD6:  MOVWF  FF7
1DD8:  CALL   0976
....................                                        lcd_gotoxy(0,2);
1DDC:  CLRF   4D
1DDE:  MOVLW  02
1DE0:  MOVWF  4E
1DE2:  CALL   08D2
....................                                        printf(lcd_putc," 4>NADA 3>Regresar");
1DE6:  MOVLW  B6
1DE8:  MOVWF  FF6
1DEA:  MOVLW  06
1DEC:  MOVWF  FF7
1DEE:  CALL   0976
....................                                        delay_ms(1000);
1DF2:  MOVLW  04
1DF4:  MOVWF  3F
1DF6:  MOVLW  FA
1DF8:  MOVWF  40
1DFA:  CALL   0996
1DFE:  DECFSZ 3F,F
1E00:  BRA    1DF6
....................                                        break;
1E02:  BRA    1E06
....................                                     }
1E04:  BRA    1D8A
....................                                  }
....................                               }
....................                                  
....................                               
....................                               
....................                               if(Boton() == 3) {
1E06:  CALL   09BE
1E0A:  MOVF   01,W
1E0C:  SUBLW  03
1E0E:  BNZ   1E24
....................                                  delay_ms(500);
1E10:  MOVLW  02
1E12:  MOVWF  3F
1E14:  MOVLW  FA
1E16:  MOVWF  40
1E18:  CALL   0996
1E1C:  DECFSZ 3F,F
1E1E:  BRA    1E14
....................                                  goto MENUPRINCIPAL;
1E20:  GOTO   0ED2
....................                               }
1E24:  BRA    1B16
....................                            }
....................                         }
1E26:  GOTO   15F6
....................                      }
....................                   }
1E2A:  GOTO   1082
....................                }
....................             }
1E2E:  GOTO   0F0C
....................          }
1E32:  MOVLB  0
1E34:  GOTO   0ED2
....................       }
.................... }   
1E38:  SLEEP 

Configuration Fuses:
   Word  1: C93F   PLL12 CPUDIV4 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
