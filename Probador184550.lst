CCS PCH C Compiler, Version 5.112, 29001               15-dic.-24 21:01

               Filename:   C:\Users\gabog\OneDrive\Documentos\GitHub\Probador_Componentes_Electronicos\Probador184550.lst

               ROM used:   6366 bytes (19%)
                           Largest free fragment is 26398
               RAM used:   64 (3%) at main() level
                           91 (4%) worst case
               Stack used: 7 locations (6 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0CE2
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00DA
0060:  BTFSS  FF0.4
0062:  GOTO   006C
0066:  BTFSC  FF0.1
0068:  GOTO   00CE
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18f4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
00BA:  CLRF   FF7
00BC:  ADDLW  CA
00BE:  MOVWF  FF6
00C0:  MOVLW  00
00C2:  ADDWFC FF7,F
00C4:  TBLRD*+
00C6:  MOVF   FF5,W
00C8:  RETURN 0
00CA:  DATA 28,0C
00CC:  DATA 01,06
*
00F4:  DATA 20,4D
00F6:  DATA 45,4E
00F8:  DATA 55,20
00FA:  DATA 50,52
00FC:  DATA 49,4E
00FE:  DATA 43,49
0100:  DATA 50,41
0102:  DATA 4C,00
0104:  DATA 20,31
0106:  DATA 3E,41
0108:  DATA 44,36
010A:  DATA 32,30
010C:  DATA 20,33
010E:  DATA 3E,4E
0110:  DATA 45,58
0112:  DATA 54,00
0114:  DATA 20,41
0116:  DATA 44,36
0118:  DATA 32,30
011A:  DATA 20,54
011C:  DATA 65,73
011E:  DATA 74,69
0120:  DATA 6E,67
0122:  DATA 2E,2E
0124:  DATA 2E,00
0126:  DATA 20,56
0128:  DATA 3A,25
012A:  DATA 30,2E
012C:  DATA 32,66
012E:  DATA 2E,20
0130:  DATA 32,3E
0132:  DATA 52,65
0134:  DATA 74,00
0136:  DATA 20,4D
0138:  DATA 45,4E
013A:  DATA 55,20
013C:  DATA 50,52
013E:  DATA 49,4E
0140:  DATA 43,49
0142:  DATA 50,41
0144:  DATA 4C,00
0146:  DATA 20,31
0148:  DATA 3E,41
014A:  DATA 44,36
014C:  DATA 32,30
014E:  DATA 20,33
0150:  DATA 3E,4E
0152:  DATA 45,58
0154:  DATA 54,00
0156:  DATA 20,31
0158:  DATA 3E,35
015A:  DATA 35,35
015C:  DATA 20,32
015E:  DATA 3E,4C
0160:  DATA 4D,32
0162:  DATA 32,34
0164:  DATA 00,00
0166:  DATA 20,34
0168:  DATA 3E,37
016A:  DATA 34,31
016C:  DATA 20,33
016E:  DATA 3E,50
0170:  DATA 61,67
0172:  DATA 2E,53
0174:  DATA 69,67
0176:  DATA 2E,00
0178:  DATA 20,35
017A:  DATA 35,35
017C:  DATA 20,54
017E:  DATA 65,73
0180:  DATA 74,69
0182:  DATA 6E,67
0184:  DATA 2E,2E
0186:  DATA 2E,00
0188:  DATA 20,32
018A:  DATA 3E,56
018C:  DATA 6F,6C
018E:  DATA 76,65
0190:  DATA 72,00
0192:  DATA 20,31
0194:  DATA 3E,35
0196:  DATA 35,35
0198:  DATA 20,32
019A:  DATA 3E,4C
019C:  DATA 4D,32
019E:  DATA 32,34
01A0:  DATA 00,00
01A2:  DATA 20,34
01A4:  DATA 3E,37
01A6:  DATA 34,31
01A8:  DATA 20,33
01AA:  DATA 3E,50
01AC:  DATA 61,67
01AE:  DATA 2E,53
01B0:  DATA 69,67
01B2:  DATA 2E,00
01B4:  DATA 4D,61
01B6:  DATA 6C,6F
01B8:  DATA 20,25
01BA:  DATA 69,00
01BC:  DATA 20,32
01BE:  DATA 3E,56
01C0:  DATA 6F,6C
01C2:  DATA 76,65
01C4:  DATA 72,00
01C6:  DATA 20,31
01C8:  DATA 3E,35
01CA:  DATA 35,35
01CC:  DATA 20,32
01CE:  DATA 3E,4C
01D0:  DATA 4D,32
01D2:  DATA 32,34
01D4:  DATA 00,00
01D6:  DATA 20,34
01D8:  DATA 3E,37
01DA:  DATA 34,31
01DC:  DATA 20,33
01DE:  DATA 3E,50
01E0:  DATA 61,67
01E2:  DATA 2E,53
01E4:  DATA 69,67
01E6:  DATA 2E,00
01E8:  DATA 42,75
01EA:  DATA 65,6E
01EC:  DATA 6F,20
01EE:  DATA 25,69
01F0:  DATA 00,00
01F2:  DATA 20,32
01F4:  DATA 3E,56
01F6:  DATA 6F,6C
01F8:  DATA 76,65
01FA:  DATA 72,00
01FC:  DATA 20,31
01FE:  DATA 3E,35
0200:  DATA 35,35
0202:  DATA 20,32
0204:  DATA 3E,4C
0206:  DATA 4D,32
0208:  DATA 32,34
020A:  DATA 00,00
020C:  DATA 20,34
020E:  DATA 3E,37
0210:  DATA 34,31
0212:  DATA 20,33
0214:  DATA 3E,50
0216:  DATA 61,67
0218:  DATA 2E,53
021A:  DATA 69,67
021C:  DATA 2E,00
021E:  DATA 20,52
0220:  DATA 65,67
0222:  DATA 72,65
0224:  DATA 73,61
0226:  DATA 6E,64
0228:  DATA 6F,2E
022A:  DATA 2E,2E
022C:  DATA 00,00
022E:  DATA 20,31
0230:  DATA 3E,35
0232:  DATA 35,35
0234:  DATA 20,32
0236:  DATA 3E,4C
0238:  DATA 4D,32
023A:  DATA 32,34
023C:  DATA 00,00
023E:  DATA 20,34
0240:  DATA 3E,37
0242:  DATA 34,31
0244:  DATA 20,33
0246:  DATA 3E,50
0248:  DATA 61,67
024A:  DATA 2E,53
024C:  DATA 69,67
024E:  DATA 2E,00
0250:  DATA 20,4C
0252:  DATA 4D,32
0254:  DATA 32,34
0256:  DATA 20,54
0258:  DATA 65,73
025A:  DATA 74,69
025C:  DATA 6E,67
025E:  DATA 2E,2E
0260:  DATA 2E,00
0262:  DATA 20,32
0264:  DATA 3E,56
0266:  DATA 6F,6C
0268:  DATA 76,65
026A:  DATA 72,00
026C:  DATA 20,41
026E:  DATA 6D,70
0270:  DATA 4F,70
0272:  DATA 2D,31
0274:  DATA 20,42
0276:  DATA 75,65
0278:  DATA 6E,6F
027A:  DATA 21,00
027C:  DATA 20,4C
027E:  DATA 4D,32
0280:  DATA 32,34
0282:  DATA 20,54
0284:  DATA 65,73
0286:  DATA 74,69
0288:  DATA 6E,67
028A:  DATA 2E,2E
028C:  DATA 2E,00
028E:  DATA 20,41
0290:  DATA 6D,70
0292:  DATA 4F,70
0294:  DATA 2D,32
0296:  DATA 20,42
0298:  DATA 75,65
029A:  DATA 6E,6F
029C:  DATA 21,00
029E:  DATA 20,4C
02A0:  DATA 4D,32
02A2:  DATA 32,34
02A4:  DATA 20,54
02A6:  DATA 65,73
02A8:  DATA 74,69
02AA:  DATA 6E,67
02AC:  DATA 2E,2E
02AE:  DATA 2E,00
02B0:  DATA 20,41
02B2:  DATA 6D,70
02B4:  DATA 4F,70
02B6:  DATA 2D,33
02B8:  DATA 20,42
02BA:  DATA 75,65
02BC:  DATA 6E,6F
02BE:  DATA 21,00
02C0:  DATA 20,4C
02C2:  DATA 4D,32
02C4:  DATA 32,34
02C6:  DATA 20,54
02C8:  DATA 65,73
02CA:  DATA 74,69
02CC:  DATA 6E,67
02CE:  DATA 2E,2E
02D0:  DATA 2E,00
02D2:  DATA 20,41
02D4:  DATA 6D,70
02D6:  DATA 4F,70
02D8:  DATA 2D,34
02DA:  DATA 20,42
02DC:  DATA 75,65
02DE:  DATA 6E,6F
02E0:  DATA 21,00
02E2:  DATA 20,4C
02E4:  DATA 4D,32
02E6:  DATA 32,34
02E8:  DATA 20,54
02EA:  DATA 65,73
02EC:  DATA 74,69
02EE:  DATA 6E,67
02F0:  DATA 2E,2E
02F2:  DATA 2E,00
02F4:  DATA 20,42
02F6:  DATA 75,65
02F8:  DATA 6E,6F
02FA:  DATA 73,20
02FC:  DATA 25,69
02FE:  DATA 00,00
0300:  DATA 20,52
0302:  DATA 65,67
0304:  DATA 72,65
0306:  DATA 73,61
0308:  DATA 6E,64
030A:  DATA 6F,2E
030C:  DATA 2E,2E
030E:  DATA 00,00
0310:  DATA 20,31
0312:  DATA 3E,35
0314:  DATA 35,35
0316:  DATA 20,32
0318:  DATA 3E,4C
031A:  DATA 4D,32
031C:  DATA 32,34
031E:  DATA 00,00
0320:  DATA 20,34
0322:  DATA 3E,37
0324:  DATA 34,31
0326:  DATA 20,33
0328:  DATA 3E,50
032A:  DATA 61,67
032C:  DATA 2E,53
032E:  DATA 69,67
0330:  DATA 2E,00
0332:  DATA 20,37
0334:  DATA 34,31
0336:  DATA 20,54
0338:  DATA 65,73
033A:  DATA 74,69
033C:  DATA 6E,67
033E:  DATA 2E,2E
0340:  DATA 2E,00
0342:  DATA 20,32
0344:  DATA 3E,56
0346:  DATA 6F,6C
0348:  DATA 76,65
034A:  DATA 72,00
034C:  DATA 20,41
034E:  DATA 6D,70
0350:  DATA 4F,70
0352:  DATA 20,42
0354:  DATA 75,65
0356:  DATA 6E,6F
0358:  DATA 21,00
035A:  DATA 20,52
035C:  DATA 65,67
035E:  DATA 72,65
0360:  DATA 73,61
0362:  DATA 6E,64
0364:  DATA 6F,2E
0366:  DATA 2E,2E
0368:  DATA 00,00
036A:  DATA 20,31
036C:  DATA 3E,35
036E:  DATA 35,35
0370:  DATA 20,32
0372:  DATA 3E,4C
0374:  DATA 4D,32
0376:  DATA 32,34
0378:  DATA 00,00
037A:  DATA 20,34
037C:  DATA 3E,37
037E:  DATA 34,31
0380:  DATA 20,33
0382:  DATA 3E,50
0384:  DATA 61,67
0386:  DATA 2E,53
0388:  DATA 69,67
038A:  DATA 2E,00
038C:  DATA 20,52
038E:  DATA 65,67
0390:  DATA 72,65
0392:  DATA 73,61
0394:  DATA 6E,64
0396:  DATA 6F,2E
0398:  DATA 2E,2E
039A:  DATA 00,00
039C:  DATA 20,31
039E:  DATA 3E,35
03A0:  DATA 35,35
03A2:  DATA 20,32
03A4:  DATA 3E,4C
03A6:  DATA 4D,32
03A8:  DATA 32,34
03AA:  DATA 00,00
03AC:  DATA 20,34
03AE:  DATA 3E,37
03B0:  DATA 34,31
03B2:  DATA 20,33
03B4:  DATA 3E,50
03B6:  DATA 61,67
03B8:  DATA 2E,53
03BA:  DATA 69,67
03BC:  DATA 2E,00
03BE:  DATA 20,31
03C0:  DATA 3E,4C
03C2:  DATA 4D,33
03C4:  DATA 35,38
03C6:  DATA 20,32
03C8:  DATA 3E,4C
03CA:  DATA 4D,33
03CC:  DATA 34,38
03CE:  DATA 00,00
03D0:  DATA 20,34
03D2:  DATA 3E,4C
03D4:  DATA 4D,33
03D6:  DATA 32,34
03D8:  DATA 20,33
03DA:  DATA 3E,50
03DC:  DATA 61,67
03DE:  DATA 2E,53
03E0:  DATA 69,67
03E2:  DATA 2E,00
03E4:  DATA 20,4C
03E6:  DATA 4D,33
03E8:  DATA 32,34
03EA:  DATA 20,54
03EC:  DATA 65,73
03EE:  DATA 74,69
03F0:  DATA 6E,67
03F2:  DATA 2E,2E
03F4:  DATA 2E,00
03F6:  DATA 20,32
03F8:  DATA 3E,56
03FA:  DATA 6F,6C
03FC:  DATA 76,65
03FE:  DATA 72,00
0400:  DATA 20,41
0402:  DATA 6D,70
0404:  DATA 4F,70
0406:  DATA 2D,31
0408:  DATA 20,42
040A:  DATA 75,65
040C:  DATA 6E,6F
040E:  DATA 21,00
0410:  DATA 20,4C
0412:  DATA 4D,33
0414:  DATA 32,34
0416:  DATA 20,54
0418:  DATA 65,73
041A:  DATA 74,69
041C:  DATA 6E,67
041E:  DATA 2E,2E
0420:  DATA 2E,00
0422:  DATA 20,41
0424:  DATA 6D,70
0426:  DATA 4F,70
0428:  DATA 2D,32
042A:  DATA 20,42
042C:  DATA 75,65
042E:  DATA 6E,6F
0430:  DATA 21,00
0432:  DATA 20,4C
0434:  DATA 4D,33
0436:  DATA 32,34
0438:  DATA 20,54
043A:  DATA 65,73
043C:  DATA 74,69
043E:  DATA 6E,67
0440:  DATA 2E,2E
0442:  DATA 2E,00
0444:  DATA 20,41
0446:  DATA 6D,70
0448:  DATA 4F,70
044A:  DATA 2D,33
044C:  DATA 20,42
044E:  DATA 75,65
0450:  DATA 6E,6F
0452:  DATA 21,00
0454:  DATA 20,4C
0456:  DATA 4D,33
0458:  DATA 32,34
045A:  DATA 20,54
045C:  DATA 65,73
045E:  DATA 74,69
0460:  DATA 6E,67
0462:  DATA 2E,2E
0464:  DATA 2E,00
0466:  DATA 20,41
0468:  DATA 6D,70
046A:  DATA 4F,70
046C:  DATA 2D,34
046E:  DATA 20,42
0470:  DATA 75,65
0472:  DATA 6E,6F
0474:  DATA 21,00
0476:  DATA 20,4C
0478:  DATA 4D,33
047A:  DATA 32,34
047C:  DATA 20,54
047E:  DATA 65,73
0480:  DATA 74,69
0482:  DATA 6E,67
0484:  DATA 2E,2E
0486:  DATA 2E,00
0488:  DATA 20,42
048A:  DATA 75,65
048C:  DATA 6E,6F
048E:  DATA 73,20
0490:  DATA 25,69
0492:  DATA 00,00
0494:  DATA 20,52
0496:  DATA 65,67
0498:  DATA 72,65
049A:  DATA 73,61
049C:  DATA 6E,64
049E:  DATA 6F,2E
04A0:  DATA 2E,2E
04A2:  DATA 00,00
04A4:  DATA 20,31
04A6:  DATA 3E,4C
04A8:  DATA 4D,33
04AA:  DATA 35,38
04AC:  DATA 20,32
04AE:  DATA 3E,4C
04B0:  DATA 4D,33
04B2:  DATA 34,38
04B4:  DATA 00,00
04B6:  DATA 20,34
04B8:  DATA 3E,4C
04BA:  DATA 4D,33
04BC:  DATA 32,34
04BE:  DATA 20,33
04C0:  DATA 3E,50
04C2:  DATA 61,67
04C4:  DATA 2E,53
04C6:  DATA 69,67
04C8:  DATA 2E,00
04CA:  DATA 20,31
04CC:  DATA 3E,4E
04CE:  DATA 50,4E
04D0:  DATA 20,32
04D2:  DATA 3E,50
04D4:  DATA 4E,50
04D6:  DATA 00,00
04D8:  DATA 20,34
04DA:  DATA 3E,4E
04DC:  DATA 41,44
04DE:  DATA 41,20
04E0:  DATA 33,3E
04E2:  DATA 52,65
04E4:  DATA 67,72
04E6:  DATA 65,73
04E8:  DATA 61,72
04EA:  DATA 00,00
04EC:  DATA 4E,50
04EE:  DATA 4E,20
04F0:  DATA 54,65
04F2:  DATA 73,74
04F4:  DATA 69,6E
04F6:  DATA 67,2E
04F8:  DATA 2E,2E
04FA:  DATA 00,00
04FC:  DATA 4E,50
04FE:  DATA 4E,20
0500:  DATA 42,55
0502:  DATA 45,4E
0504:  DATA 4F,00
0506:  DATA 20,32
0508:  DATA 3E,56
050A:  DATA 6F,6C
050C:  DATA 76,65
050E:  DATA 72,00
0510:  DATA 4E,50
0512:  DATA 4E,20
0514:  DATA 4D,41
0516:  DATA 4C,4F
0518:  DATA 00,00
051A:  DATA 20,32
051C:  DATA 3E,56
051E:  DATA 6F,6C
0520:  DATA 76,65
0522:  DATA 72,00
0524:  DATA 20,52
0526:  DATA 65,67
0528:  DATA 72,65
052A:  DATA 73,61
052C:  DATA 6E,64
052E:  DATA 6F,2E
0530:  DATA 2E,2E
0532:  DATA 00,00
0534:  DATA 20,31
0536:  DATA 3E,4E
0538:  DATA 50,4E
053A:  DATA 20,32
053C:  DATA 3E,50
053E:  DATA 4E,50
0540:  DATA 00,00
0542:  DATA 20,34
0544:  DATA 3E,4E
0546:  DATA 41,44
0548:  DATA 41,20
054A:  DATA 33,3E
054C:  DATA 52,65
054E:  DATA 67,72
0550:  DATA 65,73
0552:  DATA 61,72
0554:  DATA 00,00
*
0802:  TBLRD*+
0804:  MOVF   FF5,F
0806:  BZ    0820
0808:  MOVFF  FF6,3F
080C:  MOVFF  FF7,40
0810:  MOVFF  FF5,4C
0814:  RCALL  07C0
0816:  MOVFF  3F,FF6
081A:  MOVFF  40,FF7
081E:  BRA    0802
0820:  RETURN 0
*
0880:  MOVLW  8E
0882:  MOVWF  00
0884:  MOVFF  40,01
0888:  MOVFF  3F,02
088C:  CLRF   03
088E:  MOVF   01,F
0890:  BNZ   08A4
0892:  MOVFF  02,01
0896:  CLRF   02
0898:  MOVLW  08
089A:  SUBWF  00,F
089C:  MOVF   01,F
089E:  BNZ   08A4
08A0:  CLRF   00
08A2:  BRA    08B4
08A4:  BCF    FD8.0
08A6:  BTFSC  01.7
08A8:  BRA    08B2
08AA:  RLCF   02,F
08AC:  RLCF   01,F
08AE:  DECF   00,F
08B0:  BRA    08A4
08B2:  BCF    01.7
08B4:  GOTO   0DD0 (RETURN)
08B8:  MOVF   4C,W
08BA:  BTFSC  FD8.2
08BC:  BRA    09A0
08BE:  MOVWF  00
08C0:  MOVF   50,W
08C2:  BTFSC  FD8.2
08C4:  BRA    09A0
08C6:  ADDWF  00,F
08C8:  BNC   08D2
08CA:  MOVLW  81
08CC:  ADDWF  00,F
08CE:  BC    09A0
08D0:  BRA    08DA
08D2:  MOVLW  7F
08D4:  SUBWF  00,F
08D6:  BNC   09A0
08D8:  BZ    09A0
08DA:  MOVFF  4D,54
08DE:  MOVF   51,W
08E0:  XORWF  54,F
08E2:  BSF    4D.7
08E4:  BSF    51.7
08E6:  MOVF   4F,W
08E8:  MULWF  53
08EA:  MOVFF  FF4,56
08EE:  MOVF   4E,W
08F0:  MULWF  52
08F2:  MOVFF  FF4,03
08F6:  MOVFF  FF3,55
08FA:  MULWF  53
08FC:  MOVF   FF3,W
08FE:  ADDWF  56,F
0900:  MOVF   FF4,W
0902:  ADDWFC 55,F
0904:  MOVLW  00
0906:  ADDWFC 03,F
0908:  MOVF   4F,W
090A:  MULWF  52
090C:  MOVF   FF3,W
090E:  ADDWF  56,F
0910:  MOVF   FF4,W
0912:  ADDWFC 55,F
0914:  MOVLW  00
0916:  CLRF   02
0918:  ADDWFC 03,F
091A:  ADDWFC 02,F
091C:  MOVF   4D,W
091E:  MULWF  53
0920:  MOVF   FF3,W
0922:  ADDWF  55,F
0924:  MOVF   FF4,W
0926:  ADDWFC 03,F
0928:  MOVLW  00
092A:  ADDWFC 02,F
092C:  MOVF   4D,W
092E:  MULWF  52
0930:  MOVF   FF3,W
0932:  ADDWF  03,F
0934:  MOVF   FF4,W
0936:  ADDWFC 02,F
0938:  MOVLW  00
093A:  CLRF   01
093C:  ADDWFC 01,F
093E:  MOVF   4F,W
0940:  MULWF  51
0942:  MOVF   FF3,W
0944:  ADDWF  55,F
0946:  MOVF   FF4,W
0948:  ADDWFC 03,F
094A:  MOVLW  00
094C:  ADDWFC 02,F
094E:  ADDWFC 01,F
0950:  MOVF   4E,W
0952:  MULWF  51
0954:  MOVF   FF3,W
0956:  ADDWF  03,F
0958:  MOVF   FF4,W
095A:  ADDWFC 02,F
095C:  MOVLW  00
095E:  ADDWFC 01,F
0960:  MOVF   4D,W
0962:  MULWF  51
0964:  MOVF   FF3,W
0966:  ADDWF  02,F
0968:  MOVF   FF4,W
096A:  ADDWFC 01,F
096C:  INCF   00,F
096E:  BTFSC  01.7
0970:  BRA    097C
0972:  RLCF   55,F
0974:  RLCF   03,F
0976:  RLCF   02,F
0978:  RLCF   01,F
097A:  DECF   00,F
097C:  MOVLW  00
097E:  BTFSS  55.7
0980:  BRA    0996
0982:  INCF   03,F
0984:  ADDWFC 02,F
0986:  ADDWFC 01,F
0988:  MOVF   01,W
098A:  BNZ   0996
098C:  MOVF   02,W
098E:  BNZ   0996
0990:  MOVF   03,W
0992:  BNZ   0996
0994:  INCF   00,F
0996:  BTFSC  54.7
0998:  BSF    01.7
099A:  BTFSS  54.7
099C:  BCF    01.7
099E:  BRA    09A8
09A0:  CLRF   00
09A2:  CLRF   01
09A4:  CLRF   02
09A6:  CLRF   03
09A8:  RETURN 0
09AA:  TBLRD*+
09AC:  MOVFF  FF6,40
09B0:  MOVFF  FF7,41
09B4:  MOVFF  FF5,4C
09B8:  RCALL  07C0
09BA:  MOVFF  40,FF6
09BE:  MOVFF  41,FF7
09C2:  DECFSZ 3F,F
09C4:  BRA    09AA
09C6:  RETURN 0
09C8:  MOVF   4C,W
09CA:  SUBLW  B6
09CC:  MOVWF  4C
09CE:  CLRF   03
09D0:  MOVFF  4D,50
09D4:  BSF    4D.7
09D6:  BCF    FD8.0
09D8:  RRCF   4D,F
09DA:  RRCF   4E,F
09DC:  RRCF   4F,F
09DE:  RRCF   03,F
09E0:  RRCF   02,F
09E2:  RRCF   01,F
09E4:  RRCF   00,F
09E6:  DECFSZ 4C,F
09E8:  BRA    09D6
09EA:  BTFSS  50.7
09EC:  BRA    0A04
09EE:  COMF   00,F
09F0:  COMF   01,F
09F2:  COMF   02,F
09F4:  COMF   03,F
09F6:  INCF   00,F
09F8:  BTFSC  FD8.2
09FA:  INCF   01,F
09FC:  BTFSC  FD8.2
09FE:  INCF   02,F
0A00:  BTFSC  FD8.2
0A02:  INCF   03,F
0A04:  GOTO   0AE4 (RETURN)
0A08:  BTFSC  FD8.1
0A0A:  BRA    0A12
0A0C:  CLRF   FEA
0A0E:  MOVLW  54
0A10:  MOVWF  FE9
0A12:  CLRF   00
0A14:  CLRF   01
0A16:  CLRF   02
0A18:  CLRF   03
0A1A:  CLRF   54
0A1C:  CLRF   55
0A1E:  CLRF   56
0A20:  CLRF   57
0A22:  MOVF   53,W
0A24:  IORWF  52,W
0A26:  IORWF  51,W
0A28:  IORWF  50,W
0A2A:  BZ    0A84
0A2C:  MOVLW  20
0A2E:  MOVWF  58
0A30:  BCF    FD8.0
0A32:  RLCF   4C,F
0A34:  RLCF   4D,F
0A36:  RLCF   4E,F
0A38:  RLCF   4F,F
0A3A:  RLCF   54,F
0A3C:  RLCF   55,F
0A3E:  RLCF   56,F
0A40:  RLCF   57,F
0A42:  MOVF   53,W
0A44:  SUBWF  57,W
0A46:  BNZ   0A58
0A48:  MOVF   52,W
0A4A:  SUBWF  56,W
0A4C:  BNZ   0A58
0A4E:  MOVF   51,W
0A50:  SUBWF  55,W
0A52:  BNZ   0A58
0A54:  MOVF   50,W
0A56:  SUBWF  54,W
0A58:  BNC   0A78
0A5A:  MOVF   50,W
0A5C:  SUBWF  54,F
0A5E:  MOVF   51,W
0A60:  BTFSS  FD8.0
0A62:  INCFSZ 51,W
0A64:  SUBWF  55,F
0A66:  MOVF   52,W
0A68:  BTFSS  FD8.0
0A6A:  INCFSZ 52,W
0A6C:  SUBWF  56,F
0A6E:  MOVF   53,W
0A70:  BTFSS  FD8.0
0A72:  INCFSZ 53,W
0A74:  SUBWF  57,F
0A76:  BSF    FD8.0
0A78:  RLCF   00,F
0A7A:  RLCF   01,F
0A7C:  RLCF   02,F
0A7E:  RLCF   03,F
0A80:  DECFSZ 58,F
0A82:  BRA    0A30
0A84:  MOVFF  54,FEF
0A88:  MOVFF  55,FEC
0A8C:  MOVFF  56,FEC
0A90:  MOVFF  57,FEC
0A94:  RETURN 0
0A96:  MOVF   FE9,W
0A98:  MOVWF  44
0A9A:  MOVF   43,W
0A9C:  MOVWF  46
0A9E:  BZ    0AD2
0AA0:  MOVFF  42,4F
0AA4:  MOVFF  41,4E
0AA8:  MOVFF  40,4D
0AAC:  MOVFF  3F,4C
0AB0:  CLRF   53
0AB2:  CLRF   52
0AB4:  MOVLW  20
0AB6:  MOVWF  51
0AB8:  MOVLW  82
0ABA:  MOVWF  50
0ABC:  RCALL  08B8
0ABE:  MOVFF  03,42
0AC2:  MOVFF  02,41
0AC6:  MOVFF  01,40
0ACA:  MOVFF  00,3F
0ACE:  DECFSZ 46,F
0AD0:  BRA    0AA0
0AD2:  MOVFF  42,4F
0AD6:  MOVFF  41,4E
0ADA:  MOVFF  40,4D
0ADE:  MOVFF  3F,4C
0AE2:  BRA    09C8
0AE4:  MOVFF  03,42
0AE8:  MOVFF  02,41
0AEC:  MOVFF  01,40
0AF0:  MOVFF  00,3F
0AF4:  BTFSS  42.7
0AF6:  BRA    0B12
0AF8:  DECF   44,F
0AFA:  BSF    44.5
0AFC:  COMF   3F,F
0AFE:  COMF   40,F
0B00:  COMF   41,F
0B02:  COMF   42,F
0B04:  INCF   3F,F
0B06:  BTFSC  FD8.2
0B08:  INCF   40,F
0B0A:  BTFSC  FD8.2
0B0C:  INCF   41,F
0B0E:  BTFSC  FD8.2
0B10:  INCF   42,F
0B12:  MOVLW  3B
0B14:  MOVWF  4B
0B16:  MOVLW  9A
0B18:  MOVWF  4A
0B1A:  MOVLW  CA
0B1C:  MOVWF  49
0B1E:  CLRF   48
0B20:  MOVLW  0A
0B22:  MOVWF  46
0B24:  MOVF   43,W
0B26:  BTFSC  FD8.2
0B28:  INCF   44,F
0B2A:  BSF    FD8.1
0B2C:  CLRF   FEA
0B2E:  MOVLW  3F
0B30:  MOVWF  FE9
0B32:  MOVFF  42,4F
0B36:  MOVFF  41,4E
0B3A:  MOVFF  40,4D
0B3E:  MOVFF  3F,4C
0B42:  MOVFF  4B,53
0B46:  MOVFF  4A,52
0B4A:  MOVFF  49,51
0B4E:  MOVFF  48,50
0B52:  RCALL  0A08
0B54:  MOVF   01,W
0B56:  MOVF   00,F
0B58:  BNZ   0B78
0B5A:  INCF   43,W
0B5C:  SUBWF  46,W
0B5E:  BZ    0B78
0B60:  MOVF   44,W
0B62:  BZ    0B7C
0B64:  ANDLW  0F
0B66:  SUBWF  46,W
0B68:  BZ    0B6C
0B6A:  BC    0BDA
0B6C:  BTFSC  44.7
0B6E:  BRA    0BDA
0B70:  BTFSC  44.6
0B72:  BRA    0B7C
0B74:  MOVLW  20
0B76:  BRA    0BD2
0B78:  MOVLW  20
0B7A:  ANDWF  44,F
0B7C:  BTFSS  44.5
0B7E:  BRA    0B98
0B80:  BCF    44.5
0B82:  MOVF   43,W
0B84:  BTFSS  FD8.2
0B86:  DECF   44,F
0B88:  MOVF   00,W
0B8A:  MOVWF  44
0B8C:  MOVLW  2D
0B8E:  MOVWF  4C
0B90:  RCALL  07C0
0B92:  MOVF   44,W
0B94:  MOVWF  00
0B96:  CLRF   44
0B98:  MOVF   43,W
0B9A:  SUBWF  46,W
0B9C:  BNZ   0BB2
0B9E:  MOVF   00,W
0BA0:  MOVWF  44
0BA2:  MOVLW  2E
0BA4:  MOVWF  4C
0BA6:  RCALL  07C0
0BA8:  MOVF   44,W
0BAA:  MOVWF  00
0BAC:  MOVLW  20
0BAE:  ANDWF  44,F
0BB0:  MOVLW  00
0BB2:  MOVLW  30
0BB4:  BTFSS  44.5
0BB6:  BRA    0BD2
0BB8:  BCF    44.5
0BBA:  MOVF   43,W
0BBC:  BTFSS  FD8.2
0BBE:  DECF   44,F
0BC0:  MOVF   00,W
0BC2:  MOVWF  44
0BC4:  MOVLW  2D
0BC6:  MOVWF  4C
0BC8:  RCALL  07C0
0BCA:  MOVF   44,W
0BCC:  MOVWF  00
0BCE:  CLRF   44
0BD0:  MOVLW  30
0BD2:  ADDWF  00,F
0BD4:  MOVFF  00,4C
0BD8:  RCALL  07C0
0BDA:  BCF    FD8.1
0BDC:  MOVFF  4B,4F
0BE0:  MOVFF  4A,4E
0BE4:  MOVFF  49,4D
0BE8:  MOVFF  48,4C
0BEC:  CLRF   53
0BEE:  CLRF   52
0BF0:  CLRF   51
0BF2:  MOVLW  0A
0BF4:  MOVWF  50
0BF6:  RCALL  0A08
0BF8:  MOVFF  03,4B
0BFC:  MOVFF  02,4A
0C00:  MOVFF  01,49
0C04:  MOVFF  00,48
0C08:  DECFSZ 46,F
0C0A:  BRA    0B2A
0C0C:  GOTO   0E6A (RETURN)
0C10:  MOVF   46,W
0C12:  CLRF   01
0C14:  SUBWF  45,W
0C16:  BC    0C1E
0C18:  MOVFF  45,00
0C1C:  BRA    0C36
0C1E:  CLRF   00
0C20:  MOVLW  08
0C22:  MOVWF  47
0C24:  RLCF   45,F
0C26:  RLCF   00,F
0C28:  MOVF   46,W
0C2A:  SUBWF  00,W
0C2C:  BTFSC  FD8.0
0C2E:  MOVWF  00
0C30:  RLCF   01,F
0C32:  DECFSZ 47,F
0C34:  BRA    0C24
0C36:  RETURN 0
0C38:  MOVLW  20
0C3A:  BTFSS  40.4
0C3C:  MOVLW  30
0C3E:  MOVWF  41
0C40:  MOVFF  3F,00
0C44:  BTFSS  3F.7
0C46:  BRA    0C58
0C48:  COMF   00,F
0C4A:  INCF   00,F
0C4C:  MOVFF  00,3F
0C50:  MOVLW  2D
0C52:  MOVWF  41
0C54:  BSF    40.7
0C56:  BSF    40.0
0C58:  MOVF   01,W
0C5A:  MOVFF  3F,45
0C5E:  MOVLW  64
0C60:  MOVWF  46
0C62:  RCALL  0C10
0C64:  MOVFF  00,3F
0C68:  MOVLW  30
0C6A:  ADDWF  01,W
0C6C:  MOVWF  42
0C6E:  MOVFF  3F,45
0C72:  MOVLW  0A
0C74:  MOVWF  46
0C76:  RCALL  0C10
0C78:  MOVLW  30
0C7A:  ADDWF  00,W
0C7C:  MOVWF  44
0C7E:  MOVLW  30
0C80:  ADDWF  01,W
0C82:  MOVWF  43
0C84:  MOVFF  41,00
0C88:  MOVLW  30
0C8A:  SUBWF  42,W
0C8C:  BZ    0C96
0C8E:  BSF    40.1
0C90:  BTFSC  40.7
0C92:  BSF    40.2
0C94:  BRA    0CBA
0C96:  MOVFF  41,42
0C9A:  MOVLW  20
0C9C:  MOVWF  41
0C9E:  MOVLW  30
0CA0:  SUBWF  43,W
0CA2:  BZ    0CAC
0CA4:  BSF    40.0
0CA6:  BTFSC  40.7
0CA8:  BSF    40.1
0CAA:  BRA    0CBA
0CAC:  BTFSS  FD8.2
0CAE:  BSF    40.0
0CB0:  BNZ   0CBA
0CB2:  MOVFF  42,43
0CB6:  MOVLW  20
0CB8:  MOVWF  42
0CBA:  BTFSC  40.2
0CBC:  BRA    0CC8
0CBE:  BTFSC  40.1
0CC0:  BRA    0CCE
0CC2:  BTFSC  40.0
0CC4:  BRA    0CD4
0CC6:  BRA    0CDA
0CC8:  MOVFF  41,4C
0CCC:  RCALL  07C0
0CCE:  MOVFF  42,4C
0CD2:  RCALL  07C0
0CD4:  MOVFF  43,4C
0CD8:  RCALL  07C0
0CDA:  MOVFF  44,4C
0CDE:  RCALL  07C0
0CE0:  RETURN 0
.................... 
.................... #list
.................... 
.................... #device ADC = 10
.................... #use i2c(Master,Fast=100000, sda=PIN_B0, scl=PIN_B1,force_sw)
*
057E:  MOVLW  08
0580:  MOVWF  01
0582:  NOP   
0584:  BCF    F8A.1
0586:  BCF    F93.1
0588:  NOP   
058A:  RLCF   5A,F
058C:  BCF    F8A.0
058E:  BTFSC  FD8.0
0590:  BSF    F93.0
0592:  BTFSS  FD8.0
0594:  BCF    F93.0
0596:  BSF    F93.1
0598:  BTFSS  F81.1
059A:  BRA    0598
059C:  DECFSZ 01,F
059E:  BRA    0582
05A0:  NOP   
05A2:  BCF    F8A.1
05A4:  BCF    F93.1
05A6:  NOP   
05A8:  BSF    F93.0
05AA:  NOP   
05AC:  NOP   
05AE:  BSF    F93.1
05B0:  BTFSS  F81.1
05B2:  BRA    05B0
05B4:  CLRF   01
05B6:  NOP   
05B8:  BTFSC  F81.0
05BA:  BSF    01.0
05BC:  BCF    F8A.1
05BE:  BCF    F93.1
05C0:  BCF    F8A.0
05C2:  BCF    F93.0
05C4:  RETURN 0
.................... #include <i2c_Flex_LCD.c>
.................... //----------------------------------------------------------------------------- 
.................... // Title:         i2c_Flex_LCD 
.................... // Description:   Driver for common LCD with 1/2/3 or 4 rows by 1...20 columns 
.................... //                using PCF8574T interface board with I2C protocol. 
.................... // Date:          Nov-2013 
.................... // Ver.Rev.:      1.1 
.................... // Author:        Hugo Silva (sergio-hugo@bol.com.br) #Based on the routines of 
.................... //                "20X4_LCD_I2C_DRIVER.h" from Pumrin S. and "lcd4_i2c.c" from XP8100 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // lcd_init() Must be called before any other function. 
.................... // 
.................... // lcd_putc(c) Will display c on the next position of the LCD. 
.................... //  
.................... //     \f Clear LCD display 
.................... //     \n Set write position on next lcd line 
.................... //     \b LCD backspace 
.................... //     lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1) 
.................... // 
.................... // lcd_backlight_led(ON)/lcd_backlight_led(OFF) = Turn ON/OFF LCD Backlight LED 
.................... // 
.................... //----------------------------------------------------------------------------- 
.................... // LCD pins D0-D3 are not used. 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // Comment   : Control of a compatible LCD (1...4 rows by 1...4 columns) from 
.................... //              a bus I2C with an EXPANDER of I/O with connection I2C. 
.................... //              The tests of these routines have been programmed using the IC 
.................... //              Phillips PCF8574T. I've used 4 bits mode programming. 
.................... //              The 8 bits mode programming is possible if you use 2 x PCF8574T. 
.................... //              RW Pin is not being used. 
.................... // 
.................... // As defined in the following structure the pin connection is as follows: 
.................... // 
.................... //  PCF8574P     LCD 
.................... //  ========     ====== 
.................... //     P0        RS 
.................... //     P1        RW    (Not used!) 
.................... //     P2        Enable  
.................... //     P3        Led Backlight 
.................... //     P4        D4 
.................... //     P5        D5 
.................... //     P6        D6 
.................... //     P7        D7 
.................... // 
.................... //  The SCL and SDA pins should be pull-up resistor as shown below: 
.................... // 
.................... //             +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SDA pin  
.................... //(SDA)                      
.................... //              +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SCL pin  
.................... //(SCL) 
.................... // 
.................... //To PIC                    To i2c slave 
.................... //Vss pin ----------------- Vss or ground pin  
.................... //                | 
.................... //              ----- 
.................... //               ---  Ground 
.................... //                -  
.................... //  
.................... // THIS DOCUMENT IS PROVIDED TO THE USER "AS IS" 
.................... //----------------------------------------------------------------------------- 
.................... byte LCD_ADDR ;//             0x4E        //I2C slave address for LCD module 
.................... byte lcd_total_rows ;//       2           //Number of rows: 1,2,3 or 4 
.................... byte lcd_total_columns ;//    16          //Number of columns: 1...20   
.................... 
.................... #define RS                    0b00000001  //P0 - PCF8574T Pin connected to RS 
.................... #define RW                    0b00000010  //P1 - PCF8574T Pin connected to RW 
.................... #define ENABLE                0b00000100  //P2 - PCF8574T Pin connected to EN 
.................... #define LCD_BACKLIGHT         0b00001000  //P3 - PCF8574T Pin connected to BACKLIGHT LED 
.................... 
.................... #define addr_row_one          0x00        //LCD RAM address for row 1 
.................... #define addr_row_two          0x40        //LCD RAM address for row 2 
.................... #define addr_row_three        0x14        //LCD RAM address for row 3 
.................... #define addr_row_four         0x54        //LCD RAM address for row 4 
.................... 
.................... #define ON                    1 
.................... #define OFF                   0 
.................... #define NOT                   ~ 
.................... #define data_shifted          data<<4 
.................... 
.................... #use delay(clock=4Mhz)
*
0556:  CLRF   FEA
0558:  MOVLW  4D
055A:  MOVWF  FE9
055C:  MOVF   FEF,W
055E:  BZ    057C
0560:  MOVLW  01
0562:  MOVWF  01
0564:  CLRF   00
0566:  DECFSZ 00,F
0568:  BRA    0566
056A:  DECFSZ 01,F
056C:  BRA    0564
056E:  MOVLW  4A
0570:  MOVWF  00
0572:  DECFSZ 00,F
0574:  BRA    0572
0576:  BRA    0578
0578:  DECFSZ FEF,F
057A:  BRA    0560
057C:  RETURN 0
.................... int8 new_row_request=1, BACKLIGHT_LED=LCD_BACKLIGHT; 
.................... 
.................... void lcd_backlight_led(byte bl) 
.................... {  
....................       If (bl) BACKLIGHT_LED=LCD_BACKLIGHT; else BACKLIGHT_LED=OFF; 
.................... } 
.................... 
.................... void i2c_send_nibble(byte data, byte type) 
.................... {    
....................    switch (type) 
*
05C6:  MOVF   58,W
05C8:  XORLW  00
05CA:  BZ    05D2
05CC:  XORLW  01
05CE:  BZ    0612
05D0:  BRA    0654
....................    {      
....................       case 0 :      
....................       i2c_write(data_shifted | BACKLIGHT_LED); 
05D2:  SWAPF  57,W
05D4:  MOVWF  00
05D6:  MOVLW  F0
05D8:  ANDWF  00,F
05DA:  MOVF   00,W
05DC:  IORWF  1D,W
05DE:  MOVWF  59
05E0:  MOVWF  5A
05E2:  RCALL  057E
....................       delay_cycles(1); 
05E4:  NOP   
....................       i2c_write(data_shifted | ENABLE | BACKLIGHT_LED ); 
05E6:  SWAPF  57,W
05E8:  MOVWF  00
05EA:  MOVLW  F0
05EC:  ANDWF  00,F
05EE:  MOVF   00,W
05F0:  IORLW  04
05F2:  IORWF  1D,W
05F4:  MOVWF  59
05F6:  MOVWF  5A
05F8:  RCALL  057E
....................       delay_us(2); 
05FA:  BRA    05FC
....................       i2c_write(data_shifted & NOT ENABLE | BACKLIGHT_LED); 
05FC:  SWAPF  57,W
05FE:  MOVWF  00
0600:  MOVLW  F0
0602:  ANDWF  00,F
0604:  MOVF   00,W
0606:  ANDLW  FB
0608:  IORWF  1D,W
060A:  MOVWF  59
060C:  MOVWF  5A
060E:  RCALL  057E
....................       break; 
0610:  BRA    0654
....................       
....................       case 1 : 
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
0612:  SWAPF  57,W
0614:  MOVWF  00
0616:  MOVLW  F0
0618:  ANDWF  00,F
061A:  MOVF   00,W
061C:  IORLW  01
061E:  IORWF  1D,W
0620:  MOVWF  59
0622:  MOVWF  5A
0624:  RCALL  057E
....................       delay_cycles(1); 
0626:  NOP   
....................       i2c_write(data_shifted | RS | ENABLE | BACKLIGHT_LED ); 
0628:  SWAPF  57,W
062A:  MOVWF  00
062C:  MOVLW  F0
062E:  ANDWF  00,F
0630:  MOVF   00,W
0632:  IORLW  01
0634:  IORLW  04
0636:  IORWF  1D,W
0638:  MOVWF  59
063A:  MOVWF  5A
063C:  RCALL  057E
....................       delay_us(2); 
063E:  BRA    0640
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
0640:  SWAPF  57,W
0642:  MOVWF  00
0644:  MOVLW  F0
0646:  ANDWF  00,F
0648:  MOVF   00,W
064A:  IORLW  01
064C:  IORWF  1D,W
064E:  MOVWF  59
0650:  MOVWF  5A
0652:  RCALL  057E
....................       break; 
....................    } 
0654:  RETURN 0
.................... } 
....................     
.................... void lcd_send_byte(byte data, byte type) 
....................    { 
....................         i2c_start(); 
0656:  BSF    F93.0
0658:  NOP   
065A:  BSF    F93.1
065C:  NOP   
065E:  BCF    F8A.0
0660:  BCF    F93.0
0662:  NOP   
0664:  BCF    F8A.1
0666:  BCF    F93.1
....................         i2c_write(LCD_ADDR); 
0668:  MOVFF  19,5A
066C:  RCALL  057E
....................         i2c_send_nibble(data >> 4 , type); 
066E:  SWAPF  54,W
0670:  MOVWF  56
0672:  MOVLW  0F
0674:  ANDWF  56,F
0676:  MOVFF  56,57
067A:  MOVFF  55,58
067E:  RCALL  05C6
....................         i2c_send_nibble(data & 0xf , type); 
0680:  MOVF   54,W
0682:  ANDLW  0F
0684:  MOVWF  56
0686:  MOVWF  57
0688:  MOVFF  55,58
068C:  RCALL  05C6
....................         i2c_stop();        
068E:  BCF    F93.0
0690:  NOP   
0692:  BSF    F93.1
0694:  BTFSS  F81.1
0696:  BRA    0694
0698:  NOP   
069A:  BRA    069C
069C:  NOP   
069E:  BSF    F93.0
06A0:  NOP   
06A2:  RETURN 0
....................    } 
.................... 
.................... void lcd_clear() 
.................... {  
....................         lcd_send_byte(0x01,0); 
06A4:  MOVLW  01
06A6:  MOVWF  54
06A8:  CLRF   55
06AA:  RCALL  0656
....................         delay_ms(2); 
06AC:  MOVLW  02
06AE:  MOVWF  4D
06B0:  RCALL  0556
....................         new_row_request=1; 
06B2:  MOVLW  01
06B4:  MOVWF  1C
06B6:  RETURN 0
.................... } 
.................... 
.................... void lcd_init(byte ADDR, byte col, byte row) 
.................... { 
....................    byte i;
....................    byte CONST lcd_type=2;  // 0=5x7, 1=5x10, 2=2 lines 
....................    byte CONST LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; // These bytes need to be sent to the LCD to start it up.
....................    
....................    LCD_ADDR =ADDR;//             0x4E        //I2C slave address for LCD module 
06B8:  MOVFF  3F,19
....................    lcd_total_rows =row;//       2           //Number of rows: 1,2,3 or 4 
06BC:  MOVFF  41,1A
....................    lcd_total_columns= col ;
06C0:  MOVFF  40,1B
....................    disable_interrupts(GLOBAL); 
06C4:  BCF    FF2.6
06C6:  BCF    FF2.7
06C8:  BTFSC  FF2.7
06CA:  BRA    06C6
....................    delay_ms(50); //LCD power up delay 
06CC:  MOVLW  32
06CE:  MOVWF  4D
06D0:  RCALL  0556
....................     
....................    i2c_start(); 
06D2:  BSF    F93.0
06D4:  NOP   
06D6:  BSF    F93.1
06D8:  NOP   
06DA:  BCF    F8A.0
06DC:  BCF    F93.0
06DE:  NOP   
06E0:  BCF    F8A.1
06E2:  BCF    F93.1
....................    i2c_write(LCD_ADDR); 
06E4:  MOVFF  19,5A
06E8:  RCALL  057E
....................       i2c_send_nibble(0x00,0); 
06EA:  CLRF   57
06EC:  CLRF   58
06EE:  RCALL  05C6
....................       delay_ms(15); 
06F0:  MOVLW  0F
06F2:  MOVWF  4D
06F4:  RCALL  0556
....................     
....................    for (i=1;i<=3;++i)    
06F6:  MOVLW  01
06F8:  MOVWF  42
06FA:  MOVF   42,W
06FC:  SUBLW  03
06FE:  BNC   0712
....................    { 
....................       i2c_send_nibble(0x03,0); 
0700:  MOVLW  03
0702:  MOVWF  57
0704:  CLRF   58
0706:  RCALL  05C6
....................       delay_ms(5); 
0708:  MOVLW  05
070A:  MOVWF  4D
070C:  RCALL  0556
070E:  INCF   42,F
0710:  BRA    06FA
....................    }    
....................       i2c_send_nibble(0x02,0); 
0712:  MOVLW  02
0714:  MOVWF  57
0716:  CLRF   58
0718:  RCALL  05C6
....................       delay_ms(5); 
071A:  MOVLW  05
071C:  MOVWF  4D
071E:  RCALL  0556
....................    i2c_stop(); 
0720:  BCF    F93.0
0722:  NOP   
0724:  BSF    F93.1
0726:  BTFSS  F81.1
0728:  BRA    0726
072A:  NOP   
072C:  BRA    072E
072E:  NOP   
0730:  BSF    F93.0
0732:  NOP   
....................     
....................    for (i=0;i<=3;++i) { 
0734:  CLRF   42
0736:  MOVF   42,W
0738:  SUBLW  03
073A:  BNC   0754
....................    lcd_send_byte(LCD_INIT_STRING[i],0); 
073C:  CLRF   03
073E:  MOVF   42,W
0740:  RCALL  00BA
0742:  MOVWF  43
0744:  MOVWF  54
0746:  CLRF   55
0748:  RCALL  0656
....................    delay_ms(5); 
074A:  MOVLW  05
074C:  MOVWF  4D
074E:  RCALL  0556
0750:  INCF   42,F
0752:  BRA    0736
....................    } 
....................    lcd_clear();  //Clear Display 
0754:  RCALL  06A4
....................    enable_interrupts(GLOBAL); 
0756:  MOVLW  C0
0758:  IORWF  FF2,F
075A:  GOTO   0D4A (RETURN)
.................... } 
.................... 
.................... void lcd_gotoxy( byte x, byte y) 
.................... { 
.................... byte row,column,row_addr,lcd_address; 
.................... static char data; 
.................... 
....................    if (y>lcd_total_rows) row=lcd_total_rows; else row=y; 
075E:  MOVF   4E,W
0760:  SUBWF  1A,W
0762:  BC    076A
0764:  MOVFF  1A,4F
0768:  BRA    076E
076A:  MOVFF  4E,4F
....................   
....................    switch(row) 
076E:  MOVF   4F,W
0770:  XORLW  01
0772:  BZ    0782
0774:  XORLW  03
0776:  BZ    0786
0778:  XORLW  01
077A:  BZ    078C
077C:  XORLW  07
077E:  BZ    0792
0780:  BRA    0798
....................    { 
....................       case 1:  row_addr=addr_row_one;     break; 
0782:  CLRF   51
0784:  BRA    079A
....................       case 2:  row_addr=addr_row_two;     break; 
0786:  MOVLW  40
0788:  MOVWF  51
078A:  BRA    079A
....................       case 3:  row_addr=addr_row_three;   break; 
078C:  MOVLW  14
078E:  MOVWF  51
0790:  BRA    079A
....................       case 4:  row_addr=addr_row_four;    break; 
0792:  MOVLW  54
0794:  MOVWF  51
0796:  BRA    079A
....................       default: row_addr=addr_row_one;     break;  
0798:  CLRF   51
....................    }  
....................     
....................    if (x>lcd_total_columns) column=lcd_total_columns; else column=x;  
079A:  MOVF   4D,W
079C:  SUBWF  1B,W
079E:  BC    07A6
07A0:  MOVFF  1B,50
07A4:  BRA    07AA
07A6:  MOVFF  4D,50
....................    lcd_address=(row_addr+(column-1)); 
07AA:  MOVLW  01
07AC:  SUBWF  50,W
07AE:  ADDWF  51,W
07B0:  MOVWF  52
....................    lcd_send_byte(0x80|lcd_address,0); 
07B2:  MOVF   52,W
07B4:  IORLW  80
07B6:  MOVWF  53
07B8:  MOVWF  54
07BA:  CLRF   55
07BC:  RCALL  0656
07BE:  RETURN 0
.................... } 
.................... 
.................... //Display the character on LCD screen. 
.................... void LCD_PUTC(char in_data) 
.................... {    
....................   switch(in_data) 
07C0:  MOVF   4C,W
07C2:  XORLW  0C
07C4:  BZ    07D0
07C6:  XORLW  06
07C8:  BZ    07D4
07CA:  XORLW  02
07CC:  BZ    07EC
07CE:  BRA    07F6
....................    {  
....................      case '\f': lcd_clear();                       break;                
07D0:  RCALL  06A4
07D2:  BRA    0800
....................       
....................      case '\n': 
....................      new_row_request++; 
07D4:  INCF   1C,F
....................      if (new_row_request>lcd_total_rows) new_row_request=1; 
07D6:  MOVF   1C,W
07D8:  SUBWF  1A,W
07DA:  BC    07E0
07DC:  MOVLW  01
07DE:  MOVWF  1C
....................      lcd_gotoxy(1, new_row_request); 
07E0:  MOVLW  01
07E2:  MOVWF  4D
07E4:  MOVFF  1C,4E
07E8:  RCALL  075E
....................      break; 
07EA:  BRA    0800
....................                   
....................      case '\b': lcd_send_byte(0x10,0);             break; 
07EC:  MOVLW  10
07EE:  MOVWF  54
07F0:  CLRF   55
07F2:  RCALL  0656
07F4:  BRA    0800
....................         
....................      default: lcd_send_byte(in_data,1);            break;      
07F6:  MOVFF  4C,54
07FA:  MOVLW  01
07FC:  MOVWF  55
07FE:  RCALL  0656
....................       
....................    } 
0800:  RETURN 0
.................... } 
.................... 
.................... #fuses intrc,nowdt
.................... #use delay(clock=4Mhz)
*
0822:  CLRF   FEA
0824:  MOVLW  40
0826:  MOVWF  FE9
0828:  MOVF   FEF,W
082A:  BZ    0848
082C:  MOVLW  01
082E:  MOVWF  01
0830:  CLRF   00
0832:  DECFSZ 00,F
0834:  BRA    0832
0836:  DECFSZ 01,F
0838:  BRA    0830
083A:  MOVLW  4A
083C:  MOVWF  00
083E:  DECFSZ 00,F
0840:  BRA    083E
0842:  BRA    0844
0844:  DECFSZ FEF,F
0846:  BRA    082C
0848:  RETURN 0
.................... //#include <lcd.c>
.................... #use fast_io(a)
.................... float Lecturaad620;
.................... int32 valor_recarga = 63899;
.................... //int32 valor_recarga = 0;
.................... int direccionI2C = 0x4E;
.................... int filas = 2;
.................... int columnas = 16;
.................... int pulsos_555 =  0;
.................... int1 bandera_prueba_555;
.................... int1 bandera_estado_555;
.................... int32 value;
.................... int opambuenos = 0;
.................... int1 NPN_estado;
.................... 
.................... #INT_EXT2
.................... void pulsos() {
....................    pulsos_555 = pulsos_555 + 1;
*
00CE:  MOVLW  01
00D0:  ADDWF  2A,F
....................    CLEAR_INTERRUPT(INT_EXT2);
00D2:  BCF    FF0.1
.................... }
.................... 
00D4:  BCF    FF0.1
00D6:  GOTO   006C
.................... #INT_RTCC 
.................... void tiempo_final_555() {
....................    DISABLE_INTERRUPTS(INT_EXT2);// Inhabilitar las interrupciones del timer0
00DA:  BCF    FF0.4
....................    DISABLE_INTERRUPTS(INT_RTCC);
00DC:  BCF    FF2.5
....................    bandera_prueba_555 = 0;
00DE:  BCF    2B.0
....................    if (pulsos_555 > 9) {
00E0:  MOVF   2A,W
00E2:  SUBLW  09
00E4:  BC    00EA
....................       bandera_estado_555 = 1;
00E6:  BSF    2B.1
....................    }
00E8:  BRA    00EC
....................    
....................    else {
....................       bandera_estado_555 = 0;
00EA:  BCF    2B.1
....................    }
....................    
....................    CLEAR_INTERRUPT(INT_RTCC);
00EC:  BCF    FF2.2
00EE:  BCF    FF2.2
00F0:  GOTO   006C
.................... }
.................... 
.................... int Boton(){
....................          if(input(PIN_A3)) {
*
084A:  BTFSS  F80.3
084C:  BRA    0856
....................             return 1;
084E:  MOVLW  01
0850:  MOVWF  01
0852:  BRA    087E
....................             } else if(input(PIN_A4)) {
0854:  BRA    087A
0856:  BTFSS  F80.4
0858:  BRA    0862
....................             return 2;
085A:  MOVLW  02
085C:  MOVWF  01
085E:  BRA    087E
....................             } else if(input(PIN_A5 )) {
0860:  BRA    087A
0862:  BTFSS  F80.5
0864:  BRA    086E
....................             return 3;
0866:  MOVLW  03
0868:  MOVWF  01
086A:  BRA    087E
....................             } else if (input(PIN_C0)){
086C:  BRA    087A
086E:  BSF    F94.0
0870:  BTFSS  F82.0
0872:  BRA    087A
....................             return 4;
0874:  MOVLW  04
0876:  MOVWF  01
0878:  BRA    087E
....................             }
....................             return 0;
087A:  MOVLW  00
087C:  MOVWF  01
087E:  RETURN 0
....................          }
.................... void main(){
*
0CE2:  CLRF   FF8
0CE4:  BCF    FD0.7
0CE6:  BSF    07.7
0CE8:  MOVLW  01
0CEA:  MOVWF  1C
0CEC:  MOVLW  08
0CEE:  MOVWF  1D
0CF0:  CLRF   26
0CF2:  CLRF   25
0CF4:  MOVLW  F9
0CF6:  MOVWF  24
0CF8:  MOVLW  9B
0CFA:  MOVWF  23
0CFC:  MOVLW  4E
0CFE:  MOVWF  27
0D00:  MOVLW  02
0D02:  MOVWF  28
0D04:  MOVLW  10
0D06:  MOVWF  29
0D08:  CLRF   2A
0D0A:  CLRF   30
0D0C:  CLRF   32
0D0E:  CLRF   31
0D10:  MOVF   FC1,W
0D12:  ANDLW  C0
0D14:  IORLW  0F
0D16:  MOVWF  FC1
0D18:  MOVLW  07
0D1A:  MOVWF  FB4
0D1C:  CLRF   1E
....................       setup_oscillator(OSC_4MHZ);
0D1E:  MOVLW  60
0D20:  MOVWF  FD3
0D22:  MOVF   FD3,W
....................       set_tris_a(0xff);// puerto a entrada
0D24:  MOVLW  FF
0D26:  MOVWF  F92
....................       set_tris_d(0x00);// puerto d salida
0D28:  MOVLW  00
0D2A:  MOVWF  F95
....................       set_tris_c(0xff);// puerto c entrada
0D2C:  MOVLW  FF
0D2E:  MOVWF  F94
....................       SETUP_COUNTERS(RTCC_INTERNAL,RTCC_DIV_256);
0D30:  BCF    FD1.0
0D32:  MOVLW  87
0D34:  MOVWF  FD5
....................       ENABLE_INTERRUPTS(GLOBAL);// Habilita las interrupciones globales
0D36:  MOVLW  C0
0D38:  IORWF  FF2,F
....................       ext_int_edge(H_TO_L); //Inicia el flanco de la interruccion de alto abajo
0D3A:  BCF    FF1.6
....................       lcd_init(direccionI2C,filas,columnas);
0D3C:  MOVFF  27,3F
0D40:  MOVFF  28,40
0D44:  MOVFF  29,41
0D48:  BRA    06B8
....................       setup_adc_ports(0x0e);
0D4A:  MOVF   FC1,W
0D4C:  ANDLW  C0
0D4E:  IORLW  0E
0D50:  MOVWF  FC1
....................       setup_adc(adc_clock_internal);
0D52:  MOVF   FC0,W
0D54:  ANDLW  C0
0D56:  IORLW  07
0D58:  MOVWF  FC0
0D5A:  BSF    FC0.7
0D5C:  BSF    FC2.0
....................             /**
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(5,1);
....................       printf(lcd_putc," UNEXPO");
....................       lcd_gotoxy(2,2);
....................       printf(lcd_putc," BARQUISIMETO");
....................       delay_ms(3000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Daniela Canas");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Gabriel Gimenez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Guedez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Zambrano");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Tutor]");
....................       delay_ms(1000);
....................       **/
....................       
.................... MENUPRINCIPAL:
....................       while(true){
....................           printf(lcd_putc,"\f");
0D5E:  MOVLW  0C
0D60:  MOVWF  4C
0D62:  MOVLB  0
0D64:  RCALL  07C0
....................           lcd_gotoxy(0,1);
0D66:  CLRF   4D
0D68:  MOVLW  01
0D6A:  MOVWF  4E
0D6C:  RCALL  075E
....................           printf(lcd_putc," MENU PRINCIPAL");
0D6E:  MOVLW  F4
0D70:  MOVWF  FF6
0D72:  MOVLW  00
0D74:  MOVWF  FF7
0D76:  RCALL  0802
....................           lcd_gotoxy(0,2);
0D78:  CLRF   4D
0D7A:  MOVLW  02
0D7C:  MOVWF  4E
0D7E:  RCALL  075E
....................           printf(lcd_putc," 1>AD620 3>NEXT");
0D80:  MOVLW  04
0D82:  MOVWF  FF6
0D84:  MOVLW  01
0D86:  MOVWF  FF7
0D88:  RCALL  0802
....................           delay_ms(1000);
0D8A:  MOVLW  04
0D8C:  MOVWF  3F
0D8E:  MOVLW  FA
0D90:  MOVWF  40
0D92:  RCALL  0822
0D94:  DECFSZ 3F,F
0D96:  BRA    0D8E
....................           while(1){
....................              if(Boton()==1){
0D98:  RCALL  084A
0D9A:  DECFSZ 01,W
0D9C:  BRA    0ECA
....................                while(1){
....................                   set_adc_channel(0);
0D9E:  MOVLW  00
0DA0:  MOVWF  01
0DA2:  MOVF   FC2,W
0DA4:  ANDLW  C3
0DA6:  IORWF  01,W
0DA8:  MOVWF  FC2
....................                   delay_us(20);
0DAA:  MOVLW  06
0DAC:  MOVWF  00
0DAE:  DECFSZ 00,F
0DB0:  BRA    0DAE
0DB2:  NOP   
....................                   float valor_adc = read_adc();
....................                   float lectura= valor_adc*0.004886;
....................                   float Lecturaad620=lectura;
0DB4:  BSF    FC2.1
0DB6:  BTFSC  FC2.1
0DB8:  BRA    0DB6
0DBA:  MOVFF  FC4,02
0DBE:  MOVFF  FC3,01
0DC2:  MOVFF  FC4,03
0DC6:  MOVFF  FC3,3F
0DCA:  MOVFF  FC4,40
0DCE:  BRA    0880
0DD0:  MOVFF  03,36
0DD4:  MOVFF  02,35
0DD8:  MOVFF  01,34
0DDC:  MOVFF  00,33
0DE0:  MOVFF  36,4F
0DE4:  MOVFF  35,4E
0DE8:  MOVFF  34,4D
0DEC:  MOVFF  33,4C
0DF0:  MOVLW  BD
0DF2:  MOVWF  53
0DF4:  MOVLW  1A
0DF6:  MOVWF  52
0DF8:  MOVLW  20
0DFA:  MOVWF  51
0DFC:  MOVLW  77
0DFE:  MOVWF  50
0E00:  RCALL  08B8
0E02:  MOVFF  03,3A
0E06:  MOVFF  02,39
0E0A:  MOVFF  01,38
0E0E:  MOVFF  00,37
0E12:  MOVFF  3A,3E
0E16:  MOVFF  39,3D
0E1A:  MOVFF  38,3C
0E1E:  MOVFF  37,3B
....................                   printf(lcd_putc,"\f"); //Limpiar la pantalla
0E22:  MOVLW  0C
0E24:  MOVWF  4C
0E26:  RCALL  07C0
....................                   lcd_gotoxy(0,1);
0E28:  CLRF   4D
0E2A:  MOVLW  01
0E2C:  MOVWF  4E
0E2E:  RCALL  075E
....................                   printf(lcd_putc," AD620 Testing..."); //  escribir eso
0E30:  MOVLW  14
0E32:  MOVWF  FF6
0E34:  MOVLW  01
0E36:  MOVWF  FF7
0E38:  RCALL  0802
....................                   lcd_gotoxy(0,2);
0E3A:  CLRF   4D
0E3C:  MOVLW  02
0E3E:  MOVWF  4E
0E40:  RCALL  075E
....................                   printf(lcd_putc," V:%0.2f. 2>Ret",Lecturaad620);
0E42:  MOVLW  26
0E44:  MOVWF  FF6
0E46:  MOVLW  01
0E48:  MOVWF  FF7
0E4A:  MOVLW  03
0E4C:  MOVWF  3F
0E4E:  RCALL  09AA
0E50:  MOVLW  C9
0E52:  MOVWF  FE9
0E54:  MOVFF  3E,42
0E58:  MOVFF  3D,41
0E5C:  MOVFF  3C,40
0E60:  MOVFF  3B,3F
0E64:  MOVLW  02
0E66:  MOVWF  43
0E68:  BRA    0A96
0E6A:  MOVLW  2E
0E6C:  MOVWF  FF6
0E6E:  MOVLW  01
0E70:  MOVWF  FF7
0E72:  MOVLW  07
0E74:  MOVWF  3F
0E76:  RCALL  09AA
....................                   delay_ms(500);
0E78:  MOVLW  02
0E7A:  MOVWF  3F
0E7C:  MOVLW  FA
0E7E:  MOVWF  40
0E80:  RCALL  0822
0E82:  DECFSZ 3F,F
0E84:  BRA    0E7C
....................                   if(Boton()==2){
0E86:  RCALL  084A
0E88:  MOVF   01,W
0E8A:  SUBLW  02
0E8C:  BNZ   0EC8
....................                      printf(lcd_putc,"\f");
0E8E:  MOVLW  0C
0E90:  MOVWF  4C
0E92:  RCALL  07C0
....................                      lcd_gotoxy(0,1);
0E94:  CLRF   4D
0E96:  MOVLW  01
0E98:  MOVWF  4E
0E9A:  RCALL  075E
....................                      printf(lcd_putc," MENU PRINCIPAL");
0E9C:  MOVLW  36
0E9E:  MOVWF  FF6
0EA0:  MOVLW  01
0EA2:  MOVWF  FF7
0EA4:  RCALL  0802
....................                      lcd_gotoxy(0,2);
0EA6:  CLRF   4D
0EA8:  MOVLW  02
0EAA:  MOVWF  4E
0EAC:  RCALL  075E
....................                      printf(lcd_putc," 1>AD620 3>NEXT");
0EAE:  MOVLW  46
0EB0:  MOVWF  FF6
0EB2:  MOVLW  01
0EB4:  MOVWF  FF7
0EB6:  RCALL  0802
....................                      delay_ms(1000);
0EB8:  MOVLW  04
0EBA:  MOVWF  3F
0EBC:  MOVLW  FA
0EBE:  MOVWF  40
0EC0:  RCALL  0822
0EC2:  DECFSZ 3F,F
0EC4:  BRA    0EBC
....................                      break;
0EC6:  BRA    0ECA
....................                   }
0EC8:  BRA    0D9E
....................                 }     
....................              }
....................              if(Boton()==3){
0ECA:  RCALL  084A
0ECC:  MOVF   01,W
0ECE:  SUBLW  03
0ED0:  BTFSS  FD8.2
0ED2:  GOTO   18D6
....................                printf(lcd_putc,"\f");
0ED6:  MOVLW  0C
0ED8:  MOVWF  4C
0EDA:  RCALL  07C0
....................                lcd_gotoxy(0,1);
0EDC:  CLRF   4D
0EDE:  MOVLW  01
0EE0:  MOVWF  4E
0EE2:  RCALL  075E
....................                printf(lcd_putc," 1>555 2>LM224");
0EE4:  MOVLW  56
0EE6:  MOVWF  FF6
0EE8:  MOVLW  01
0EEA:  MOVWF  FF7
0EEC:  RCALL  0802
....................                lcd_gotoxy(0,2);
0EEE:  CLRF   4D
0EF0:  MOVLW  02
0EF2:  MOVWF  4E
0EF4:  RCALL  075E
....................                printf(lcd_putc," 4>741 3>Pag.Sig.");
0EF6:  MOVLW  66
0EF8:  MOVWF  FF6
0EFA:  MOVLW  01
0EFC:  MOVWF  FF7
0EFE:  RCALL  0802
....................                delay_ms(1000);
0F00:  MOVLW  04
0F02:  MOVWF  3F
0F04:  MOVLW  FA
0F06:  MOVWF  40
0F08:  RCALL  0822
0F0A:  DECFSZ 3F,F
0F0C:  BRA    0F04
....................                while(1){
....................                   if(Boton()==1){
0F0E:  RCALL  084A
0F10:  DECFSZ 01,W
0F12:  BRA    1106
....................                         bandera_prueba_555 = 1;
0F14:  BSF    2B.0
....................                         SET_TIMER0(valor_recarga);
0F16:  MOVFF  24,FD7
0F1A:  MOVFF  23,FD6
0F1E:  NOP   
....................                         value=get_timer0();
0F20:  MOVF   FD6,W
0F22:  MOVWF  2C
0F24:  MOVFF  FD7,2D
0F28:  CLRF   2E
0F2A:  CLRF   2F
....................                         ENABLE_INTERRUPTS(INT_RTCC);
0F2C:  BSF    FF2.5
....................                         ENABLE_INTERRUPTS(INT_EXT2);// Habilita las interrupciones externas
0F2E:  BSF    FF0.4
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
0F30:  MOVLW  0C
0F32:  MOVWF  4C
0F34:  RCALL  07C0
....................                         lcd_gotoxy(0,1);
0F36:  CLRF   4D
0F38:  MOVLW  01
0F3A:  MOVWF  4E
0F3C:  RCALL  075E
....................                         printf(lcd_putc," 555 Testing..."); //  escribir eso
0F3E:  MOVLW  78
0F40:  MOVWF  FF6
0F42:  MOVLW  01
0F44:  MOVWF  FF7
0F46:  RCALL  0802
....................                         lcd_gotoxy(0,2);
0F48:  CLRF   4D
0F4A:  MOVLW  02
0F4C:  MOVWF  4E
0F4E:  RCALL  075E
....................                         printf(lcd_putc," 2>Volver");
0F50:  MOVLW  88
0F52:  MOVWF  FF6
0F54:  MOVLW  01
0F56:  MOVWF  FF7
0F58:  RCALL  0802
....................                             
....................                         while(bandera_prueba_555 == 1) {
0F5A:  BTFSS  2B.0
0F5C:  BRA    0F98
....................                            if (Boton() == 2) {                        
0F5E:  RCALL  084A
0F60:  MOVF   01,W
0F62:  SUBLW  02
0F64:  BNZ   0F96
....................                               printf(lcd_putc,"\f");
0F66:  MOVLW  0C
0F68:  MOVWF  4C
0F6A:  RCALL  07C0
....................                               lcd_gotoxy(0,1);
0F6C:  CLRF   4D
0F6E:  MOVLW  01
0F70:  MOVWF  4E
0F72:  CALL   075E
....................                               printf(lcd_putc," 1>555 2>LM224");
0F76:  MOVLW  92
0F78:  MOVWF  FF6
0F7A:  MOVLW  01
0F7C:  MOVWF  FF7
0F7E:  RCALL  0802
....................                               lcd_gotoxy(0,2);
0F80:  CLRF   4D
0F82:  MOVLW  02
0F84:  MOVWF  4E
0F86:  CALL   075E
....................                               printf(lcd_putc," 4>741 3>Pag.Sig.");
0F8A:  MOVLW  A2
0F8C:  MOVWF  FF6
0F8E:  MOVLW  01
0F90:  MOVWF  FF7
0F92:  RCALL  0802
....................                               break;
0F94:  BRA    0F98
....................                            }
0F96:  BRA    0F5A
....................                         }
....................                         
....................                         if (bandera_prueba_555 == 0) {
0F98:  BTFSC  2B.0
0F9A:  BRA    10A0
....................                            if (bandera_estado_555 == 0) {
0F9C:  BTFSC  2B.1
0F9E:  BRA    101A
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
0FA0:  MOVLW  0C
0FA2:  MOVWF  4C
0FA4:  RCALL  07C0
....................                               lcd_gotoxy(0,1);
0FA6:  CLRF   4D
0FA8:  MOVLW  01
0FAA:  MOVWF  4E
0FAC:  CALL   075E
....................                               printf(lcd_putc,"Malo %i", pulsos_555); //  escribir eso
0FB0:  MOVLW  B4
0FB2:  MOVWF  FF6
0FB4:  MOVLW  01
0FB6:  MOVWF  FF7
0FB8:  MOVLW  05
0FBA:  MOVWF  3F
0FBC:  RCALL  09AA
0FBE:  MOVFF  2A,3F
0FC2:  MOVLW  18
0FC4:  MOVWF  40
0FC6:  RCALL  0C38
....................                               lcd_gotoxy(0,2);
0FC8:  CLRF   4D
0FCA:  MOVLW  02
0FCC:  MOVWF  4E
0FCE:  CALL   075E
....................                               printf(lcd_putc," 2>Volver");
0FD2:  MOVLW  BC
0FD4:  MOVWF  FF6
0FD6:  MOVLW  01
0FD8:  MOVWF  FF7
0FDA:  RCALL  0802
....................                               while(1) {
....................                                  if(Boton() == 2) {
0FDC:  RCALL  084A
0FDE:  MOVF   01,W
0FE0:  SUBLW  02
0FE2:  BNZ   1018
....................                                     printf(lcd_putc,"\f");
0FE4:  MOVLW  0C
0FE6:  MOVWF  4C
0FE8:  CALL   07C0
....................                                     lcd_gotoxy(0,1);
0FEC:  CLRF   4D
0FEE:  MOVLW  01
0FF0:  MOVWF  4E
0FF2:  CALL   075E
....................                                     printf(lcd_putc," 1>555 2>LM224");
0FF6:  MOVLW  C6
0FF8:  MOVWF  FF6
0FFA:  MOVLW  01
0FFC:  MOVWF  FF7
0FFE:  RCALL  0802
....................                                     lcd_gotoxy(0,2);
1000:  CLRF   4D
1002:  MOVLW  02
1004:  MOVWF  4E
1006:  CALL   075E
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
100A:  MOVLW  D6
100C:  MOVWF  FF6
100E:  MOVLW  01
1010:  MOVWF  FF7
1012:  CALL   0802
....................                                     break;
1016:  BRA    101A
....................                                  }
1018:  BRA    0FDC
....................                               }
....................                            }
....................                            
....................                            if (bandera_estado_555 == 1) {
101A:  BTFSS  2B.1
101C:  BRA    10A0
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
101E:  MOVLW  0C
1020:  MOVWF  4C
1022:  CALL   07C0
....................                               lcd_gotoxy(0,1);
1026:  CLRF   4D
1028:  MOVLW  01
102A:  MOVWF  4E
102C:  CALL   075E
....................                               printf(lcd_putc,"Bueno %i", pulsos_555); //  escribir eso
1030:  MOVLW  E8
1032:  MOVWF  FF6
1034:  MOVLW  01
1036:  MOVWF  FF7
1038:  MOVLW  06
103A:  MOVWF  3F
103C:  RCALL  09AA
103E:  MOVFF  2A,3F
1042:  MOVLW  18
1044:  MOVWF  40
1046:  RCALL  0C38
....................                               lcd_gotoxy(0,2);
1048:  CLRF   4D
104A:  MOVLW  02
104C:  MOVWF  4E
104E:  CALL   075E
....................                               printf(lcd_putc," 2>Volver");
1052:  MOVLW  F2
1054:  MOVWF  FF6
1056:  MOVLW  01
1058:  MOVWF  FF7
105A:  CALL   0802
....................                               while(1) {
....................                                  if(Boton() == 2) {
105E:  CALL   084A
1062:  MOVF   01,W
1064:  SUBLW  02
1066:  BNZ   109E
....................                                     printf(lcd_putc,"\f");
1068:  MOVLW  0C
106A:  MOVWF  4C
106C:  CALL   07C0
....................                                     lcd_gotoxy(0,1);
1070:  CLRF   4D
1072:  MOVLW  01
1074:  MOVWF  4E
1076:  CALL   075E
....................                                     printf(lcd_putc," 1>555 2>LM224");
107A:  MOVLW  FC
107C:  MOVWF  FF6
107E:  MOVLW  01
1080:  MOVWF  FF7
1082:  CALL   0802
....................                                     lcd_gotoxy(0,2);
1086:  CLRF   4D
1088:  MOVLW  02
108A:  MOVWF  4E
108C:  CALL   075E
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
1090:  MOVLW  0C
1092:  MOVWF  FF6
1094:  MOVLW  02
1096:  MOVWF  FF7
1098:  CALL   0802
....................                                     break;
109C:  BRA    10A0
....................                                  }
109E:  BRA    105E
....................                               }
....................                            }
....................                         }
....................                         bandera_prueba_555 = 0;
10A0:  BCF    2B.0
....................                         pulsos_555 = 0;
10A2:  CLRF   2A
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
10A4:  MOVLW  0C
10A6:  MOVWF  4C
10A8:  CALL   07C0
....................                         lcd_gotoxy(0,2);
10AC:  CLRF   4D
10AE:  MOVLW  02
10B0:  MOVWF  4E
10B2:  CALL   075E
....................                         printf(lcd_putc," Regresando...");
10B6:  MOVLW  1E
10B8:  MOVWF  FF6
10BA:  MOVLW  02
10BC:  MOVWF  FF7
10BE:  CALL   0802
....................                         printf(lcd_putc,"\f");
10C2:  MOVLW  0C
10C4:  MOVWF  4C
10C6:  CALL   07C0
....................                         lcd_gotoxy(0,1);
10CA:  CLRF   4D
10CC:  MOVLW  01
10CE:  MOVWF  4E
10D0:  CALL   075E
....................                         printf(lcd_putc," 1>555 2>LM224");
10D4:  MOVLW  2E
10D6:  MOVWF  FF6
10D8:  MOVLW  02
10DA:  MOVWF  FF7
10DC:  CALL   0802
....................                         lcd_gotoxy(0,2);
10E0:  CLRF   4D
10E2:  MOVLW  02
10E4:  MOVWF  4E
10E6:  CALL   075E
....................                         printf(lcd_putc," 4>741 3>Pag.Sig.");
10EA:  MOVLW  3E
10EC:  MOVWF  FF6
10EE:  MOVLW  02
10F0:  MOVWF  FF7
10F2:  CALL   0802
....................                         delay_ms(1000);
10F6:  MOVLW  04
10F8:  MOVWF  3F
10FA:  MOVLW  FA
10FC:  MOVWF  40
10FE:  CALL   0822
1102:  DECFSZ 3F,F
1104:  BRA    10FA
....................                      }
....................                 
....................                   if(Boton()==2){
1106:  CALL   084A
110A:  MOVF   01,W
110C:  SUBLW  02
110E:  BTFSS  FD8.2
1110:  BRA    1328
....................                         while(1){
....................                             output_high(PIN_B7); // Colocar en alto pin B7 
1112:  BCF    F93.7
1114:  BSF    F8A.7
....................                             printf(lcd_putc,"\f"); //Limpiar la pantalla
1116:  MOVLW  0C
1118:  MOVWF  4C
111A:  CALL   07C0
....................                             lcd_gotoxy(0,1);
111E:  CLRF   4D
1120:  MOVLW  01
1122:  MOVWF  4E
1124:  CALL   075E
....................                             printf(lcd_putc," LM224 Testing..."); //  escribir eso
1128:  MOVLW  50
112A:  MOVWF  FF6
112C:  MOVLW  02
112E:  MOVWF  FF7
1130:  CALL   0802
....................                             lcd_gotoxy(0,2);
1134:  CLRF   4D
1136:  MOVLW  02
1138:  MOVWF  4E
113A:  CALL   075E
....................                             printf(lcd_putc," 2>Volver");
113E:  MOVLW  62
1140:  MOVWF  FF6
1142:  MOVLW  02
1144:  MOVWF  FF7
1146:  CALL   0802
....................                             delay_ms(1000);
114A:  MOVLW  04
114C:  MOVWF  3F
114E:  MOVLW  FA
1150:  MOVWF  40
1152:  CALL   0822
1156:  DECFSZ 3F,F
1158:  BRA    114E
....................                             if(input(PIN_C0)==1){
115A:  BSF    F94.0
115C:  BTFSS  F82.0
115E:  BRA    11A8
....................                                  printf(lcd_putc,"\f");
1160:  MOVLW  0C
1162:  MOVWF  4C
1164:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
1168:  CLRF   4D
116A:  MOVLW  01
116C:  MOVWF  4E
116E:  CALL   075E
....................                                  printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
1172:  MOVLW  6C
1174:  MOVWF  FF6
1176:  MOVLW  02
1178:  MOVWF  FF7
117A:  CALL   0802
....................                                  lcd_gotoxy(0,2);
117E:  CLRF   4D
1180:  MOVLW  02
1182:  MOVWF  4E
1184:  CALL   075E
....................                                  printf(lcd_putc," LM224 Testing...");
1188:  MOVLW  7C
118A:  MOVWF  FF6
118C:  MOVLW  02
118E:  MOVWF  FF7
1190:  CALL   0802
....................                                  delay_ms(500);
1194:  MOVLW  02
1196:  MOVWF  3F
1198:  MOVLW  FA
119A:  MOVWF  40
119C:  CALL   0822
11A0:  DECFSZ 3F,F
11A2:  BRA    1198
....................                                  opambuenos = opambuenos + 1;
11A4:  MOVLW  01
11A6:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C1)==1){
11A8:  BSF    F94.1
11AA:  BTFSS  F82.1
11AC:  BRA    11F6
....................                                  printf(lcd_putc,"\f");
11AE:  MOVLW  0C
11B0:  MOVWF  4C
11B2:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
11B6:  CLRF   4D
11B8:  MOVLW  01
11BA:  MOVWF  4E
11BC:  CALL   075E
....................                                  printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
11C0:  MOVLW  8E
11C2:  MOVWF  FF6
11C4:  MOVLW  02
11C6:  MOVWF  FF7
11C8:  CALL   0802
....................                                  lcd_gotoxy(0,2);
11CC:  CLRF   4D
11CE:  MOVLW  02
11D0:  MOVWF  4E
11D2:  CALL   075E
....................                                  printf(lcd_putc," LM224 Testing...");
11D6:  MOVLW  9E
11D8:  MOVWF  FF6
11DA:  MOVLW  02
11DC:  MOVWF  FF7
11DE:  CALL   0802
....................                                  delay_ms(500);
11E2:  MOVLW  02
11E4:  MOVWF  3F
11E6:  MOVLW  FA
11E8:  MOVWF  40
11EA:  CALL   0822
11EE:  DECFSZ 3F,F
11F0:  BRA    11E6
....................                                  opambuenos = opambuenos + 1;
11F2:  MOVLW  01
11F4:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C2)==1){
11F6:  BSF    F94.2
11F8:  BTFSS  F82.2
11FA:  BRA    1244
....................                                  printf(lcd_putc,"\f");
11FC:  MOVLW  0C
11FE:  MOVWF  4C
1200:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
1204:  CLRF   4D
1206:  MOVLW  01
1208:  MOVWF  4E
120A:  CALL   075E
....................                                  printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
120E:  MOVLW  B0
1210:  MOVWF  FF6
1212:  MOVLW  02
1214:  MOVWF  FF7
1216:  CALL   0802
....................                                  lcd_gotoxy(0,2);
121A:  CLRF   4D
121C:  MOVLW  02
121E:  MOVWF  4E
1220:  CALL   075E
....................                                  printf(lcd_putc," LM224 Testing...");
1224:  MOVLW  C0
1226:  MOVWF  FF6
1228:  MOVLW  02
122A:  MOVWF  FF7
122C:  CALL   0802
....................                                  delay_ms(500);
1230:  MOVLW  02
1232:  MOVWF  3F
1234:  MOVLW  FA
1236:  MOVWF  40
1238:  CALL   0822
123C:  DECFSZ 3F,F
123E:  BRA    1234
....................                                  opambuenos = opambuenos + 1;
1240:  MOVLW  01
1242:  ADDWF  30,F
....................                             } 
....................                             if(input(PIN_C5)==1){
1244:  BSF    F94.5
1246:  BTFSS  F82.5
1248:  BRA    1292
....................                                  printf(lcd_putc,"\f");
124A:  MOVLW  0C
124C:  MOVWF  4C
124E:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
1252:  CLRF   4D
1254:  MOVLW  01
1256:  MOVWF  4E
1258:  CALL   075E
....................                                  printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
125C:  MOVLW  D2
125E:  MOVWF  FF6
1260:  MOVLW  02
1262:  MOVWF  FF7
1264:  CALL   0802
....................                                  lcd_gotoxy(0,2);
1268:  CLRF   4D
126A:  MOVLW  02
126C:  MOVWF  4E
126E:  CALL   075E
....................                                  printf(lcd_putc," LM224 Testing...");
1272:  MOVLW  E2
1274:  MOVWF  FF6
1276:  MOVLW  02
1278:  MOVWF  FF7
127A:  CALL   0802
....................                                  delay_ms(500);
127E:  MOVLW  02
1280:  MOVWF  3F
1282:  MOVLW  FA
1284:  MOVWF  40
1286:  CALL   0822
128A:  DECFSZ 3F,F
128C:  BRA    1282
....................                                  opambuenos = opambuenos + 1;
128E:  MOVLW  01
1290:  ADDWF  30,F
....................                             }   
....................                             if(opambuenos>=1){
1292:  MOVF   30,W
1294:  SUBLW  00
1296:  BC    1326
....................                                  output_low(PIN_B7); // Colocar en bajo pin B0
1298:  BCF    F93.7
129A:  BCF    F8A.7
....................                                  printf(lcd_putc,"\f"); //Limpiar la pantalla
129C:  MOVLW  0C
129E:  MOVWF  4C
12A0:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
12A4:  CLRF   4D
12A6:  MOVLW  01
12A8:  MOVWF  4E
12AA:  CALL   075E
....................                                  printf(lcd_putc," Buenos %i", opambuenos);
12AE:  MOVLW  F4
12B0:  MOVWF  FF6
12B2:  MOVLW  02
12B4:  MOVWF  FF7
12B6:  MOVLW  08
12B8:  MOVWF  3F
12BA:  CALL   09AA
12BE:  MOVFF  30,3F
12C2:  MOVLW  18
12C4:  MOVWF  40
12C6:  RCALL  0C38
....................                                  lcd_gotoxy(0,2);
12C8:  CLRF   4D
12CA:  MOVLW  02
12CC:  MOVWF  4E
12CE:  CALL   075E
....................                                  printf(lcd_putc," Regresando...");
12D2:  MOVLW  00
12D4:  MOVWF  FF6
12D6:  MOVLW  03
12D8:  MOVWF  FF7
12DA:  CALL   0802
....................                                  delay_ms(1000);
12DE:  MOVLW  04
12E0:  MOVWF  3F
12E2:  MOVLW  FA
12E4:  MOVWF  40
12E6:  CALL   0822
12EA:  DECFSZ 3F,F
12EC:  BRA    12E2
....................                                  opambuenos = 0;
12EE:  CLRF   30
....................                                  printf(lcd_putc,"\f");
12F0:  MOVLW  0C
12F2:  MOVWF  4C
12F4:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
12F8:  CLRF   4D
12FA:  MOVLW  01
12FC:  MOVWF  4E
12FE:  CALL   075E
....................                                  printf(lcd_putc," 1>555 2>LM224");
1302:  MOVLW  10
1304:  MOVWF  FF6
1306:  MOVLW  03
1308:  MOVWF  FF7
130A:  CALL   0802
....................                                  lcd_gotoxy(0,2);
130E:  CLRF   4D
1310:  MOVLW  02
1312:  MOVWF  4E
1314:  CALL   075E
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
1318:  MOVLW  20
131A:  MOVWF  FF6
131C:  MOVLW  03
131E:  MOVWF  FF7
1320:  CALL   0802
....................                                 break;
1324:  BRA    1328
....................                             }
1326:  BRA    1112
....................                         } 
....................                   }
....................                   if(Boton()==4){
1328:  CALL   084A
132C:  MOVF   01,W
132E:  SUBLW  04
1330:  BTFSS  FD8.2
1332:  BRA    1474
....................                         while(1){
....................                         output_high(PIN_B7); // Colocar en alto pin B0 
1334:  BCF    F93.7
1336:  BSF    F8A.7
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
1338:  MOVLW  0C
133A:  MOVWF  4C
133C:  CALL   07C0
....................                         lcd_gotoxy(0,1);
1340:  CLRF   4D
1342:  MOVLW  01
1344:  MOVWF  4E
1346:  CALL   075E
....................                         printf(lcd_putc," 741 Testing..."); //  escribir eso
134A:  MOVLW  32
134C:  MOVWF  FF6
134E:  MOVLW  03
1350:  MOVWF  FF7
1352:  CALL   0802
....................                         lcd_gotoxy(0,2);
1356:  CLRF   4D
1358:  MOVLW  02
135A:  MOVWF  4E
135C:  CALL   075E
....................                         printf(lcd_putc," 2>Volver");
1360:  MOVLW  42
1362:  MOVWF  FF6
1364:  MOVLW  03
1366:  MOVWF  FF7
1368:  CALL   0802
....................                         delay_ms(1000);
136C:  MOVLW  04
136E:  MOVWF  3F
1370:  MOVLW  FA
1372:  MOVWF  40
1374:  CALL   0822
1378:  DECFSZ 3F,F
137A:  BRA    1370
....................                         if(input(PIN_C1)==1){
137C:  BSF    F94.1
137E:  BTFSS  F82.1
1380:  BRA    1400
....................                                  printf(lcd_putc,"\f");
1382:  MOVLW  0C
1384:  MOVWF  4C
1386:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
138A:  CLRF   4D
138C:  MOVLW  01
138E:  MOVWF  4E
1390:  CALL   075E
....................                                  printf(lcd_putc," AmpOp Bueno!"); //  escribir eso
1394:  MOVLW  4C
1396:  MOVWF  FF6
1398:  MOVLW  03
139A:  MOVWF  FF7
139C:  CALL   0802
....................                                  lcd_gotoxy(0,2);
13A0:  CLRF   4D
13A2:  MOVLW  02
13A4:  MOVWF  4E
13A6:  CALL   075E
....................                                  printf(lcd_putc," Regresando...");
13AA:  MOVLW  5A
13AC:  MOVWF  FF6
13AE:  MOVLW  03
13B0:  MOVWF  FF7
13B2:  CALL   0802
....................                                  delay_ms(500);
13B6:  MOVLW  02
13B8:  MOVWF  3F
13BA:  MOVLW  FA
13BC:  MOVWF  40
13BE:  CALL   0822
13C2:  DECFSZ 3F,F
13C4:  BRA    13BA
....................                                  printf(lcd_putc,"\f");
13C6:  MOVLW  0C
13C8:  MOVWF  4C
13CA:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
13CE:  CLRF   4D
13D0:  MOVLW  01
13D2:  MOVWF  4E
13D4:  CALL   075E
....................                                  printf(lcd_putc," 1>555 2>LM224");
13D8:  MOVLW  6A
13DA:  MOVWF  FF6
13DC:  MOVLW  03
13DE:  MOVWF  FF7
13E0:  CALL   0802
....................                                  lcd_gotoxy(0,2);
13E4:  CLRF   4D
13E6:  MOVLW  02
13E8:  MOVWF  4E
13EA:  CALL   075E
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
13EE:  MOVLW  7A
13F0:  MOVWF  FF6
13F2:  MOVLW  03
13F4:  MOVWF  FF7
13F6:  CALL   0802
....................                                  output_low(PIN_B7);
13FA:  BCF    F93.7
13FC:  BCF    F8A.7
....................                                 break;
13FE:  BRA    1474
....................                         }
....................                         if(Boton()==2){
1400:  CALL   084A
1404:  MOVF   01,W
1406:  SUBLW  02
1408:  BNZ   1472
....................                              output_low(PIN_B7); // Colocar en bajo pin B0
140A:  BCF    F93.7
140C:  BCF    F8A.7
....................                              printf(lcd_putc,"\f"); //Limpiar la pantalla
140E:  MOVLW  0C
1410:  MOVWF  4C
1412:  CALL   07C0
....................                              lcd_gotoxy(0,2);
1416:  CLRF   4D
1418:  MOVLW  02
141A:  MOVWF  4E
141C:  CALL   075E
....................                              printf(lcd_putc," Regresando...");
1420:  MOVLW  8C
1422:  MOVWF  FF6
1424:  MOVLW  03
1426:  MOVWF  FF7
1428:  CALL   0802
....................                              delay_ms(500);
142C:  MOVLW  02
142E:  MOVWF  3F
1430:  MOVLW  FA
1432:  MOVWF  40
1434:  CALL   0822
1438:  DECFSZ 3F,F
143A:  BRA    1430
....................                              printf(lcd_putc,"\f");
143C:  MOVLW  0C
143E:  MOVWF  4C
1440:  CALL   07C0
....................                              lcd_gotoxy(0,1);
1444:  CLRF   4D
1446:  MOVLW  01
1448:  MOVWF  4E
144A:  CALL   075E
....................                              printf(lcd_putc," 1>555 2>LM224");
144E:  MOVLW  9C
1450:  MOVWF  FF6
1452:  MOVLW  03
1454:  MOVWF  FF7
1456:  CALL   0802
....................                              lcd_gotoxy(0,2);
145A:  CLRF   4D
145C:  MOVLW  02
145E:  MOVWF  4E
1460:  CALL   075E
....................                              printf(lcd_putc," 4>741 3>Pag.Sig.");
1464:  MOVLW  AC
1466:  MOVWF  FF6
1468:  MOVLW  03
146A:  MOVWF  FF7
146C:  CALL   0802
....................                              break;
1470:  BRA    1474
....................                          }
1472:  BRA    1334
....................                         }   
....................                     }
....................                   if(Boton()==3){
1474:  CALL   084A
1478:  MOVF   01,W
147A:  SUBLW  03
147C:  BTFSS  FD8.2
147E:  BRA    18D2
....................                         while(1){
....................                         printf(lcd_putc,"\f");
1480:  MOVLW  0C
1482:  MOVWF  4C
1484:  CALL   07C0
....................                         lcd_gotoxy(0,1);
1488:  CLRF   4D
148A:  MOVLW  01
148C:  MOVWF  4E
148E:  CALL   075E
....................                         printf(lcd_putc," 1>LM358 2>LM348");
1492:  MOVLW  BE
1494:  MOVWF  FF6
1496:  MOVLW  03
1498:  MOVWF  FF7
149A:  CALL   0802
....................                         lcd_gotoxy(0,2);
149E:  CLRF   4D
14A0:  MOVLW  02
14A2:  MOVWF  4E
14A4:  CALL   075E
....................                         printf(lcd_putc," 4>LM324 3>Pag.Sig.");
14A8:  MOVLW  D0
14AA:  MOVWF  FF6
14AC:  MOVLW  03
14AE:  MOVWF  FF7
14B0:  CALL   0802
....................                         delay_ms(1000);
14B4:  MOVLW  04
14B6:  MOVWF  3F
14B8:  MOVLW  FA
14BA:  MOVWF  40
14BC:  CALL   0822
14C0:  DECFSZ 3F,F
14C2:  BRA    14B8
....................                         if(Boton()==4){
14C4:  CALL   084A
14C8:  MOVF   01,W
14CA:  SUBLW  04
14CC:  BTFSS  FD8.2
14CE:  BRA    16E8
....................                               while(1){
....................                                   output_high(PIN_B7); // Colocar en alto pin B7 
14D0:  BCF    F93.7
14D2:  BSF    F8A.7
....................                                   printf(lcd_putc,"\f"); //Limpiar la pantalla
14D4:  MOVLW  0C
14D6:  MOVWF  4C
14D8:  CALL   07C0
....................                                   lcd_gotoxy(0,1);
14DC:  CLRF   4D
14DE:  MOVLW  01
14E0:  MOVWF  4E
14E2:  CALL   075E
....................                                   printf(lcd_putc," LM324 Testing..."); //  escribir eso
14E6:  MOVLW  E4
14E8:  MOVWF  FF6
14EA:  MOVLW  03
14EC:  MOVWF  FF7
14EE:  CALL   0802
....................                                   lcd_gotoxy(0,2);
14F2:  CLRF   4D
14F4:  MOVLW  02
14F6:  MOVWF  4E
14F8:  CALL   075E
....................                                   printf(lcd_putc," 2>Volver");
14FC:  MOVLW  F6
14FE:  MOVWF  FF6
1500:  MOVLW  03
1502:  MOVWF  FF7
1504:  CALL   0802
....................                                   delay_ms(1000);
1508:  MOVLW  04
150A:  MOVWF  3F
150C:  MOVLW  FA
150E:  MOVWF  40
1510:  CALL   0822
1514:  DECFSZ 3F,F
1516:  BRA    150C
....................                                   if(input(PIN_C0)==1){
1518:  BSF    F94.0
151A:  BTFSS  F82.0
151C:  BRA    1566
....................                                        printf(lcd_putc,"\f");
151E:  MOVLW  0C
1520:  MOVWF  4C
1522:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
1526:  CLRF   4D
1528:  MOVLW  01
152A:  MOVWF  4E
152C:  CALL   075E
....................                                        printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
1530:  MOVLW  00
1532:  MOVWF  FF6
1534:  MOVLW  04
1536:  MOVWF  FF7
1538:  CALL   0802
....................                                        lcd_gotoxy(0,2);
153C:  CLRF   4D
153E:  MOVLW  02
1540:  MOVWF  4E
1542:  CALL   075E
....................                                        printf(lcd_putc," LM324 Testing...");
1546:  MOVLW  10
1548:  MOVWF  FF6
154A:  MOVLW  04
154C:  MOVWF  FF7
154E:  CALL   0802
....................                                        delay_ms(500);
1552:  MOVLW  02
1554:  MOVWF  3F
1556:  MOVLW  FA
1558:  MOVWF  40
155A:  CALL   0822
155E:  DECFSZ 3F,F
1560:  BRA    1556
....................                                        opambuenos = opambuenos + 1;
1562:  MOVLW  01
1564:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C1)==1){
1566:  BSF    F94.1
1568:  BTFSS  F82.1
156A:  BRA    15B4
....................                                        printf(lcd_putc,"\f");
156C:  MOVLW  0C
156E:  MOVWF  4C
1570:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
1574:  CLRF   4D
1576:  MOVLW  01
1578:  MOVWF  4E
157A:  CALL   075E
....................                                        printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
157E:  MOVLW  22
1580:  MOVWF  FF6
1582:  MOVLW  04
1584:  MOVWF  FF7
1586:  CALL   0802
....................                                        lcd_gotoxy(0,2);
158A:  CLRF   4D
158C:  MOVLW  02
158E:  MOVWF  4E
1590:  CALL   075E
....................                                        printf(lcd_putc," LM324 Testing...");
1594:  MOVLW  32
1596:  MOVWF  FF6
1598:  MOVLW  04
159A:  MOVWF  FF7
159C:  CALL   0802
....................                                        delay_ms(500);
15A0:  MOVLW  02
15A2:  MOVWF  3F
15A4:  MOVLW  FA
15A6:  MOVWF  40
15A8:  CALL   0822
15AC:  DECFSZ 3F,F
15AE:  BRA    15A4
....................                                        opambuenos = opambuenos + 1;
15B0:  MOVLW  01
15B2:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C2)==1){
15B4:  BSF    F94.2
15B6:  BTFSS  F82.2
15B8:  BRA    1602
....................                                        printf(lcd_putc,"\f");
15BA:  MOVLW  0C
15BC:  MOVWF  4C
15BE:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
15C2:  CLRF   4D
15C4:  MOVLW  01
15C6:  MOVWF  4E
15C8:  CALL   075E
....................                                        printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
15CC:  MOVLW  44
15CE:  MOVWF  FF6
15D0:  MOVLW  04
15D2:  MOVWF  FF7
15D4:  CALL   0802
....................                                        lcd_gotoxy(0,2);
15D8:  CLRF   4D
15DA:  MOVLW  02
15DC:  MOVWF  4E
15DE:  CALL   075E
....................                                        printf(lcd_putc," LM324 Testing...");
15E2:  MOVLW  54
15E4:  MOVWF  FF6
15E6:  MOVLW  04
15E8:  MOVWF  FF7
15EA:  CALL   0802
....................                                        delay_ms(500);
15EE:  MOVLW  02
15F0:  MOVWF  3F
15F2:  MOVLW  FA
15F4:  MOVWF  40
15F6:  CALL   0822
15FA:  DECFSZ 3F,F
15FC:  BRA    15F2
....................                                        opambuenos = opambuenos + 1;
15FE:  MOVLW  01
1600:  ADDWF  30,F
....................                                   } 
....................                                   if(input(PIN_C5)==1){
1602:  BSF    F94.5
1604:  BTFSS  F82.5
1606:  BRA    1650
....................                                        printf(lcd_putc,"\f");
1608:  MOVLW  0C
160A:  MOVWF  4C
160C:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
1610:  CLRF   4D
1612:  MOVLW  01
1614:  MOVWF  4E
1616:  CALL   075E
....................                                        printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
161A:  MOVLW  66
161C:  MOVWF  FF6
161E:  MOVLW  04
1620:  MOVWF  FF7
1622:  CALL   0802
....................                                        lcd_gotoxy(0,2);
1626:  CLRF   4D
1628:  MOVLW  02
162A:  MOVWF  4E
162C:  CALL   075E
....................                                        printf(lcd_putc," LM324 Testing...");
1630:  MOVLW  76
1632:  MOVWF  FF6
1634:  MOVLW  04
1636:  MOVWF  FF7
1638:  CALL   0802
....................                                        delay_ms(500);
163C:  MOVLW  02
163E:  MOVWF  3F
1640:  MOVLW  FA
1642:  MOVWF  40
1644:  CALL   0822
1648:  DECFSZ 3F,F
164A:  BRA    1640
....................                                        opambuenos = opambuenos + 1;
164C:  MOVLW  01
164E:  ADDWF  30,F
....................                                   }   
....................                                   if(opambuenos>=1){
1650:  MOVF   30,W
1652:  SUBLW  00
1654:  BC    16E6
....................                                        output_low(PIN_B7); // Colocar en bajo pin B0
1656:  BCF    F93.7
1658:  BCF    F8A.7
....................                                        printf(lcd_putc,"\f"); //Limpiar la pantalla
165A:  MOVLW  0C
165C:  MOVWF  4C
165E:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
1662:  CLRF   4D
1664:  MOVLW  01
1666:  MOVWF  4E
1668:  CALL   075E
....................                                        printf(lcd_putc," Buenos %i", opambuenos);
166C:  MOVLW  88
166E:  MOVWF  FF6
1670:  MOVLW  04
1672:  MOVWF  FF7
1674:  MOVLW  08
1676:  MOVWF  3F
1678:  CALL   09AA
167C:  MOVFF  30,3F
1680:  MOVLW  18
1682:  MOVWF  40
1684:  CALL   0C38
....................                                        lcd_gotoxy(0,2);
1688:  CLRF   4D
168A:  MOVLW  02
168C:  MOVWF  4E
168E:  CALL   075E
....................                                        printf(lcd_putc," Regresando...");
1692:  MOVLW  94
1694:  MOVWF  FF6
1696:  MOVLW  04
1698:  MOVWF  FF7
169A:  CALL   0802
....................                                        delay_ms(1000);
169E:  MOVLW  04
16A0:  MOVWF  3F
16A2:  MOVLW  FA
16A4:  MOVWF  40
16A6:  CALL   0822
16AA:  DECFSZ 3F,F
16AC:  BRA    16A2
....................                                        opambuenos = 0;
16AE:  CLRF   30
....................                                        printf(lcd_putc,"\f");
16B0:  MOVLW  0C
16B2:  MOVWF  4C
16B4:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
16B8:  CLRF   4D
16BA:  MOVLW  01
16BC:  MOVWF  4E
16BE:  CALL   075E
....................                                        printf(lcd_putc," 1>LM358 2>LM348");
16C2:  MOVLW  A4
16C4:  MOVWF  FF6
16C6:  MOVLW  04
16C8:  MOVWF  FF7
16CA:  CALL   0802
....................                                        lcd_gotoxy(0,2);
16CE:  CLRF   4D
16D0:  MOVLW  02
16D2:  MOVWF  4E
16D4:  CALL   075E
....................                                        printf(lcd_putc," 4>LM324 3>Pag.Sig.");
16D8:  MOVLW  B6
16DA:  MOVWF  FF6
16DC:  MOVLW  04
16DE:  MOVWF  FF7
16E0:  CALL   0802
....................                                       break;
16E4:  BRA    16E8
....................                                   }
16E6:  BRA    14D0
....................                               } 
....................                         }
....................                         if(Boton()==3){
16E8:  CALL   084A
16EC:  MOVF   01,W
16EE:  SUBLW  03
16F0:  BTFSS  FD8.2
16F2:  BRA    18D0
....................                            printf(lcd_putc,"\f");
16F4:  MOVLW  0C
16F6:  MOVWF  4C
16F8:  CALL   07C0
....................                            lcd_gotoxy(0,1);
16FC:  CLRF   4D
16FE:  MOVLW  01
1700:  MOVWF  4E
1702:  CALL   075E
....................                            printf(lcd_putc," 1>NPN 2>PNP");
1706:  MOVLW  CA
1708:  MOVWF  FF6
170A:  MOVLW  04
170C:  MOVWF  FF7
170E:  CALL   0802
....................                            lcd_gotoxy(0,2);
1712:  CLRF   4D
1714:  MOVLW  02
1716:  MOVWF  4E
1718:  CALL   075E
....................                            printf(lcd_putc," 4>NADA 3>Regresar");
171C:  MOVLW  D8
171E:  MOVWF  FF6
1720:  MOVLW  04
1722:  MOVWF  FF7
1724:  CALL   0802
....................                            delay_ms(1000);
1728:  MOVLW  04
172A:  MOVWF  3F
172C:  MOVLW  FA
172E:  MOVWF  40
1730:  CALL   0822
1734:  DECFSZ 3F,F
1736:  BRA    172C
....................                            while(1){
....................                               if(Boton()==1) {
1738:  CALL   084A
173C:  DECFSZ 01,W
173E:  BRA    18B0
....................                                  NPN_estado = 1;
1740:  BSF    2B.2
....................                                  printf(lcd_putc,"\f");
1742:  MOVLW  0C
1744:  MOVWF  4C
1746:  CALL   07C0
....................                                  lcd_gotoxy(0,1);
174A:  CLRF   4D
174C:  MOVLW  01
174E:  MOVWF  4E
1750:  CALL   075E
....................                                  printf(lcd_putc,"NPN Testing...");
1754:  MOVLW  EC
1756:  MOVWF  FF6
1758:  MOVLW  04
175A:  MOVWF  FF7
175C:  CALL   0802
....................                                  delay_ms(1000);
1760:  MOVLW  04
1762:  MOVWF  3F
1764:  MOVLW  FA
1766:  MOVWF  40
1768:  CALL   0822
176C:  DECFSZ 3F,F
176E:  BRA    1764
....................                                  if (input(PIN_C4) == 0) {
1770:  BSF    F94.4
1772:  BTFSC  F82.4
1774:  BRA    1778
....................                                     NPN_estado = 0;
1776:  BCF    2B.2
....................                                  }
....................                                  output_high(PIN_D0);
1778:  BCF    F95.0
177A:  BSF    F8C.0
....................                                  delay_ms(500);
177C:  MOVLW  02
177E:  MOVWF  3F
1780:  MOVLW  FA
1782:  MOVWF  40
1784:  CALL   0822
1788:  DECFSZ 3F,F
178A:  BRA    1780
....................                                  if (input(PIN_C4) == 1) {
178C:  BSF    F94.4
178E:  BTFSS  F82.4
1790:  BRA    1794
....................                                     NPN_estado = 0;
1792:  BCF    2B.2
....................                                  }
....................                                  if (NPN_estado == 1) {
1794:  BTFSS  2B.2
1796:  BRA    17EC
....................                                     printf(lcd_putc,"\f");
1798:  MOVLW  0C
179A:  MOVWF  4C
179C:  CALL   07C0
....................                                     lcd_gotoxy(0,1);
17A0:  CLRF   4D
17A2:  MOVLW  01
17A4:  MOVWF  4E
17A6:  CALL   075E
....................                                     printf(lcd_putc,"NPN BUENO");
17AA:  MOVLW  FC
17AC:  MOVWF  FF6
17AE:  MOVLW  04
17B0:  MOVWF  FF7
17B2:  CALL   0802
....................                                     lcd_gotoxy(0,2);
17B6:  CLRF   4D
17B8:  MOVLW  02
17BA:  MOVWF  4E
17BC:  CALL   075E
....................                                     printf(lcd_putc," 2>Volver");
17C0:  MOVLW  06
17C2:  MOVWF  FF6
17C4:  MOVLW  05
17C6:  MOVWF  FF7
17C8:  CALL   0802
....................                                     delay_ms(1000);
17CC:  MOVLW  04
17CE:  MOVWF  3F
17D0:  MOVLW  FA
17D2:  MOVWF  40
17D4:  CALL   0822
17D8:  DECFSZ 3F,F
17DA:  BRA    17D0
....................                                     while(1) {
....................                                        if( Boton() = 2){
17DC:  CALL   084A
17E0:  MOVLW  02
17E2:  MOVWF  01
17E4:  MOVF   01,F
17E6:  BZ    17EA
....................                                           break;
17E8:  BRA    17EC
....................                                        }
17EA:  BRA    17DC
....................                                     }
....................                                  }
....................                                  if (NPN_estado == 0) {
17EC:  BTFSC  2B.2
17EE:  BRA    1834
....................                                     printf(lcd_putc,"\f");
17F0:  MOVLW  0C
17F2:  MOVWF  4C
17F4:  CALL   07C0
....................                                     lcd_gotoxy(0,1);
17F8:  CLRF   4D
17FA:  MOVLW  01
17FC:  MOVWF  4E
17FE:  CALL   075E
....................                                     printf(lcd_putc,"NPN MALO");
1802:  MOVLW  10
1804:  MOVWF  FF6
1806:  MOVLW  05
1808:  MOVWF  FF7
180A:  CALL   0802
....................                                     lcd_gotoxy(0,2);
180E:  CLRF   4D
1810:  MOVLW  02
1812:  MOVWF  4E
1814:  CALL   075E
....................                                     printf(lcd_putc," 2>Volver");
1818:  MOVLW  1A
181A:  MOVWF  FF6
181C:  MOVLW  05
181E:  MOVWF  FF7
1820:  CALL   0802
....................                                     delay_ms(1000);
1824:  MOVLW  04
1826:  MOVWF  3F
1828:  MOVLW  FA
182A:  MOVWF  40
182C:  CALL   0822
1830:  DECFSZ 3F,F
1832:  BRA    1828
....................                                  }
....................                                  while(1) {
....................                                     if(Boton() == 2){
1834:  CALL   084A
1838:  MOVF   01,W
183A:  SUBLW  02
183C:  BNZ   18AE
....................                                        NPN_estado == 1;
....................                                        output_low(PIN_D0);
183E:  BCF    F95.0
1840:  BCF    F8C.0
....................                                        lcd_gotoxy(0,2);
1842:  CLRF   4D
1844:  MOVLW  02
1846:  MOVWF  4E
1848:  CALL   075E
....................                                        printf(lcd_putc," Regresando...");
184C:  MOVLW  24
184E:  MOVWF  FF6
1850:  MOVLW  05
1852:  MOVWF  FF7
1854:  CALL   0802
....................                                        delay_ms(1000);
1858:  MOVLW  04
185A:  MOVWF  3F
185C:  MOVLW  FA
185E:  MOVWF  40
1860:  CALL   0822
1864:  DECFSZ 3F,F
1866:  BRA    185C
....................                                        printf(lcd_putc,"\f");
1868:  MOVLW  0C
186A:  MOVWF  4C
186C:  CALL   07C0
....................                                        lcd_gotoxy(0,1);
1870:  CLRF   4D
1872:  MOVLW  01
1874:  MOVWF  4E
1876:  CALL   075E
....................                                        printf(lcd_putc," 1>NPN 2>PNP");
187A:  MOVLW  34
187C:  MOVWF  FF6
187E:  MOVLW  05
1880:  MOVWF  FF7
1882:  CALL   0802
....................                                        lcd_gotoxy(0,2);
1886:  CLRF   4D
1888:  MOVLW  02
188A:  MOVWF  4E
188C:  CALL   075E
....................                                        printf(lcd_putc," 4>NADA 3>Regresar");
1890:  MOVLW  42
1892:  MOVWF  FF6
1894:  MOVLW  05
1896:  MOVWF  FF7
1898:  CALL   0802
....................                                        delay_ms(1000);
189C:  MOVLW  04
189E:  MOVWF  3F
18A0:  MOVLW  FA
18A2:  MOVWF  40
18A4:  CALL   0822
18A8:  DECFSZ 3F,F
18AA:  BRA    18A0
....................                                        break;
18AC:  BRA    18B0
....................                                     }
18AE:  BRA    1834
....................                                  }
....................                               }
....................                               if(Boton() == 3) {
18B0:  CALL   084A
18B4:  MOVF   01,W
18B6:  SUBLW  03
18B8:  BNZ   18CE
....................                                  delay_ms(500);
18BA:  MOVLW  02
18BC:  MOVWF  3F
18BE:  MOVLW  FA
18C0:  MOVWF  40
18C2:  CALL   0822
18C6:  DECFSZ 3F,F
18C8:  BRA    18BE
....................                                  goto MENUPRINCIPAL;
18CA:  GOTO   0D5E
....................                               }
18CE:  BRA    1738
....................                            }
....................                         }
18D0:  BRA    1480
....................                      }
....................                   }
18D2:  GOTO   0F0E
....................                }
....................             }
18D6:  GOTO   0D98
....................          }
18DA:  MOVLB  0
18DC:  GOTO   0D5E
....................       }
.................... }   
18E0:  SLEEP 

Configuration Fuses:
   Word  1: C93F   PLL12 CPUDIV4 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
