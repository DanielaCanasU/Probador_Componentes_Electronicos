CCS PCH C Compiler, Version 5.076, 56587               16-Dec-24 00:39

               Filename:   C:\Users\Persona\Documents\Universidad\Servicio\Probador_Componentes_Electronicos\Probador184550.lst

               ROM used:   6832 bytes (21%)
                           Largest free fragment is 25932
               RAM used:   64 (3%) at main() level
                           91 (4%) worst case
               Stack used: 7 locations (6 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0D4A
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00DA
0060:  BTFSS  FF0.4
0062:  GOTO   006C
0066:  BTFSC  FF0.1
0068:  GOTO   00CE
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18f4550.h> 
.................... //////////// Standard Header file for the PIC18F4550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F4550 
00BA:  CLRF   FF7
00BC:  ADDLW  CA
00BE:  MOVWF  FF6
00C0:  MOVLW  00
00C2:  ADDWFC FF7,F
00C4:  TBLRD*+
00C6:  MOVF   FF5,W
00C8:  RETURN 0
00CA:  DATA 28,0C
00CC:  DATA 01,06
*
00F4:  DATA 20,4D
00F6:  DATA 45,4E
00F8:  DATA 55,20
00FA:  DATA 50,52
00FC:  DATA 49,4E
00FE:  DATA 43,49
0100:  DATA 50,41
0102:  DATA 4C,00
0104:  DATA 20,31
0106:  DATA 3E,41
0108:  DATA 44,36
010A:  DATA 32,30
010C:  DATA 20,33
010E:  DATA 3E,4E
0110:  DATA 45,58
0112:  DATA 54,00
0114:  DATA 20,41
0116:  DATA 44,36
0118:  DATA 32,30
011A:  DATA 20,54
011C:  DATA 65,73
011E:  DATA 74,69
0120:  DATA 6E,67
0122:  DATA 2E,2E
0124:  DATA 2E,00
0126:  DATA 20,56
0128:  DATA 3A,25
012A:  DATA 30,2E
012C:  DATA 32,66
012E:  DATA 2E,20
0130:  DATA 32,3E
0132:  DATA 52,65
0134:  DATA 74,00
0136:  DATA 20,4D
0138:  DATA 45,4E
013A:  DATA 55,20
013C:  DATA 50,52
013E:  DATA 49,4E
0140:  DATA 43,49
0142:  DATA 50,41
0144:  DATA 4C,00
0146:  DATA 20,31
0148:  DATA 3E,41
014A:  DATA 44,36
014C:  DATA 32,30
014E:  DATA 20,33
0150:  DATA 3E,4E
0152:  DATA 45,58
0154:  DATA 54,00
0156:  DATA 20,31
0158:  DATA 3E,35
015A:  DATA 35,35
015C:  DATA 20,32
015E:  DATA 3E,4C
0160:  DATA 4D,32
0162:  DATA 32,34
0164:  DATA 00,00
0166:  DATA 20,34
0168:  DATA 3E,37
016A:  DATA 34,31
016C:  DATA 20,33
016E:  DATA 3E,50
0170:  DATA 61,67
0172:  DATA 2E,53
0174:  DATA 69,67
0176:  DATA 2E,00
0178:  DATA 20,35
017A:  DATA 35,35
017C:  DATA 20,54
017E:  DATA 65,73
0180:  DATA 74,69
0182:  DATA 6E,67
0184:  DATA 2E,2E
0186:  DATA 2E,00
0188:  DATA 20,32
018A:  DATA 3E,56
018C:  DATA 6F,6C
018E:  DATA 76,65
0190:  DATA 72,00
0192:  DATA 20,31
0194:  DATA 3E,35
0196:  DATA 35,35
0198:  DATA 20,32
019A:  DATA 3E,4C
019C:  DATA 4D,32
019E:  DATA 32,34
01A0:  DATA 00,00
01A2:  DATA 20,34
01A4:  DATA 3E,37
01A6:  DATA 34,31
01A8:  DATA 20,33
01AA:  DATA 3E,50
01AC:  DATA 61,67
01AE:  DATA 2E,53
01B0:  DATA 69,67
01B2:  DATA 2E,00
01B4:  DATA 4D,61
01B6:  DATA 6C,6F
01B8:  DATA 20,25
01BA:  DATA 69,00
01BC:  DATA 20,32
01BE:  DATA 3E,56
01C0:  DATA 6F,6C
01C2:  DATA 76,65
01C4:  DATA 72,00
01C6:  DATA 20,31
01C8:  DATA 3E,35
01CA:  DATA 35,35
01CC:  DATA 20,32
01CE:  DATA 3E,4C
01D0:  DATA 4D,32
01D2:  DATA 32,34
01D4:  DATA 00,00
01D6:  DATA 20,34
01D8:  DATA 3E,37
01DA:  DATA 34,31
01DC:  DATA 20,33
01DE:  DATA 3E,50
01E0:  DATA 61,67
01E2:  DATA 2E,53
01E4:  DATA 69,67
01E6:  DATA 2E,00
01E8:  DATA 42,75
01EA:  DATA 65,6E
01EC:  DATA 6F,20
01EE:  DATA 25,69
01F0:  DATA 00,00
01F2:  DATA 20,32
01F4:  DATA 3E,56
01F6:  DATA 6F,6C
01F8:  DATA 76,65
01FA:  DATA 72,00
01FC:  DATA 20,31
01FE:  DATA 3E,35
0200:  DATA 35,35
0202:  DATA 20,32
0204:  DATA 3E,4C
0206:  DATA 4D,32
0208:  DATA 32,34
020A:  DATA 00,00
020C:  DATA 20,34
020E:  DATA 3E,37
0210:  DATA 34,31
0212:  DATA 20,33
0214:  DATA 3E,50
0216:  DATA 61,67
0218:  DATA 2E,53
021A:  DATA 69,67
021C:  DATA 2E,00
021E:  DATA 20,52
0220:  DATA 65,67
0222:  DATA 72,65
0224:  DATA 73,61
0226:  DATA 6E,64
0228:  DATA 6F,2E
022A:  DATA 2E,2E
022C:  DATA 00,00
022E:  DATA 20,31
0230:  DATA 3E,35
0232:  DATA 35,35
0234:  DATA 20,32
0236:  DATA 3E,4C
0238:  DATA 4D,32
023A:  DATA 32,34
023C:  DATA 00,00
023E:  DATA 20,34
0240:  DATA 3E,37
0242:  DATA 34,31
0244:  DATA 20,33
0246:  DATA 3E,50
0248:  DATA 61,67
024A:  DATA 2E,53
024C:  DATA 69,67
024E:  DATA 2E,00
0250:  DATA 20,4C
0252:  DATA 4D,32
0254:  DATA 32,34
0256:  DATA 20,54
0258:  DATA 65,73
025A:  DATA 74,69
025C:  DATA 6E,67
025E:  DATA 2E,2E
0260:  DATA 2E,00
0262:  DATA 20,32
0264:  DATA 3E,56
0266:  DATA 6F,6C
0268:  DATA 76,65
026A:  DATA 72,00
026C:  DATA 20,41
026E:  DATA 6D,70
0270:  DATA 4F,70
0272:  DATA 2D,31
0274:  DATA 20,42
0276:  DATA 75,65
0278:  DATA 6E,6F
027A:  DATA 21,00
027C:  DATA 20,4C
027E:  DATA 4D,32
0280:  DATA 32,34
0282:  DATA 20,54
0284:  DATA 65,73
0286:  DATA 74,69
0288:  DATA 6E,67
028A:  DATA 2E,2E
028C:  DATA 2E,00
028E:  DATA 20,41
0290:  DATA 6D,70
0292:  DATA 4F,70
0294:  DATA 2D,32
0296:  DATA 20,42
0298:  DATA 75,65
029A:  DATA 6E,6F
029C:  DATA 21,00
029E:  DATA 20,4C
02A0:  DATA 4D,32
02A2:  DATA 32,34
02A4:  DATA 20,54
02A6:  DATA 65,73
02A8:  DATA 74,69
02AA:  DATA 6E,67
02AC:  DATA 2E,2E
02AE:  DATA 2E,00
02B0:  DATA 20,41
02B2:  DATA 6D,70
02B4:  DATA 4F,70
02B6:  DATA 2D,33
02B8:  DATA 20,42
02BA:  DATA 75,65
02BC:  DATA 6E,6F
02BE:  DATA 21,00
02C0:  DATA 20,4C
02C2:  DATA 4D,32
02C4:  DATA 32,34
02C6:  DATA 20,54
02C8:  DATA 65,73
02CA:  DATA 74,69
02CC:  DATA 6E,67
02CE:  DATA 2E,2E
02D0:  DATA 2E,00
02D2:  DATA 20,41
02D4:  DATA 6D,70
02D6:  DATA 4F,70
02D8:  DATA 2D,34
02DA:  DATA 20,42
02DC:  DATA 75,65
02DE:  DATA 6E,6F
02E0:  DATA 21,00
02E2:  DATA 20,4C
02E4:  DATA 4D,32
02E6:  DATA 32,34
02E8:  DATA 20,54
02EA:  DATA 65,73
02EC:  DATA 74,69
02EE:  DATA 6E,67
02F0:  DATA 2E,2E
02F2:  DATA 2E,00
02F4:  DATA 20,42
02F6:  DATA 75,65
02F8:  DATA 6E,6F
02FA:  DATA 73,20
02FC:  DATA 25,69
02FE:  DATA 00,00
0300:  DATA 20,52
0302:  DATA 65,67
0304:  DATA 72,65
0306:  DATA 73,61
0308:  DATA 6E,64
030A:  DATA 6F,2E
030C:  DATA 2E,00
030E:  DATA 20,31
0310:  DATA 3E,35
0312:  DATA 35,35
0314:  DATA 20,32
0316:  DATA 3E,4C
0318:  DATA 4D,32
031A:  DATA 32,34
031C:  DATA 00,00
031E:  DATA 20,34
0320:  DATA 3E,37
0322:  DATA 34,31
0324:  DATA 20,33
0326:  DATA 3E,50
0328:  DATA 61,67
032A:  DATA 2E,53
032C:  DATA 69,67
032E:  DATA 2E,00
0330:  DATA 20,37
0332:  DATA 34,31
0334:  DATA 20,54
0336:  DATA 65,73
0338:  DATA 74,69
033A:  DATA 6E,67
033C:  DATA 2E,2E
033E:  DATA 2E,00
0340:  DATA 20,32
0342:  DATA 3E,56
0344:  DATA 6F,6C
0346:  DATA 76,65
0348:  DATA 72,00
034A:  DATA 20,41
034C:  DATA 6D,70
034E:  DATA 4F,70
0350:  DATA 20,42
0352:  DATA 75,65
0354:  DATA 6E,6F
0356:  DATA 21,00
0358:  DATA 20,52
035A:  DATA 65,67
035C:  DATA 72,65
035E:  DATA 73,61
0360:  DATA 6E,64
0362:  DATA 6F,2E
0364:  DATA 2E,2E
0366:  DATA 00,00
0368:  DATA 20,31
036A:  DATA 3E,35
036C:  DATA 35,35
036E:  DATA 20,32
0370:  DATA 3E,4C
0372:  DATA 4D,32
0374:  DATA 32,34
0376:  DATA 00,00
0378:  DATA 20,34
037A:  DATA 3E,37
037C:  DATA 34,31
037E:  DATA 20,33
0380:  DATA 3E,50
0382:  DATA 61,67
0384:  DATA 2E,53
0386:  DATA 69,67
0388:  DATA 2E,00
038A:  DATA 20,52
038C:  DATA 65,67
038E:  DATA 72,65
0390:  DATA 73,61
0392:  DATA 6E,64
0394:  DATA 6F,2E
0396:  DATA 2E,2E
0398:  DATA 00,00
039A:  DATA 20,31
039C:  DATA 3E,35
039E:  DATA 35,35
03A0:  DATA 20,32
03A2:  DATA 3E,4C
03A4:  DATA 4D,32
03A6:  DATA 32,34
03A8:  DATA 00,00
03AA:  DATA 20,34
03AC:  DATA 3E,37
03AE:  DATA 34,31
03B0:  DATA 20,33
03B2:  DATA 3E,50
03B4:  DATA 61,67
03B6:  DATA 2E,53
03B8:  DATA 69,67
03BA:  DATA 2E,00
03BC:  DATA 20,31
03BE:  DATA 3E,4C
03C0:  DATA 4D,33
03C2:  DATA 35,38
03C4:  DATA 20,32
03C6:  DATA 3E,4C
03C8:  DATA 4D,33
03CA:  DATA 34,38
03CC:  DATA 00,00
03CE:  DATA 20,34
03D0:  DATA 3E,4C
03D2:  DATA 4D,33
03D4:  DATA 32,34
03D6:  DATA 20,33
03D8:  DATA 3E,50
03DA:  DATA 61,67
03DC:  DATA 2E,53
03DE:  DATA 69,67
03E0:  DATA 2E,00
03E2:  DATA 20,4C
03E4:  DATA 4D,33
03E6:  DATA 32,34
03E8:  DATA 20,54
03EA:  DATA 65,73
03EC:  DATA 74,69
03EE:  DATA 6E,67
03F0:  DATA 2E,2E
03F2:  DATA 2E,00
03F4:  DATA 20,32
03F6:  DATA 3E,56
03F8:  DATA 6F,6C
03FA:  DATA 76,65
03FC:  DATA 72,00
03FE:  DATA 20,41
0400:  DATA 6D,70
0402:  DATA 4F,70
0404:  DATA 2D,31
0406:  DATA 20,42
0408:  DATA 75,65
040A:  DATA 6E,6F
040C:  DATA 21,00
040E:  DATA 20,4C
0410:  DATA 4D,33
0412:  DATA 32,34
0414:  DATA 20,54
0416:  DATA 65,73
0418:  DATA 74,69
041A:  DATA 6E,67
041C:  DATA 2E,2E
041E:  DATA 2E,00
0420:  DATA 20,41
0422:  DATA 6D,70
0424:  DATA 4F,70
0426:  DATA 2D,32
0428:  DATA 20,42
042A:  DATA 75,65
042C:  DATA 6E,6F
042E:  DATA 21,00
0430:  DATA 20,4C
0432:  DATA 4D,33
0434:  DATA 32,34
0436:  DATA 20,54
0438:  DATA 65,73
043A:  DATA 74,69
043C:  DATA 6E,67
043E:  DATA 2E,2E
0440:  DATA 2E,00
0442:  DATA 20,41
0444:  DATA 6D,70
0446:  DATA 4F,70
0448:  DATA 2D,33
044A:  DATA 20,42
044C:  DATA 75,65
044E:  DATA 6E,6F
0450:  DATA 21,00
0452:  DATA 20,4C
0454:  DATA 4D,33
0456:  DATA 32,34
0458:  DATA 20,54
045A:  DATA 65,73
045C:  DATA 74,69
045E:  DATA 6E,67
0460:  DATA 2E,2E
0462:  DATA 2E,00
0464:  DATA 20,41
0466:  DATA 6D,70
0468:  DATA 4F,70
046A:  DATA 2D,34
046C:  DATA 20,42
046E:  DATA 75,65
0470:  DATA 6E,6F
0472:  DATA 21,00
0474:  DATA 20,4C
0476:  DATA 4D,33
0478:  DATA 32,34
047A:  DATA 20,54
047C:  DATA 65,73
047E:  DATA 74,69
0480:  DATA 6E,67
0482:  DATA 2E,2E
0484:  DATA 2E,00
0486:  DATA 20,42
0488:  DATA 75,65
048A:  DATA 6E,6F
048C:  DATA 73,20
048E:  DATA 25,69
0490:  DATA 00,00
0492:  DATA 20,52
0494:  DATA 65,67
0496:  DATA 72,65
0498:  DATA 73,61
049A:  DATA 6E,64
049C:  DATA 6F,2E
049E:  DATA 2E,2E
04A0:  DATA 00,00
04A2:  DATA 20,31
04A4:  DATA 3E,4C
04A6:  DATA 4D,33
04A8:  DATA 35,38
04AA:  DATA 20,32
04AC:  DATA 3E,4C
04AE:  DATA 4D,33
04B0:  DATA 34,38
04B2:  DATA 00,00
04B4:  DATA 20,34
04B6:  DATA 3E,4C
04B8:  DATA 4D,33
04BA:  DATA 32,34
04BC:  DATA 20,33
04BE:  DATA 3E,50
04C0:  DATA 61,67
04C2:  DATA 2E,53
04C4:  DATA 69,67
04C6:  DATA 2E,00
04C8:  DATA 20,31
04CA:  DATA 3E,4E
04CC:  DATA 50,4E
04CE:  DATA 20,32
04D0:  DATA 3E,50
04D2:  DATA 4E,50
04D4:  DATA 00,00
04D6:  DATA 20,34
04D8:  DATA 3E,4E
04DA:  DATA 41,44
04DC:  DATA 41,20
04DE:  DATA 33,3E
04E0:  DATA 52,65
04E2:  DATA 67,72
04E4:  DATA 65,73
04E6:  DATA 61,72
04E8:  DATA 00,00
04EA:  DATA 4E,50
04EC:  DATA 4E,20
04EE:  DATA 54,65
04F0:  DATA 73,74
04F2:  DATA 69,6E
04F4:  DATA 67,2E
04F6:  DATA 2E,2E
04F8:  DATA 00,00
04FA:  DATA 4E,50
04FC:  DATA 4E,20
04FE:  DATA 42,55
0500:  DATA 45,4E
0502:  DATA 4F,00
0504:  DATA 20,32
0506:  DATA 3E,56
0508:  DATA 6F,6C
050A:  DATA 76,65
050C:  DATA 72,00
050E:  DATA 4E,50
0510:  DATA 4E,20
0512:  DATA 4D,41
0514:  DATA 4C,4F
0516:  DATA 00,00
0518:  DATA 20,32
051A:  DATA 3E,56
051C:  DATA 6F,6C
051E:  DATA 76,65
0520:  DATA 72,00
0522:  DATA 20,52
0524:  DATA 65,67
0526:  DATA 72,65
0528:  DATA 73,61
052A:  DATA 6E,64
052C:  DATA 6F,2E
052E:  DATA 2E,2E
0530:  DATA 00,00
0532:  DATA 20,31
0534:  DATA 3E,4E
0536:  DATA 50,4E
0538:  DATA 20,32
053A:  DATA 3E,50
053C:  DATA 4E,50
053E:  DATA 00,00
0540:  DATA 20,34
0542:  DATA 3E,4E
0544:  DATA 41,44
0546:  DATA 41,20
0548:  DATA 33,3E
054A:  DATA 52,65
054C:  DATA 67,72
054E:  DATA 65,73
0550:  DATA 61,72
0552:  DATA 00,00
0554:  DATA 50,4E
0556:  DATA 50,20
0558:  DATA 54,65
055A:  DATA 73,74
055C:  DATA 69,6E
055E:  DATA 67,2E
0560:  DATA 2E,2E
0562:  DATA 00,00
0564:  DATA 50,4E
0566:  DATA 50,20
0568:  DATA 42,55
056A:  DATA 45,4E
056C:  DATA 4F,00
056E:  DATA 20,32
0570:  DATA 3E,56
0572:  DATA 6F,6C
0574:  DATA 76,65
0576:  DATA 72,00
0578:  DATA 50,4E
057A:  DATA 50,20
057C:  DATA 4D,41
057E:  DATA 4C,4F
0580:  DATA 00,00
0582:  DATA 20,32
0584:  DATA 3E,56
0586:  DATA 6F,6C
0588:  DATA 76,65
058A:  DATA 72,00
058C:  DATA 20,52
058E:  DATA 65,67
0590:  DATA 72,65
0592:  DATA 73,61
0594:  DATA 6E,64
0596:  DATA 6F,2E
0598:  DATA 2E,2E
059A:  DATA 00,00
059C:  DATA 20,31
059E:  DATA 3E,4E
05A0:  DATA 50,4E
05A2:  DATA 20,32
05A4:  DATA 3E,50
05A6:  DATA 4E,50
05A8:  DATA 00,00
05AA:  DATA 20,34
05AC:  DATA 3E,4E
05AE:  DATA 41,44
05B0:  DATA 41,20
05B2:  DATA 33,3E
05B4:  DATA 52,65
05B6:  DATA 67,72
05B8:  DATA 65,73
05BA:  DATA 61,72
05BC:  DATA 00,00
*
086A:  TBLRD*+
086C:  MOVF   FF5,F
086E:  BZ    0888
0870:  MOVFF  FF6,3F
0874:  MOVFF  FF7,40
0878:  MOVFF  FF5,4C
087C:  RCALL  0828
087E:  MOVFF  3F,FF6
0882:  MOVFF  40,FF7
0886:  BRA    086A
0888:  RETURN 0
*
08E8:  MOVLW  8E
08EA:  MOVWF  00
08EC:  MOVFF  40,01
08F0:  MOVFF  3F,02
08F4:  CLRF   03
08F6:  MOVF   01,F
08F8:  BNZ   090C
08FA:  MOVFF  02,01
08FE:  CLRF   02
0900:  MOVLW  08
0902:  SUBWF  00,F
0904:  MOVF   01,F
0906:  BNZ   090C
0908:  CLRF   00
090A:  BRA    091C
090C:  BCF    FD8.0
090E:  BTFSC  01.7
0910:  BRA    091A
0912:  RLCF   02,F
0914:  RLCF   01,F
0916:  DECF   00,F
0918:  BRA    090C
091A:  BCF    01.7
091C:  GOTO   0E2E (RETURN)
0920:  MOVF   4C,W
0922:  BTFSC  FD8.2
0924:  BRA    0A08
0926:  MOVWF  00
0928:  MOVF   50,W
092A:  BTFSC  FD8.2
092C:  BRA    0A08
092E:  ADDWF  00,F
0930:  BNC   093A
0932:  MOVLW  81
0934:  ADDWF  00,F
0936:  BC    0A08
0938:  BRA    0942
093A:  MOVLW  7F
093C:  SUBWF  00,F
093E:  BNC   0A08
0940:  BZ    0A08
0942:  MOVFF  4D,54
0946:  MOVF   51,W
0948:  XORWF  54,F
094A:  BSF    4D.7
094C:  BSF    51.7
094E:  MOVF   4F,W
0950:  MULWF  53
0952:  MOVFF  FF4,56
0956:  MOVF   4E,W
0958:  MULWF  52
095A:  MOVFF  FF4,03
095E:  MOVFF  FF3,55
0962:  MULWF  53
0964:  MOVF   FF3,W
0966:  ADDWF  56,F
0968:  MOVF   FF4,W
096A:  ADDWFC 55,F
096C:  MOVLW  00
096E:  ADDWFC 03,F
0970:  MOVF   4F,W
0972:  MULWF  52
0974:  MOVF   FF3,W
0976:  ADDWF  56,F
0978:  MOVF   FF4,W
097A:  ADDWFC 55,F
097C:  MOVLW  00
097E:  CLRF   02
0980:  ADDWFC 03,F
0982:  ADDWFC 02,F
0984:  MOVF   4D,W
0986:  MULWF  53
0988:  MOVF   FF3,W
098A:  ADDWF  55,F
098C:  MOVF   FF4,W
098E:  ADDWFC 03,F
0990:  MOVLW  00
0992:  ADDWFC 02,F
0994:  MOVF   4D,W
0996:  MULWF  52
0998:  MOVF   FF3,W
099A:  ADDWF  03,F
099C:  MOVF   FF4,W
099E:  ADDWFC 02,F
09A0:  MOVLW  00
09A2:  CLRF   01
09A4:  ADDWFC 01,F
09A6:  MOVF   4F,W
09A8:  MULWF  51
09AA:  MOVF   FF3,W
09AC:  ADDWF  55,F
09AE:  MOVF   FF4,W
09B0:  ADDWFC 03,F
09B2:  MOVLW  00
09B4:  ADDWFC 02,F
09B6:  ADDWFC 01,F
09B8:  MOVF   4E,W
09BA:  MULWF  51
09BC:  MOVF   FF3,W
09BE:  ADDWF  03,F
09C0:  MOVF   FF4,W
09C2:  ADDWFC 02,F
09C4:  MOVLW  00
09C6:  ADDWFC 01,F
09C8:  MOVF   4D,W
09CA:  MULWF  51
09CC:  MOVF   FF3,W
09CE:  ADDWF  02,F
09D0:  MOVF   FF4,W
09D2:  ADDWFC 01,F
09D4:  INCF   00,F
09D6:  BTFSC  01.7
09D8:  BRA    09E4
09DA:  RLCF   55,F
09DC:  RLCF   03,F
09DE:  RLCF   02,F
09E0:  RLCF   01,F
09E2:  DECF   00,F
09E4:  MOVLW  00
09E6:  BTFSS  55.7
09E8:  BRA    09FE
09EA:  INCF   03,F
09EC:  ADDWFC 02,F
09EE:  ADDWFC 01,F
09F0:  MOVF   01,W
09F2:  BNZ   09FE
09F4:  MOVF   02,W
09F6:  BNZ   09FE
09F8:  MOVF   03,W
09FA:  BNZ   09FE
09FC:  INCF   00,F
09FE:  BTFSC  54.7
0A00:  BSF    01.7
0A02:  BTFSS  54.7
0A04:  BCF    01.7
0A06:  BRA    0A10
0A08:  CLRF   00
0A0A:  CLRF   01
0A0C:  CLRF   02
0A0E:  CLRF   03
0A10:  RETURN 0
0A12:  TBLRD*+
0A14:  MOVFF  FF6,40
0A18:  MOVFF  FF7,41
0A1C:  MOVFF  FF5,4C
0A20:  RCALL  0828
0A22:  MOVFF  40,FF6
0A26:  MOVFF  41,FF7
0A2A:  DECFSZ 3F,F
0A2C:  BRA    0A12
0A2E:  RETURN 0
0A30:  MOVF   4C,W
0A32:  SUBLW  B6
0A34:  MOVWF  4C
0A36:  CLRF   03
0A38:  MOVFF  4D,50
0A3C:  BSF    4D.7
0A3E:  BCF    FD8.0
0A40:  RRCF   4D,F
0A42:  RRCF   4E,F
0A44:  RRCF   4F,F
0A46:  RRCF   03,F
0A48:  RRCF   02,F
0A4A:  RRCF   01,F
0A4C:  RRCF   00,F
0A4E:  DECFSZ 4C,F
0A50:  BRA    0A3E
0A52:  BTFSS  50.7
0A54:  BRA    0A6C
0A56:  COMF   00,F
0A58:  COMF   01,F
0A5A:  COMF   02,F
0A5C:  COMF   03,F
0A5E:  INCF   00,F
0A60:  BTFSC  FD8.2
0A62:  INCF   01,F
0A64:  BTFSC  FD8.2
0A66:  INCF   02,F
0A68:  BTFSC  FD8.2
0A6A:  INCF   03,F
0A6C:  GOTO   0B4C (RETURN)
0A70:  BTFSC  FD8.1
0A72:  BRA    0A7A
0A74:  CLRF   FEA
0A76:  MOVLW  54
0A78:  MOVWF  FE9
0A7A:  CLRF   00
0A7C:  CLRF   01
0A7E:  CLRF   02
0A80:  CLRF   03
0A82:  CLRF   54
0A84:  CLRF   55
0A86:  CLRF   56
0A88:  CLRF   57
0A8A:  MOVF   53,W
0A8C:  IORWF  52,W
0A8E:  IORWF  51,W
0A90:  IORWF  50,W
0A92:  BZ    0AEC
0A94:  MOVLW  20
0A96:  MOVWF  58
0A98:  BCF    FD8.0
0A9A:  RLCF   4C,F
0A9C:  RLCF   4D,F
0A9E:  RLCF   4E,F
0AA0:  RLCF   4F,F
0AA2:  RLCF   54,F
0AA4:  RLCF   55,F
0AA6:  RLCF   56,F
0AA8:  RLCF   57,F
0AAA:  MOVF   53,W
0AAC:  SUBWF  57,W
0AAE:  BNZ   0AC0
0AB0:  MOVF   52,W
0AB2:  SUBWF  56,W
0AB4:  BNZ   0AC0
0AB6:  MOVF   51,W
0AB8:  SUBWF  55,W
0ABA:  BNZ   0AC0
0ABC:  MOVF   50,W
0ABE:  SUBWF  54,W
0AC0:  BNC   0AE0
0AC2:  MOVF   50,W
0AC4:  SUBWF  54,F
0AC6:  MOVF   51,W
0AC8:  BTFSS  FD8.0
0ACA:  INCFSZ 51,W
0ACC:  SUBWF  55,F
0ACE:  MOVF   52,W
0AD0:  BTFSS  FD8.0
0AD2:  INCFSZ 52,W
0AD4:  SUBWF  56,F
0AD6:  MOVF   53,W
0AD8:  BTFSS  FD8.0
0ADA:  INCFSZ 53,W
0ADC:  SUBWF  57,F
0ADE:  BSF    FD8.0
0AE0:  RLCF   00,F
0AE2:  RLCF   01,F
0AE4:  RLCF   02,F
0AE6:  RLCF   03,F
0AE8:  DECFSZ 58,F
0AEA:  BRA    0A98
0AEC:  MOVFF  54,FEF
0AF0:  MOVFF  55,FEC
0AF4:  MOVFF  56,FEC
0AF8:  MOVFF  57,FEC
0AFC:  RETURN 0
0AFE:  MOVF   FE9,W
0B00:  MOVWF  44
0B02:  MOVF   43,W
0B04:  MOVWF  46
0B06:  BZ    0B3A
0B08:  MOVFF  42,4F
0B0C:  MOVFF  41,4E
0B10:  MOVFF  40,4D
0B14:  MOVFF  3F,4C
0B18:  CLRF   53
0B1A:  CLRF   52
0B1C:  MOVLW  20
0B1E:  MOVWF  51
0B20:  MOVLW  82
0B22:  MOVWF  50
0B24:  RCALL  0920
0B26:  MOVFF  03,42
0B2A:  MOVFF  02,41
0B2E:  MOVFF  01,40
0B32:  MOVFF  00,3F
0B36:  DECFSZ 46,F
0B38:  BRA    0B08
0B3A:  MOVFF  42,4F
0B3E:  MOVFF  41,4E
0B42:  MOVFF  40,4D
0B46:  MOVFF  3F,4C
0B4A:  BRA    0A30
0B4C:  MOVFF  03,42
0B50:  MOVFF  02,41
0B54:  MOVFF  01,40
0B58:  MOVFF  00,3F
0B5C:  BTFSS  42.7
0B5E:  BRA    0B7A
0B60:  DECF   44,F
0B62:  BSF    44.5
0B64:  COMF   3F,F
0B66:  COMF   40,F
0B68:  COMF   41,F
0B6A:  COMF   42,F
0B6C:  INCF   3F,F
0B6E:  BTFSC  FD8.2
0B70:  INCF   40,F
0B72:  BTFSC  FD8.2
0B74:  INCF   41,F
0B76:  BTFSC  FD8.2
0B78:  INCF   42,F
0B7A:  MOVLW  3B
0B7C:  MOVWF  4B
0B7E:  MOVLW  9A
0B80:  MOVWF  4A
0B82:  MOVLW  CA
0B84:  MOVWF  49
0B86:  CLRF   48
0B88:  MOVLW  0A
0B8A:  MOVWF  46
0B8C:  MOVF   43,W
0B8E:  BTFSC  FD8.2
0B90:  INCF   44,F
0B92:  BSF    FD8.1
0B94:  CLRF   FEA
0B96:  MOVLW  3F
0B98:  MOVWF  FE9
0B9A:  MOVFF  42,4F
0B9E:  MOVFF  41,4E
0BA2:  MOVFF  40,4D
0BA6:  MOVFF  3F,4C
0BAA:  MOVFF  4B,53
0BAE:  MOVFF  4A,52
0BB2:  MOVFF  49,51
0BB6:  MOVFF  48,50
0BBA:  RCALL  0A70
0BBC:  MOVF   01,W
0BBE:  MOVF   00,F
0BC0:  BNZ   0BE0
0BC2:  INCF   43,W
0BC4:  SUBWF  46,W
0BC6:  BZ    0BE0
0BC8:  MOVF   44,W
0BCA:  BZ    0BE4
0BCC:  ANDLW  0F
0BCE:  SUBWF  46,W
0BD0:  BZ    0BD4
0BD2:  BC    0C42
0BD4:  BTFSC  44.7
0BD6:  BRA    0C42
0BD8:  BTFSC  44.6
0BDA:  BRA    0BE4
0BDC:  MOVLW  20
0BDE:  BRA    0C3A
0BE0:  MOVLW  20
0BE2:  ANDWF  44,F
0BE4:  BTFSS  44.5
0BE6:  BRA    0C00
0BE8:  BCF    44.5
0BEA:  MOVF   43,W
0BEC:  BTFSS  FD8.2
0BEE:  DECF   44,F
0BF0:  MOVF   00,W
0BF2:  MOVWF  44
0BF4:  MOVLW  2D
0BF6:  MOVWF  4C
0BF8:  RCALL  0828
0BFA:  MOVF   44,W
0BFC:  MOVWF  00
0BFE:  CLRF   44
0C00:  MOVF   43,W
0C02:  SUBWF  46,W
0C04:  BNZ   0C1A
0C06:  MOVF   00,W
0C08:  MOVWF  44
0C0A:  MOVLW  2E
0C0C:  MOVWF  4C
0C0E:  RCALL  0828
0C10:  MOVF   44,W
0C12:  MOVWF  00
0C14:  MOVLW  20
0C16:  ANDWF  44,F
0C18:  MOVLW  00
0C1A:  MOVLW  30
0C1C:  BTFSS  44.5
0C1E:  BRA    0C3A
0C20:  BCF    44.5
0C22:  MOVF   43,W
0C24:  BTFSS  FD8.2
0C26:  DECF   44,F
0C28:  MOVF   00,W
0C2A:  MOVWF  44
0C2C:  MOVLW  2D
0C2E:  MOVWF  4C
0C30:  RCALL  0828
0C32:  MOVF   44,W
0C34:  MOVWF  00
0C36:  CLRF   44
0C38:  MOVLW  30
0C3A:  ADDWF  00,F
0C3C:  MOVFF  00,4C
0C40:  RCALL  0828
0C42:  BCF    FD8.1
0C44:  MOVFF  4B,4F
0C48:  MOVFF  4A,4E
0C4C:  MOVFF  49,4D
0C50:  MOVFF  48,4C
0C54:  CLRF   53
0C56:  CLRF   52
0C58:  CLRF   51
0C5A:  MOVLW  0A
0C5C:  MOVWF  50
0C5E:  RCALL  0A70
0C60:  MOVFF  03,4B
0C64:  MOVFF  02,4A
0C68:  MOVFF  01,49
0C6C:  MOVFF  00,48
0C70:  DECFSZ 46,F
0C72:  BRA    0B92
0C74:  GOTO   0EC8 (RETURN)
0C78:  MOVF   46,W
0C7A:  CLRF   01
0C7C:  SUBWF  45,W
0C7E:  BC    0C86
0C80:  MOVFF  45,00
0C84:  BRA    0C9E
0C86:  CLRF   00
0C88:  MOVLW  08
0C8A:  MOVWF  47
0C8C:  RLCF   45,F
0C8E:  RLCF   00,F
0C90:  MOVF   46,W
0C92:  SUBWF  00,W
0C94:  BTFSC  FD8.0
0C96:  MOVWF  00
0C98:  RLCF   01,F
0C9A:  DECFSZ 47,F
0C9C:  BRA    0C8C
0C9E:  RETURN 0
0CA0:  MOVLW  20
0CA2:  BTFSS  40.4
0CA4:  MOVLW  30
0CA6:  MOVWF  41
0CA8:  MOVFF  3F,00
0CAC:  BTFSS  3F.7
0CAE:  BRA    0CC0
0CB0:  COMF   00,F
0CB2:  INCF   00,F
0CB4:  MOVFF  00,3F
0CB8:  MOVLW  2D
0CBA:  MOVWF  41
0CBC:  BSF    40.7
0CBE:  BSF    40.0
0CC0:  MOVF   01,W
0CC2:  MOVFF  3F,45
0CC6:  MOVLW  64
0CC8:  MOVWF  46
0CCA:  RCALL  0C78
0CCC:  MOVFF  00,3F
0CD0:  MOVLW  30
0CD2:  ADDWF  01,W
0CD4:  MOVWF  42
0CD6:  MOVFF  3F,45
0CDA:  MOVLW  0A
0CDC:  MOVWF  46
0CDE:  RCALL  0C78
0CE0:  MOVLW  30
0CE2:  ADDWF  00,W
0CE4:  MOVWF  44
0CE6:  MOVLW  30
0CE8:  ADDWF  01,W
0CEA:  MOVWF  43
0CEC:  MOVFF  41,00
0CF0:  MOVLW  30
0CF2:  SUBWF  42,W
0CF4:  BZ    0CFE
0CF6:  BSF    40.1
0CF8:  BTFSC  40.7
0CFA:  BSF    40.2
0CFC:  BRA    0D22
0CFE:  MOVFF  41,42
0D02:  MOVLW  20
0D04:  MOVWF  41
0D06:  MOVLW  30
0D08:  SUBWF  43,W
0D0A:  BZ    0D14
0D0C:  BSF    40.0
0D0E:  BTFSC  40.7
0D10:  BSF    40.1
0D12:  BRA    0D22
0D14:  BTFSS  FD8.2
0D16:  BSF    40.0
0D18:  BNZ   0D22
0D1A:  MOVFF  42,43
0D1E:  MOVLW  20
0D20:  MOVWF  42
0D22:  BTFSC  40.2
0D24:  BRA    0D30
0D26:  BTFSC  40.1
0D28:  BRA    0D36
0D2A:  BTFSC  40.0
0D2C:  BRA    0D3C
0D2E:  BRA    0D42
0D30:  MOVFF  41,4C
0D34:  RCALL  0828
0D36:  MOVFF  42,4C
0D3A:  RCALL  0828
0D3C:  MOVFF  43,4C
0D40:  RCALL  0828
0D42:  MOVFF  44,4C
0D46:  RCALL  0828
0D48:  RETURN 0
....................  
.................... #list 
....................  
.................... #device ADC = 10 
.................... #use i2c(Master,Fast=100000, sda=PIN_B0, scl=PIN_B1,force_sw) 
*
05E6:  MOVLW  08
05E8:  MOVWF  01
05EA:  NOP   
05EC:  BCF    F8A.1
05EE:  BCF    F93.1
05F0:  NOP   
05F2:  RLCF   5A,F
05F4:  BCF    F8A.0
05F6:  BTFSC  FD8.0
05F8:  BSF    F93.0
05FA:  BTFSS  FD8.0
05FC:  BCF    F93.0
05FE:  BSF    F93.1
0600:  BTFSS  F81.1
0602:  BRA    0600
0604:  DECFSZ 01,F
0606:  BRA    05EA
0608:  NOP   
060A:  BCF    F8A.1
060C:  BCF    F93.1
060E:  NOP   
0610:  BSF    F93.0
0612:  NOP   
0614:  NOP   
0616:  BSF    F93.1
0618:  BTFSS  F81.1
061A:  BRA    0618
061C:  CLRF   01
061E:  NOP   
0620:  BTFSC  F81.0
0622:  BSF    01.0
0624:  BCF    F8A.1
0626:  BCF    F93.1
0628:  BCF    F8A.0
062A:  BCF    F93.0
062C:  RETURN 0
.................... #include <i2c_Flex_LCD.c> 
.................... //-----------------------------------------------------------------------------  
.................... // Title:         i2c_Flex_LCD  
.................... // Description:   Driver for common LCD with 1/2/3 or 4 rows by 1...20 columns  
.................... //                using PCF8574T interface board with I2C protocol.  
.................... // Date:          Nov-2013  
.................... // Ver.Rev.:      1.1  
.................... // Author:        Hugo Silva (sergio-hugo@bol.com.br) #Based on the routines of  
.................... //                "20X4_LCD_I2C_DRIVER.h" from Pumrin S. and "lcd4_i2c.c" from XP8100  
.................... //-----------------------------------------------------------------------------  
.................... //  
.................... // lcd_init() Must be called before any other function.  
.................... //  
.................... // lcd_putc(c) Will display c on the next position of the LCD.  
.................... //   
.................... //     \f Clear LCD display  
.................... //     \n Set write position on next lcd line  
.................... //     \b LCD backspace  
.................... //     lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)  
.................... //  
.................... // lcd_backlight_led(ON)/lcd_backlight_led(OFF) = Turn ON/OFF LCD Backlight LED  
.................... //  
.................... //-----------------------------------------------------------------------------  
.................... // LCD pins D0-D3 are not used.  
.................... //-----------------------------------------------------------------------------  
.................... //  
.................... // Comment   : Control of a compatible LCD (1...4 rows by 1...4 columns) from  
.................... //              a bus I2C with an EXPANDER of I/O with connection I2C.  
.................... //              The tests of these routines have been programmed using the IC  
.................... //              Phillips PCF8574T. I've used 4 bits mode programming.  
.................... //              The 8 bits mode programming is possible if you use 2 x PCF8574T.  
.................... //              RW Pin is not being used.  
.................... //  
.................... // As defined in the following structure the pin connection is as follows:  
.................... //  
.................... //  PCF8574P     LCD  
.................... //  ========     ======  
.................... //     P0        RS  
.................... //     P1        RW    (Not used!)  
.................... //     P2        Enable   
.................... //     P3        Led Backlight  
.................... //     P4        D4  
.................... //     P5        D5  
.................... //     P6        D6  
.................... //     P7        D7  
.................... //  
.................... //  The SCL and SDA pins should be pull-up resistor as shown below:  
.................... //  
.................... //             +5v  
.................... //               |  
.................... //               <  
.................... //               > 4.7K         
.................... //               <           
.................... //To PIC         |          To i2c slave  
.................... //pin xx ------------------ SDA pin   
.................... //(SDA)                       
.................... //              +5v  
.................... //               |  
.................... //               <  
.................... //               > 4.7K         
.................... //               <           
.................... //To PIC         |          To i2c slave  
.................... //pin xx ------------------ SCL pin   
.................... //(SCL)  
.................... //  
.................... //To PIC                    To i2c slave  
.................... //Vss pin ----------------- Vss or ground pin   
.................... //                |  
.................... //              -----  
.................... //               ---  Ground  
.................... //                -   
.................... //   
.................... // THIS DOCUMENT IS PROVIDED TO THE USER "AS IS"  
.................... //-----------------------------------------------------------------------------  
.................... byte LCD_ADDR ;//             0x4E        //I2C slave address for LCD module  
.................... byte lcd_total_rows ;//       2           //Number of rows: 1,2,3 or 4  
.................... byte lcd_total_columns ;//    16          //Number of columns: 1...20    
....................  
.................... #define RS                    0b00000001  //P0 - PCF8574T Pin connected to RS  
.................... #define RW                    0b00000010  //P1 - PCF8574T Pin connected to RW  
.................... #define ENABLE                0b00000100  //P2 - PCF8574T Pin connected to EN  
.................... #define LCD_BACKLIGHT         0b00001000  //P3 - PCF8574T Pin connected to BACKLIGHT LED  
....................  
.................... #define addr_row_one          0x00        //LCD RAM address for row 1  
.................... #define addr_row_two          0x40        //LCD RAM address for row 2  
.................... #define addr_row_three        0x14        //LCD RAM address for row 3  
.................... #define addr_row_four         0x54        //LCD RAM address for row 4  
....................  
.................... #define ON                    1  
.................... #define OFF                   0  
.................... #define NOT                   ~  
.................... #define data_shifted          data<<4  
....................  
.................... #use delay(clock=4Mhz) 
*
05BE:  CLRF   FEA
05C0:  MOVLW  4D
05C2:  MOVWF  FE9
05C4:  MOVF   FEF,W
05C6:  BZ    05E4
05C8:  MOVLW  01
05CA:  MOVWF  01
05CC:  CLRF   00
05CE:  DECFSZ 00,F
05D0:  BRA    05CE
05D2:  DECFSZ 01,F
05D4:  BRA    05CC
05D6:  MOVLW  4A
05D8:  MOVWF  00
05DA:  DECFSZ 00,F
05DC:  BRA    05DA
05DE:  BRA    05E0
05E0:  DECFSZ FEF,F
05E2:  BRA    05C8
05E4:  RETURN 0
.................... int8 new_row_request=1, BACKLIGHT_LED=LCD_BACKLIGHT;  
....................  
.................... void lcd_backlight_led(byte bl)  
.................... {   
....................       If (bl) BACKLIGHT_LED=LCD_BACKLIGHT; else BACKLIGHT_LED=OFF;  
.................... }  
....................  
.................... void i2c_send_nibble(byte data, byte type)  
.................... {     
....................    switch (type)  
*
062E:  MOVF   58,W
0630:  XORLW  00
0632:  BZ    063A
0634:  XORLW  01
0636:  BZ    067A
0638:  BRA    06BC
....................    {       
....................       case 0 :       
....................       i2c_write(data_shifted | BACKLIGHT_LED);  
063A:  SWAPF  57,W
063C:  MOVWF  00
063E:  MOVLW  F0
0640:  ANDWF  00,F
0642:  MOVF   00,W
0644:  IORWF  1D,W
0646:  MOVWF  59
0648:  MOVWF  5A
064A:  RCALL  05E6
....................       delay_cycles(1);  
064C:  NOP   
....................       i2c_write(data_shifted | ENABLE | BACKLIGHT_LED );  
064E:  SWAPF  57,W
0650:  MOVWF  00
0652:  MOVLW  F0
0654:  ANDWF  00,F
0656:  MOVF   00,W
0658:  IORLW  04
065A:  IORWF  1D,W
065C:  MOVWF  59
065E:  MOVWF  5A
0660:  RCALL  05E6
....................       delay_us(2);  
0662:  BRA    0664
....................       i2c_write(data_shifted & NOT ENABLE | BACKLIGHT_LED);  
0664:  SWAPF  57,W
0666:  MOVWF  00
0668:  MOVLW  F0
066A:  ANDWF  00,F
066C:  MOVF   00,W
066E:  ANDLW  FB
0670:  IORWF  1D,W
0672:  MOVWF  59
0674:  MOVWF  5A
0676:  RCALL  05E6
....................       break;  
0678:  BRA    06BC
....................        
....................       case 1 :  
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED);  
067A:  SWAPF  57,W
067C:  MOVWF  00
067E:  MOVLW  F0
0680:  ANDWF  00,F
0682:  MOVF   00,W
0684:  IORLW  01
0686:  IORWF  1D,W
0688:  MOVWF  59
068A:  MOVWF  5A
068C:  RCALL  05E6
....................       delay_cycles(1);  
068E:  NOP   
....................       i2c_write(data_shifted | RS | ENABLE | BACKLIGHT_LED );  
0690:  SWAPF  57,W
0692:  MOVWF  00
0694:  MOVLW  F0
0696:  ANDWF  00,F
0698:  MOVF   00,W
069A:  IORLW  01
069C:  IORLW  04
069E:  IORWF  1D,W
06A0:  MOVWF  59
06A2:  MOVWF  5A
06A4:  RCALL  05E6
....................       delay_us(2);  
06A6:  BRA    06A8
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED);  
06A8:  SWAPF  57,W
06AA:  MOVWF  00
06AC:  MOVLW  F0
06AE:  ANDWF  00,F
06B0:  MOVF   00,W
06B2:  IORLW  01
06B4:  IORWF  1D,W
06B6:  MOVWF  59
06B8:  MOVWF  5A
06BA:  RCALL  05E6
....................       break;  
....................    }  
06BC:  RETURN 0
.................... }  
....................      
.................... void lcd_send_byte(byte data, byte type)  
....................    {  
....................         i2c_start();  
06BE:  BSF    F93.0
06C0:  NOP   
06C2:  BSF    F93.1
06C4:  NOP   
06C6:  BCF    F8A.0
06C8:  BCF    F93.0
06CA:  NOP   
06CC:  BCF    F8A.1
06CE:  BCF    F93.1
....................         i2c_write(LCD_ADDR);  
06D0:  MOVFF  19,5A
06D4:  RCALL  05E6
....................         i2c_send_nibble(data >> 4 , type);  
06D6:  SWAPF  54,W
06D8:  MOVWF  56
06DA:  MOVLW  0F
06DC:  ANDWF  56,F
06DE:  MOVFF  56,57
06E2:  MOVFF  55,58
06E6:  RCALL  062E
....................         i2c_send_nibble(data & 0xf , type);  
06E8:  MOVF   54,W
06EA:  ANDLW  0F
06EC:  MOVWF  56
06EE:  MOVWF  57
06F0:  MOVFF  55,58
06F4:  RCALL  062E
....................         i2c_stop();         
06F6:  BCF    F93.0
06F8:  NOP   
06FA:  BSF    F93.1
06FC:  BTFSS  F81.1
06FE:  BRA    06FC
0700:  NOP   
0702:  BRA    0704
0704:  NOP   
0706:  BSF    F93.0
0708:  NOP   
070A:  RETURN 0
....................    }  
....................  
.................... void lcd_clear()  
.................... {   
....................         lcd_send_byte(0x01,0);  
070C:  MOVLW  01
070E:  MOVWF  54
0710:  CLRF   55
0712:  RCALL  06BE
....................         delay_ms(2);  
0714:  MOVLW  02
0716:  MOVWF  4D
0718:  RCALL  05BE
....................         new_row_request=1;  
071A:  MOVLW  01
071C:  MOVWF  1C
071E:  RETURN 0
.................... }  
....................  
.................... void lcd_init(byte ADDR, byte col, byte row)  
.................... {  
....................    byte i; 
....................    byte CONST lcd_type=2;  // 0=5x7, 1=5x10, 2=2 lines  
....................    byte CONST LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; // These bytes need to be sent to the LCD to start it up. 
....................     
....................    LCD_ADDR =ADDR;//             0x4E        //I2C slave address for LCD module  
0720:  MOVFF  3F,19
....................    lcd_total_rows =row;//       2           //Number of rows: 1,2,3 or 4  
0724:  MOVFF  41,1A
....................    lcd_total_columns= col ; 
0728:  MOVFF  40,1B
....................    disable_interrupts(GLOBAL);  
072C:  BCF    FF2.6
072E:  BCF    FF2.7
0730:  BTFSC  FF2.7
0732:  BRA    072E
....................    delay_ms(50); //LCD power up delay  
0734:  MOVLW  32
0736:  MOVWF  4D
0738:  RCALL  05BE
....................      
....................    i2c_start();  
073A:  BSF    F93.0
073C:  NOP   
073E:  BSF    F93.1
0740:  NOP   
0742:  BCF    F8A.0
0744:  BCF    F93.0
0746:  NOP   
0748:  BCF    F8A.1
074A:  BCF    F93.1
....................    i2c_write(LCD_ADDR);  
074C:  MOVFF  19,5A
0750:  RCALL  05E6
....................       i2c_send_nibble(0x00,0);  
0752:  CLRF   57
0754:  CLRF   58
0756:  RCALL  062E
....................       delay_ms(15);  
0758:  MOVLW  0F
075A:  MOVWF  4D
075C:  RCALL  05BE
....................      
....................    for (i=1;i<=3;++i)     
075E:  MOVLW  01
0760:  MOVWF  42
0762:  MOVF   42,W
0764:  SUBLW  03
0766:  BNC   077A
....................    {  
....................       i2c_send_nibble(0x03,0);  
0768:  MOVLW  03
076A:  MOVWF  57
076C:  CLRF   58
076E:  RCALL  062E
....................       delay_ms(5);  
0770:  MOVLW  05
0772:  MOVWF  4D
0774:  RCALL  05BE
0776:  INCF   42,F
0778:  BRA    0762
....................    }     
....................       i2c_send_nibble(0x02,0);  
077A:  MOVLW  02
077C:  MOVWF  57
077E:  CLRF   58
0780:  RCALL  062E
....................       delay_ms(5);  
0782:  MOVLW  05
0784:  MOVWF  4D
0786:  RCALL  05BE
....................    i2c_stop();  
0788:  BCF    F93.0
078A:  NOP   
078C:  BSF    F93.1
078E:  BTFSS  F81.1
0790:  BRA    078E
0792:  NOP   
0794:  BRA    0796
0796:  NOP   
0798:  BSF    F93.0
079A:  NOP   
....................      
....................    for (i=0;i<=3;++i) {  
079C:  CLRF   42
079E:  MOVF   42,W
07A0:  SUBLW  03
07A2:  BNC   07BC
....................    lcd_send_byte(LCD_INIT_STRING[i],0);  
07A4:  CLRF   03
07A6:  MOVF   42,W
07A8:  RCALL  00BA
07AA:  MOVWF  43
07AC:  MOVWF  54
07AE:  CLRF   55
07B0:  RCALL  06BE
....................    delay_ms(5);  
07B2:  MOVLW  05
07B4:  MOVWF  4D
07B6:  RCALL  05BE
07B8:  INCF   42,F
07BA:  BRA    079E
....................    }  
....................    lcd_clear();  //Clear Display  
07BC:  RCALL  070C
....................    enable_interrupts(GLOBAL);  
07BE:  MOVLW  C0
07C0:  IORWF  FF2,F
07C2:  GOTO   0DB2 (RETURN)
.................... }  
....................  
.................... void lcd_gotoxy( byte x, byte y)  
.................... {  
.................... byte row,column,row_addr,lcd_address;  
.................... static char data;  
....................  
....................    if (y>lcd_total_rows) row=lcd_total_rows; else row=y;  
07C6:  MOVF   4E,W
07C8:  SUBWF  1A,W
07CA:  BC    07D2
07CC:  MOVFF  1A,4F
07D0:  BRA    07D6
07D2:  MOVFF  4E,4F
....................    
....................    switch(row)  
07D6:  MOVF   4F,W
07D8:  XORLW  01
07DA:  BZ    07EA
07DC:  XORLW  03
07DE:  BZ    07EE
07E0:  XORLW  01
07E2:  BZ    07F4
07E4:  XORLW  07
07E6:  BZ    07FA
07E8:  BRA    0800
....................    {  
....................       case 1:  row_addr=addr_row_one;     break;  
07EA:  CLRF   51
07EC:  BRA    0802
....................       case 2:  row_addr=addr_row_two;     break;  
07EE:  MOVLW  40
07F0:  MOVWF  51
07F2:  BRA    0802
....................       case 3:  row_addr=addr_row_three;   break;  
07F4:  MOVLW  14
07F6:  MOVWF  51
07F8:  BRA    0802
....................       case 4:  row_addr=addr_row_four;    break;  
07FA:  MOVLW  54
07FC:  MOVWF  51
07FE:  BRA    0802
....................       default: row_addr=addr_row_one;     break;   
0800:  CLRF   51
....................    }   
....................      
....................    if (x>lcd_total_columns) column=lcd_total_columns; else column=x;   
0802:  MOVF   4D,W
0804:  SUBWF  1B,W
0806:  BC    080E
0808:  MOVFF  1B,50
080C:  BRA    0812
080E:  MOVFF  4D,50
....................    lcd_address=(row_addr+(column-1));  
0812:  MOVLW  01
0814:  SUBWF  50,W
0816:  ADDWF  51,W
0818:  MOVWF  52
....................    lcd_send_byte(0x80|lcd_address,0);  
081A:  MOVF   52,W
081C:  IORLW  80
081E:  MOVWF  53
0820:  MOVWF  54
0822:  CLRF   55
0824:  RCALL  06BE
0826:  RETURN 0
.................... }  
....................  
.................... //Display the character on LCD screen.  
.................... void LCD_PUTC(char in_data)  
.................... {     
....................   switch(in_data)  
0828:  MOVF   4C,W
082A:  XORLW  0C
082C:  BZ    0838
082E:  XORLW  06
0830:  BZ    083C
0832:  XORLW  02
0834:  BZ    0854
0836:  BRA    085E
....................    {   
....................      case '\f': lcd_clear();                       break;                 
0838:  RCALL  070C
083A:  BRA    0868
....................        
....................      case '\n':  
....................      new_row_request++;  
083C:  INCF   1C,F
....................      if (new_row_request>lcd_total_rows) new_row_request=1;  
083E:  MOVF   1C,W
0840:  SUBWF  1A,W
0842:  BC    0848
0844:  MOVLW  01
0846:  MOVWF  1C
....................      lcd_gotoxy(1, new_row_request);  
0848:  MOVLW  01
084A:  MOVWF  4D
084C:  MOVFF  1C,4E
0850:  RCALL  07C6
....................      break;  
0852:  BRA    0868
....................                    
....................      case '\b': lcd_send_byte(0x10,0);             break;  
0854:  MOVLW  10
0856:  MOVWF  54
0858:  CLRF   55
085A:  RCALL  06BE
085C:  BRA    0868
....................          
....................      default: lcd_send_byte(in_data,1);            break;       
085E:  MOVFF  4C,54
0862:  MOVLW  01
0864:  MOVWF  55
0866:  RCALL  06BE
....................        
....................    }  
0868:  RETURN 0
.................... }  
....................  
.................... #fuses intrc,nowdt 
.................... #use delay(clock=4Mhz) 
*
088A:  CLRF   FEA
088C:  MOVLW  40
088E:  MOVWF  FE9
0890:  MOVF   FEF,W
0892:  BZ    08B0
0894:  MOVLW  01
0896:  MOVWF  01
0898:  CLRF   00
089A:  DECFSZ 00,F
089C:  BRA    089A
089E:  DECFSZ 01,F
08A0:  BRA    0898
08A2:  MOVLW  4A
08A4:  MOVWF  00
08A6:  DECFSZ 00,F
08A8:  BRA    08A6
08AA:  BRA    08AC
08AC:  DECFSZ FEF,F
08AE:  BRA    0894
08B0:  RETURN 0
.................... //#include <lcd.c> 
.................... #use fast_io(a) 
.................... float Lecturaad620; 
.................... int32 valor_recarga = 63899; 
.................... //int32 valor_recarga = 0; 
.................... int direccionI2C = 0x4E; 
.................... int filas = 2; 
.................... int columnas = 16; 
.................... int pulsos_555 =  0; 
.................... int1 bandera_prueba_555; 
.................... int1 bandera_estado_555; 
.................... int32 value; 
.................... int opambuenos = 0; 
.................... int1 NPN_estado; 
.................... int1 PNP_estado; 
....................  
.................... #INT_EXT2 
.................... void pulsos() { 
....................    pulsos_555 = pulsos_555 + 1; 
*
00CE:  MOVLW  01
00D0:  ADDWF  2A,F
....................    CLEAR_INTERRUPT(INT_EXT2); 
00D2:  BCF    FF0.1
.................... } 
....................  
00D4:  BCF    FF0.1
00D6:  GOTO   006C
.................... #INT_RTCC  
.................... void tiempo_final_555() { 
....................    DISABLE_INTERRUPTS(INT_EXT2);// Inhabilitar las interrupciones del timer0 
00DA:  BCF    FF0.4
....................    DISABLE_INTERRUPTS(INT_RTCC); 
00DC:  BCF    FF2.5
....................    bandera_prueba_555 = 0; 
00DE:  BCF    2B.0
....................    if (pulsos_555 > 9) { 
00E0:  MOVF   2A,W
00E2:  SUBLW  09
00E4:  BC    00EA
....................       bandera_estado_555 = 1; 
00E6:  BSF    2B.1
....................    } 
00E8:  BRA    00EC
....................     
....................    else { 
....................       bandera_estado_555 = 0; 
00EA:  BCF    2B.1
....................    } 
....................     
....................    CLEAR_INTERRUPT(INT_RTCC); 
00EC:  BCF    FF2.2
00EE:  BCF    FF2.2
00F0:  GOTO   006C
.................... } 
....................  
.................... int Boton(){ 
....................          if(input(PIN_A3)) { 
*
08B2:  BTFSS  F80.3
08B4:  BRA    08BE
....................             return 1; 
08B6:  MOVLW  01
08B8:  MOVWF  01
08BA:  BRA    08E6
....................             } else if(input(PIN_A4)) { 
08BC:  BRA    08E2
08BE:  BTFSS  F80.4
08C0:  BRA    08CA
....................             return 2; 
08C2:  MOVLW  02
08C4:  MOVWF  01
08C6:  BRA    08E6
....................             } else if(input(PIN_A5 )) { 
08C8:  BRA    08E2
08CA:  BTFSS  F80.5
08CC:  BRA    08D6
....................             return 3; 
08CE:  MOVLW  03
08D0:  MOVWF  01
08D2:  BRA    08E6
....................             } else if (input(PIN_C0)){ 
08D4:  BRA    08E2
08D6:  BSF    F94.0
08D8:  BTFSS  F82.0
08DA:  BRA    08E2
....................             return 4; 
08DC:  MOVLW  04
08DE:  MOVWF  01
08E0:  BRA    08E6
....................             } 
....................             return 0; 
08E2:  MOVLW  00
08E4:  MOVWF  01
08E6:  RETURN 0
....................          } 
.................... void main(){ 
*
0D4A:  CLRF   FF8
0D4C:  BCF    FD0.7
0D4E:  BSF    07.7
0D50:  MOVLW  01
0D52:  MOVWF  1C
0D54:  MOVLW  08
0D56:  MOVWF  1D
0D58:  CLRF   26
0D5A:  CLRF   25
0D5C:  MOVLW  F9
0D5E:  MOVWF  24
0D60:  MOVLW  9B
0D62:  MOVWF  23
0D64:  MOVLW  4E
0D66:  MOVWF  27
0D68:  MOVLW  02
0D6A:  MOVWF  28
0D6C:  MOVLW  10
0D6E:  MOVWF  29
0D70:  CLRF   2A
0D72:  CLRF   30
0D74:  CLRF   32
0D76:  CLRF   31
0D78:  MOVF   FC1,W
0D7A:  ANDLW  C0
0D7C:  IORLW  0F
0D7E:  MOVWF  FC1
0D80:  MOVLW  07
0D82:  MOVWF  FB4
0D84:  CLRF   1E
....................       setup_oscillator(OSC_4MHZ); 
0D86:  MOVLW  60
0D88:  MOVWF  FD3
0D8A:  MOVF   FD3,W
....................       set_tris_a(0xff);// puerto a entrada 
0D8C:  MOVLW  FF
0D8E:  MOVWF  F92
....................       set_tris_d(0x00);// puerto d salida 
0D90:  MOVLW  00
0D92:  MOVWF  F95
....................       set_tris_c(0xff);// puerto c entrada 
0D94:  MOVLW  FF
0D96:  MOVWF  F94
....................       SETUP_COUNTERS(RTCC_INTERNAL,RTCC_DIV_256); 
0D98:  BCF    FD1.0
0D9A:  MOVLW  87
0D9C:  MOVWF  FD5
....................       ENABLE_INTERRUPTS(GLOBAL);// Habilita las interrupciones globales 
0D9E:  MOVLW  C0
0DA0:  IORWF  FF2,F
....................       ext_int_edge(H_TO_L); //Inicia el flanco de la interruccion de alto abajo 
0DA2:  BCF    FF1.6
....................       lcd_init(direccionI2C,filas,columnas); 
0DA4:  MOVFF  27,3F
0DA8:  MOVFF  28,40
0DAC:  MOVFF  29,41
0DB0:  BRA    0720
....................       setup_adc_ports(0x0e); 
0DB2:  MOVF   FC1,W
0DB4:  ANDLW  C0
0DB6:  IORLW  0E
0DB8:  MOVWF  FC1
....................       setup_adc(adc_clock_internal); 
0DBA:  MOVF   FC0,W
0DBC:  ANDLW  C0
0DBE:  IORLW  07
0DC0:  MOVWF  FC0
0DC2:  BSF    FC0.7
0DC4:  BSF    FC2.0
....................             /** 
....................       printf(lcd_putc,"\f"); 
....................       lcd_gotoxy(5,1); 
....................       printf(lcd_putc," UNEXPO"); 
....................       lcd_gotoxy(2,2); 
....................       printf(lcd_putc," BARQUISIMETO"); 
....................       delay_ms(3000); 
....................       printf(lcd_putc,"\f"); 
....................       lcd_gotoxy(0,1); 
....................       printf(lcd_putc," Daniela Canas"); 
....................       lcd_gotoxy(0,2); 
....................       printf(lcd_putc," [Developer]"); 
....................       delay_ms(1000); 
....................       printf(lcd_putc,"\f"); 
....................       lcd_gotoxy(0,1); 
....................       printf(lcd_putc," Gabriel Gimenez"); 
....................       lcd_gotoxy(0,2); 
....................       printf(lcd_putc," [Developer]"); 
....................       delay_ms(1000); 
....................       printf(lcd_putc,"\f"); 
....................       lcd_gotoxy(0,1); 
....................       printf(lcd_putc," Carlos Guedez"); 
....................       lcd_gotoxy(0,2); 
....................       printf(lcd_putc," [Developer]"); 
....................       delay_ms(1000); 
....................       printf(lcd_putc,"\f"); 
....................       lcd_gotoxy(0,1); 
....................       printf(lcd_putc," Carlos Zambrano"); 
....................       lcd_gotoxy(0,2); 
....................       printf(lcd_putc," [Tutor]"); 
....................       delay_ms(1000); 
....................       **/ 
....................        
.................... MENUPRINCIPAL: 
....................       while(true){ 
....................           printf(lcd_putc,"\f"); 
0DC6:  MOVLW  0C
0DC8:  MOVWF  4C
0DCA:  RCALL  0828
....................           lcd_gotoxy(0,1); 
0DCC:  CLRF   4D
0DCE:  MOVLW  01
0DD0:  MOVWF  4E
0DD2:  RCALL  07C6
....................           printf(lcd_putc," MENU PRINCIPAL"); 
0DD4:  MOVLW  F4
0DD6:  MOVWF  FF6
0DD8:  MOVLW  00
0DDA:  MOVWF  FF7
0DDC:  RCALL  086A
....................           lcd_gotoxy(0,2); 
0DDE:  CLRF   4D
0DE0:  MOVLW  02
0DE2:  MOVWF  4E
0DE4:  RCALL  07C6
....................           printf(lcd_putc," 1>AD620 3>NEXT"); 
0DE6:  MOVLW  04
0DE8:  MOVWF  FF6
0DEA:  MOVLW  01
0DEC:  MOVWF  FF7
0DEE:  RCALL  086A
....................           delay_ms(1000); 
0DF0:  MOVLW  04
0DF2:  MOVWF  3F
0DF4:  MOVLW  FA
0DF6:  MOVWF  40
0DF8:  RCALL  088A
0DFA:  DECFSZ 3F,F
0DFC:  BRA    0DF4
....................           while(1){ 
....................              if(Boton()==1){ 
0DFE:  RCALL  08B2
0E00:  DECFSZ 01,W
0E02:  BRA    0F28
....................                while(1){ 
....................                   set_adc_channel(0); 
0E04:  MOVLW  00
0E06:  MOVWF  01
0E08:  MOVF   FC2,W
0E0A:  ANDLW  C3
0E0C:  IORWF  01,W
0E0E:  MOVWF  FC2
....................                   delay_us(20); 
0E10:  MOVLW  06
0E12:  MOVWF  00
0E14:  DECFSZ 00,F
0E16:  BRA    0E14
0E18:  NOP   
....................                   float valor_adc = read_adc(); 
....................                   float lectura= valor_adc*0.004886; 
....................                   float Lecturaad620=lectura; 
0E1A:  BSF    FC2.1
0E1C:  BTFSC  FC2.1
0E1E:  BRA    0E1C
0E20:  MOVFF  FC4,03
0E24:  MOVFF  FC3,3F
0E28:  MOVFF  FC4,40
0E2C:  BRA    08E8
0E2E:  MOVFF  03,36
0E32:  MOVFF  02,35
0E36:  MOVFF  01,34
0E3A:  MOVFF  00,33
0E3E:  MOVFF  36,4F
0E42:  MOVFF  35,4E
0E46:  MOVFF  34,4D
0E4A:  MOVFF  33,4C
0E4E:  MOVLW  BD
0E50:  MOVWF  53
0E52:  MOVLW  1A
0E54:  MOVWF  52
0E56:  MOVLW  20
0E58:  MOVWF  51
0E5A:  MOVLW  77
0E5C:  MOVWF  50
0E5E:  RCALL  0920
0E60:  MOVFF  03,3A
0E64:  MOVFF  02,39
0E68:  MOVFF  01,38
0E6C:  MOVFF  00,37
0E70:  MOVFF  3A,3E
0E74:  MOVFF  39,3D
0E78:  MOVFF  38,3C
0E7C:  MOVFF  37,3B
....................                   printf(lcd_putc,"\f"); //Limpiar la pantalla 
0E80:  MOVLW  0C
0E82:  MOVWF  4C
0E84:  RCALL  0828
....................                   lcd_gotoxy(0,1); 
0E86:  CLRF   4D
0E88:  MOVLW  01
0E8A:  MOVWF  4E
0E8C:  RCALL  07C6
....................                   printf(lcd_putc," AD620 Testing..."); //  escribir eso 
0E8E:  MOVLW  14
0E90:  MOVWF  FF6
0E92:  MOVLW  01
0E94:  MOVWF  FF7
0E96:  RCALL  086A
....................                   lcd_gotoxy(0,2); 
0E98:  CLRF   4D
0E9A:  MOVLW  02
0E9C:  MOVWF  4E
0E9E:  RCALL  07C6
....................                   printf(lcd_putc," V:%0.2f. 2>Ret",Lecturaad620); 
0EA0:  MOVLW  26
0EA2:  MOVWF  FF6
0EA4:  MOVLW  01
0EA6:  MOVWF  FF7
0EA8:  MOVLW  03
0EAA:  MOVWF  3F
0EAC:  RCALL  0A12
0EAE:  MOVLW  C9
0EB0:  MOVWF  FE9
0EB2:  MOVFF  3E,42
0EB6:  MOVFF  3D,41
0EBA:  MOVFF  3C,40
0EBE:  MOVFF  3B,3F
0EC2:  MOVLW  02
0EC4:  MOVWF  43
0EC6:  BRA    0AFE
0EC8:  MOVLW  2E
0ECA:  MOVWF  FF6
0ECC:  MOVLW  01
0ECE:  MOVWF  FF7
0ED0:  MOVLW  07
0ED2:  MOVWF  3F
0ED4:  RCALL  0A12
....................                   delay_ms(500); 
0ED6:  MOVLW  02
0ED8:  MOVWF  3F
0EDA:  MOVLW  FA
0EDC:  MOVWF  40
0EDE:  RCALL  088A
0EE0:  DECFSZ 3F,F
0EE2:  BRA    0EDA
....................                   if(Boton()==2){ 
0EE4:  RCALL  08B2
0EE6:  MOVF   01,W
0EE8:  SUBLW  02
0EEA:  BNZ   0F26
....................                      printf(lcd_putc,"\f"); 
0EEC:  MOVLW  0C
0EEE:  MOVWF  4C
0EF0:  RCALL  0828
....................                      lcd_gotoxy(0,1); 
0EF2:  CLRF   4D
0EF4:  MOVLW  01
0EF6:  MOVWF  4E
0EF8:  RCALL  07C6
....................                      printf(lcd_putc," MENU PRINCIPAL"); 
0EFA:  MOVLW  36
0EFC:  MOVWF  FF6
0EFE:  MOVLW  01
0F00:  MOVWF  FF7
0F02:  RCALL  086A
....................                      lcd_gotoxy(0,2); 
0F04:  CLRF   4D
0F06:  MOVLW  02
0F08:  MOVWF  4E
0F0A:  RCALL  07C6
....................                      printf(lcd_putc," 1>AD620 3>NEXT"); 
0F0C:  MOVLW  46
0F0E:  MOVWF  FF6
0F10:  MOVLW  01
0F12:  MOVWF  FF7
0F14:  RCALL  086A
....................                      delay_ms(1000); 
0F16:  MOVLW  04
0F18:  MOVWF  3F
0F1A:  MOVLW  FA
0F1C:  MOVWF  40
0F1E:  RCALL  088A
0F20:  DECFSZ 3F,F
0F22:  BRA    0F1A
....................                      break; 
0F24:  BRA    0F28
....................                   } 
0F26:  BRA    0E04
....................                 }      
....................              } 
....................              if(Boton()==3){ 
0F28:  RCALL  08B2
0F2A:  MOVF   01,W
0F2C:  SUBLW  03
0F2E:  BTFSS  FD8.2
0F30:  GOTO   1AAA
....................                printf(lcd_putc,"\f"); 
0F34:  MOVLW  0C
0F36:  MOVWF  4C
0F38:  RCALL  0828
....................                lcd_gotoxy(0,1); 
0F3A:  CLRF   4D
0F3C:  MOVLW  01
0F3E:  MOVWF  4E
0F40:  RCALL  07C6
....................                printf(lcd_putc," 1>555 2>LM224"); 
0F42:  MOVLW  56
0F44:  MOVWF  FF6
0F46:  MOVLW  01
0F48:  MOVWF  FF7
0F4A:  RCALL  086A
....................                lcd_gotoxy(0,2); 
0F4C:  CLRF   4D
0F4E:  MOVLW  02
0F50:  MOVWF  4E
0F52:  RCALL  07C6
....................                printf(lcd_putc," 4>741 3>Pag.Sig."); 
0F54:  MOVLW  66
0F56:  MOVWF  FF6
0F58:  MOVLW  01
0F5A:  MOVWF  FF7
0F5C:  RCALL  086A
....................                delay_ms(1000); 
0F5E:  MOVLW  04
0F60:  MOVWF  3F
0F62:  MOVLW  FA
0F64:  MOVWF  40
0F66:  RCALL  088A
0F68:  DECFSZ 3F,F
0F6A:  BRA    0F62
....................                while(1){ 
....................                   if(Boton()==1){ 
0F6C:  RCALL  08B2
0F6E:  DECFSZ 01,W
0F70:  BRA    1162
....................                         bandera_prueba_555 = 1; 
0F72:  BSF    2B.0
....................                         SET_TIMER0(valor_recarga); 
0F74:  MOVFF  24,FD7
0F78:  MOVFF  23,FD6
....................                         value=get_timer0(); 
0F7C:  MOVF   FD6,W
0F7E:  MOVWF  2C
0F80:  MOVFF  FD7,2D
0F84:  CLRF   2E
0F86:  CLRF   2F
....................                         ENABLE_INTERRUPTS(INT_RTCC); 
0F88:  BSF    FF2.5
....................                         ENABLE_INTERRUPTS(INT_EXT2);// Habilita las interrupciones externas 
0F8A:  BSF    FF0.4
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla 
0F8C:  MOVLW  0C
0F8E:  MOVWF  4C
0F90:  RCALL  0828
....................                         lcd_gotoxy(0,1); 
0F92:  CLRF   4D
0F94:  MOVLW  01
0F96:  MOVWF  4E
0F98:  RCALL  07C6
....................                         printf(lcd_putc," 555 Testing..."); //  escribir eso 
0F9A:  MOVLW  78
0F9C:  MOVWF  FF6
0F9E:  MOVLW  01
0FA0:  MOVWF  FF7
0FA2:  RCALL  086A
....................                         lcd_gotoxy(0,2); 
0FA4:  CLRF   4D
0FA6:  MOVLW  02
0FA8:  MOVWF  4E
0FAA:  RCALL  07C6
....................                         printf(lcd_putc," 2>Volver"); 
0FAC:  MOVLW  88
0FAE:  MOVWF  FF6
0FB0:  MOVLW  01
0FB2:  MOVWF  FF7
0FB4:  RCALL  086A
....................                              
....................                         while(bandera_prueba_555 == 1) { 
0FB6:  BTFSS  2B.0
0FB8:  BRA    0FF4
....................                            if (Boton() == 2) {                         
0FBA:  RCALL  08B2
0FBC:  MOVF   01,W
0FBE:  SUBLW  02
0FC0:  BNZ   0FF2
....................                               printf(lcd_putc,"\f"); 
0FC2:  MOVLW  0C
0FC4:  MOVWF  4C
0FC6:  RCALL  0828
....................                               lcd_gotoxy(0,1); 
0FC8:  CLRF   4D
0FCA:  MOVLW  01
0FCC:  MOVWF  4E
0FCE:  CALL   07C6
....................                               printf(lcd_putc," 1>555 2>LM224"); 
0FD2:  MOVLW  92
0FD4:  MOVWF  FF6
0FD6:  MOVLW  01
0FD8:  MOVWF  FF7
0FDA:  RCALL  086A
....................                               lcd_gotoxy(0,2); 
0FDC:  CLRF   4D
0FDE:  MOVLW  02
0FE0:  MOVWF  4E
0FE2:  CALL   07C6
....................                               printf(lcd_putc," 4>741 3>Pag.Sig."); 
0FE6:  MOVLW  A2
0FE8:  MOVWF  FF6
0FEA:  MOVLW  01
0FEC:  MOVWF  FF7
0FEE:  RCALL  086A
....................                               break; 
0FF0:  BRA    0FF4
....................                            } 
0FF2:  BRA    0FB6
....................                         } 
....................                          
....................                         if (bandera_prueba_555 == 0) { 
0FF4:  BTFSC  2B.0
0FF6:  BRA    10FC
....................                            if (bandera_estado_555 == 0) { 
0FF8:  BTFSC  2B.1
0FFA:  BRA    1076
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla 
0FFC:  MOVLW  0C
0FFE:  MOVWF  4C
1000:  RCALL  0828
....................                               lcd_gotoxy(0,1); 
1002:  CLRF   4D
1004:  MOVLW  01
1006:  MOVWF  4E
1008:  CALL   07C6
....................                               printf(lcd_putc,"Malo %i", pulsos_555); //  escribir eso 
100C:  MOVLW  B4
100E:  MOVWF  FF6
1010:  MOVLW  01
1012:  MOVWF  FF7
1014:  MOVLW  05
1016:  MOVWF  3F
1018:  RCALL  0A12
101A:  MOVFF  2A,3F
101E:  MOVLW  18
1020:  MOVWF  40
1022:  RCALL  0CA0
....................                               lcd_gotoxy(0,2); 
1024:  CLRF   4D
1026:  MOVLW  02
1028:  MOVWF  4E
102A:  CALL   07C6
....................                               printf(lcd_putc," 2>Volver"); 
102E:  MOVLW  BC
1030:  MOVWF  FF6
1032:  MOVLW  01
1034:  MOVWF  FF7
1036:  RCALL  086A
....................                               while(1) { 
....................                                  if(Boton() == 2) { 
1038:  RCALL  08B2
103A:  MOVF   01,W
103C:  SUBLW  02
103E:  BNZ   1074
....................                                     printf(lcd_putc,"\f"); 
1040:  MOVLW  0C
1042:  MOVWF  4C
1044:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
1048:  CLRF   4D
104A:  MOVLW  01
104C:  MOVWF  4E
104E:  CALL   07C6
....................                                     printf(lcd_putc," 1>555 2>LM224"); 
1052:  MOVLW  C6
1054:  MOVWF  FF6
1056:  MOVLW  01
1058:  MOVWF  FF7
105A:  RCALL  086A
....................                                     lcd_gotoxy(0,2); 
105C:  CLRF   4D
105E:  MOVLW  02
1060:  MOVWF  4E
1062:  CALL   07C6
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig."); 
1066:  MOVLW  D6
1068:  MOVWF  FF6
106A:  MOVLW  01
106C:  MOVWF  FF7
106E:  CALL   086A
....................                                     break; 
1072:  BRA    1076
....................                                  } 
1074:  BRA    1038
....................                               } 
....................                            } 
....................                             
....................                            if (bandera_estado_555 == 1) { 
1076:  BTFSS  2B.1
1078:  BRA    10FC
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla 
107A:  MOVLW  0C
107C:  MOVWF  4C
107E:  CALL   0828
....................                               lcd_gotoxy(0,1); 
1082:  CLRF   4D
1084:  MOVLW  01
1086:  MOVWF  4E
1088:  CALL   07C6
....................                               printf(lcd_putc,"Bueno %i", pulsos_555); //  escribir eso 
108C:  MOVLW  E8
108E:  MOVWF  FF6
1090:  MOVLW  01
1092:  MOVWF  FF7
1094:  MOVLW  06
1096:  MOVWF  3F
1098:  RCALL  0A12
109A:  MOVFF  2A,3F
109E:  MOVLW  18
10A0:  MOVWF  40
10A2:  RCALL  0CA0
....................                               lcd_gotoxy(0,2); 
10A4:  CLRF   4D
10A6:  MOVLW  02
10A8:  MOVWF  4E
10AA:  CALL   07C6
....................                               printf(lcd_putc," 2>Volver"); 
10AE:  MOVLW  F2
10B0:  MOVWF  FF6
10B2:  MOVLW  01
10B4:  MOVWF  FF7
10B6:  CALL   086A
....................                               while(1) { 
....................                                  if(Boton() == 2) { 
10BA:  CALL   08B2
10BE:  MOVF   01,W
10C0:  SUBLW  02
10C2:  BNZ   10FA
....................                                     printf(lcd_putc,"\f"); 
10C4:  MOVLW  0C
10C6:  MOVWF  4C
10C8:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
10CC:  CLRF   4D
10CE:  MOVLW  01
10D0:  MOVWF  4E
10D2:  CALL   07C6
....................                                     printf(lcd_putc," 1>555 2>LM224"); 
10D6:  MOVLW  FC
10D8:  MOVWF  FF6
10DA:  MOVLW  01
10DC:  MOVWF  FF7
10DE:  CALL   086A
....................                                     lcd_gotoxy(0,2); 
10E2:  CLRF   4D
10E4:  MOVLW  02
10E6:  MOVWF  4E
10E8:  CALL   07C6
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig."); 
10EC:  MOVLW  0C
10EE:  MOVWF  FF6
10F0:  MOVLW  02
10F2:  MOVWF  FF7
10F4:  CALL   086A
....................                                     break; 
10F8:  BRA    10FC
....................                                  } 
10FA:  BRA    10BA
....................                               } 
....................                            } 
....................                         } 
....................                         bandera_prueba_555 = 0; 
10FC:  BCF    2B.0
....................                         pulsos_555 = 0; 
10FE:  CLRF   2A
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla 
1100:  MOVLW  0C
1102:  MOVWF  4C
1104:  CALL   0828
....................                         lcd_gotoxy(0,2); 
1108:  CLRF   4D
110A:  MOVLW  02
110C:  MOVWF  4E
110E:  CALL   07C6
....................                         printf(lcd_putc," Regresando..."); 
1112:  MOVLW  1E
1114:  MOVWF  FF6
1116:  MOVLW  02
1118:  MOVWF  FF7
111A:  CALL   086A
....................                         printf(lcd_putc,"\f"); 
111E:  MOVLW  0C
1120:  MOVWF  4C
1122:  CALL   0828
....................                         lcd_gotoxy(0,1); 
1126:  CLRF   4D
1128:  MOVLW  01
112A:  MOVWF  4E
112C:  CALL   07C6
....................                         printf(lcd_putc," 1>555 2>LM224"); 
1130:  MOVLW  2E
1132:  MOVWF  FF6
1134:  MOVLW  02
1136:  MOVWF  FF7
1138:  CALL   086A
....................                         lcd_gotoxy(0,2); 
113C:  CLRF   4D
113E:  MOVLW  02
1140:  MOVWF  4E
1142:  CALL   07C6
....................                         printf(lcd_putc," 4>741 3>Pag.Sig."); 
1146:  MOVLW  3E
1148:  MOVWF  FF6
114A:  MOVLW  02
114C:  MOVWF  FF7
114E:  CALL   086A
....................                         delay_ms(1000); 
1152:  MOVLW  04
1154:  MOVWF  3F
1156:  MOVLW  FA
1158:  MOVWF  40
115A:  CALL   088A
115E:  DECFSZ 3F,F
1160:  BRA    1156
....................                      } 
....................                  
....................                   if(Boton()==2){ 
1162:  CALL   08B2
1166:  MOVF   01,W
1168:  SUBLW  02
116A:  BTFSS  FD8.2
116C:  BRA    1384
....................                         while(1){ 
....................                             output_high(PIN_B7); // Colocar en alto pin B7  
116E:  BCF    F93.7
1170:  BSF    F8A.7
....................                             printf(lcd_putc,"\f"); //Limpiar la pantalla 
1172:  MOVLW  0C
1174:  MOVWF  4C
1176:  CALL   0828
....................                             lcd_gotoxy(0,1); 
117A:  CLRF   4D
117C:  MOVLW  01
117E:  MOVWF  4E
1180:  CALL   07C6
....................                             printf(lcd_putc," LM224 Testing..."); //  escribir eso 
1184:  MOVLW  50
1186:  MOVWF  FF6
1188:  MOVLW  02
118A:  MOVWF  FF7
118C:  CALL   086A
....................                             lcd_gotoxy(0,2); 
1190:  CLRF   4D
1192:  MOVLW  02
1194:  MOVWF  4E
1196:  CALL   07C6
....................                             printf(lcd_putc," 2>Volver"); 
119A:  MOVLW  62
119C:  MOVWF  FF6
119E:  MOVLW  02
11A0:  MOVWF  FF7
11A2:  CALL   086A
....................                             delay_ms(1000); 
11A6:  MOVLW  04
11A8:  MOVWF  3F
11AA:  MOVLW  FA
11AC:  MOVWF  40
11AE:  CALL   088A
11B2:  DECFSZ 3F,F
11B4:  BRA    11AA
....................                             if(input(PIN_C0)==1){ 
11B6:  BSF    F94.0
11B8:  BTFSS  F82.0
11BA:  BRA    1204
....................                                  printf(lcd_putc,"\f"); 
11BC:  MOVLW  0C
11BE:  MOVWF  4C
11C0:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
11C4:  CLRF   4D
11C6:  MOVLW  01
11C8:  MOVWF  4E
11CA:  CALL   07C6
....................                                  printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso 
11CE:  MOVLW  6C
11D0:  MOVWF  FF6
11D2:  MOVLW  02
11D4:  MOVWF  FF7
11D6:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
11DA:  CLRF   4D
11DC:  MOVLW  02
11DE:  MOVWF  4E
11E0:  CALL   07C6
....................                                  printf(lcd_putc," LM224 Testing..."); 
11E4:  MOVLW  7C
11E6:  MOVWF  FF6
11E8:  MOVLW  02
11EA:  MOVWF  FF7
11EC:  CALL   086A
....................                                  delay_ms(500); 
11F0:  MOVLW  02
11F2:  MOVWF  3F
11F4:  MOVLW  FA
11F6:  MOVWF  40
11F8:  CALL   088A
11FC:  DECFSZ 3F,F
11FE:  BRA    11F4
....................                                  opambuenos = opambuenos + 1; 
1200:  MOVLW  01
1202:  ADDWF  30,F
....................                             } 
....................                             if(input(PIN_C1)==1){ 
1204:  BSF    F94.1
1206:  BTFSS  F82.1
1208:  BRA    1252
....................                                  printf(lcd_putc,"\f"); 
120A:  MOVLW  0C
120C:  MOVWF  4C
120E:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
1212:  CLRF   4D
1214:  MOVLW  01
1216:  MOVWF  4E
1218:  CALL   07C6
....................                                  printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso 
121C:  MOVLW  8E
121E:  MOVWF  FF6
1220:  MOVLW  02
1222:  MOVWF  FF7
1224:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
1228:  CLRF   4D
122A:  MOVLW  02
122C:  MOVWF  4E
122E:  CALL   07C6
....................                                  printf(lcd_putc," LM224 Testing..."); 
1232:  MOVLW  9E
1234:  MOVWF  FF6
1236:  MOVLW  02
1238:  MOVWF  FF7
123A:  CALL   086A
....................                                  delay_ms(500); 
123E:  MOVLW  02
1240:  MOVWF  3F
1242:  MOVLW  FA
1244:  MOVWF  40
1246:  CALL   088A
124A:  DECFSZ 3F,F
124C:  BRA    1242
....................                                  opambuenos = opambuenos + 1; 
124E:  MOVLW  01
1250:  ADDWF  30,F
....................                             } 
....................                             if(input(PIN_C2)==1){ 
1252:  BSF    F94.2
1254:  BTFSS  F82.2
1256:  BRA    12A0
....................                                  printf(lcd_putc,"\f"); 
1258:  MOVLW  0C
125A:  MOVWF  4C
125C:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
1260:  CLRF   4D
1262:  MOVLW  01
1264:  MOVWF  4E
1266:  CALL   07C6
....................                                  printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso 
126A:  MOVLW  B0
126C:  MOVWF  FF6
126E:  MOVLW  02
1270:  MOVWF  FF7
1272:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
1276:  CLRF   4D
1278:  MOVLW  02
127A:  MOVWF  4E
127C:  CALL   07C6
....................                                  printf(lcd_putc," LM224 Testing..."); 
1280:  MOVLW  C0
1282:  MOVWF  FF6
1284:  MOVLW  02
1286:  MOVWF  FF7
1288:  CALL   086A
....................                                  delay_ms(500); 
128C:  MOVLW  02
128E:  MOVWF  3F
1290:  MOVLW  FA
1292:  MOVWF  40
1294:  CALL   088A
1298:  DECFSZ 3F,F
129A:  BRA    1290
....................                                  opambuenos = opambuenos + 1; 
129C:  MOVLW  01
129E:  ADDWF  30,F
....................                             }  
....................                             if(input(PIN_C5)==1){ 
12A0:  BSF    F94.5
12A2:  BTFSS  F82.5
12A4:  BRA    12EE
....................                                  printf(lcd_putc,"\f"); 
12A6:  MOVLW  0C
12A8:  MOVWF  4C
12AA:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
12AE:  CLRF   4D
12B0:  MOVLW  01
12B2:  MOVWF  4E
12B4:  CALL   07C6
....................                                  printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso 
12B8:  MOVLW  D2
12BA:  MOVWF  FF6
12BC:  MOVLW  02
12BE:  MOVWF  FF7
12C0:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
12C4:  CLRF   4D
12C6:  MOVLW  02
12C8:  MOVWF  4E
12CA:  CALL   07C6
....................                                  printf(lcd_putc," LM224 Testing..."); 
12CE:  MOVLW  E2
12D0:  MOVWF  FF6
12D2:  MOVLW  02
12D4:  MOVWF  FF7
12D6:  CALL   086A
....................                                  delay_ms(500); 
12DA:  MOVLW  02
12DC:  MOVWF  3F
12DE:  MOVLW  FA
12E0:  MOVWF  40
12E2:  CALL   088A
12E6:  DECFSZ 3F,F
12E8:  BRA    12DE
....................                                  opambuenos = opambuenos + 1; 
12EA:  MOVLW  01
12EC:  ADDWF  30,F
....................                             }    
....................                             if(opambuenos>=1){ 
12EE:  MOVF   30,W
12F0:  SUBLW  00
12F2:  BC    1382
....................                                  output_low(PIN_B7); // Colocar en bajo pin B0 
12F4:  BCF    F93.7
12F6:  BCF    F8A.7
....................                                  printf(lcd_putc,"\f"); //Limpiar la pantalla 
12F8:  MOVLW  0C
12FA:  MOVWF  4C
12FC:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
1300:  CLRF   4D
1302:  MOVLW  01
1304:  MOVWF  4E
1306:  CALL   07C6
....................                                  printf(lcd_putc," Buenos %i", opambuenos); 
130A:  MOVLW  F4
130C:  MOVWF  FF6
130E:  MOVLW  02
1310:  MOVWF  FF7
1312:  MOVLW  08
1314:  MOVWF  3F
1316:  CALL   0A12
131A:  MOVFF  30,3F
131E:  MOVLW  18
1320:  MOVWF  40
1322:  RCALL  0CA0
....................                                  lcd_gotoxy(0,2); 
1324:  CLRF   4D
1326:  MOVLW  02
1328:  MOVWF  4E
132A:  CALL   07C6
....................                                  printf(lcd_putc," Regresando.."); 
132E:  MOVLW  00
1330:  MOVWF  FF6
1332:  MOVLW  03
1334:  MOVWF  FF7
1336:  CALL   086A
....................                                  delay_ms(1000); 
133A:  MOVLW  04
133C:  MOVWF  3F
133E:  MOVLW  FA
1340:  MOVWF  40
1342:  CALL   088A
1346:  DECFSZ 3F,F
1348:  BRA    133E
....................                                  opambuenos = 0; 
134A:  CLRF   30
....................                                  printf(lcd_putc,"\f"); 
134C:  MOVLW  0C
134E:  MOVWF  4C
1350:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
1354:  CLRF   4D
1356:  MOVLW  01
1358:  MOVWF  4E
135A:  CALL   07C6
....................                                  printf(lcd_putc," 1>555 2>LM224"); 
135E:  MOVLW  0E
1360:  MOVWF  FF6
1362:  MOVLW  03
1364:  MOVWF  FF7
1366:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
136A:  CLRF   4D
136C:  MOVLW  02
136E:  MOVWF  4E
1370:  CALL   07C6
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig."); 
1374:  MOVLW  1E
1376:  MOVWF  FF6
1378:  MOVLW  03
137A:  MOVWF  FF7
137C:  CALL   086A
....................                                 break; 
1380:  BRA    1384
....................                             } 
1382:  BRA    116E
....................                         }  
....................                   } 
....................                   if(Boton()==4){ 
1384:  CALL   08B2
1388:  MOVF   01,W
138A:  SUBLW  04
138C:  BTFSS  FD8.2
138E:  BRA    14D0
....................                         while(1){ 
....................                         output_high(PIN_B7); // Colocar en alto pin B0  
1390:  BCF    F93.7
1392:  BSF    F8A.7
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla 
1394:  MOVLW  0C
1396:  MOVWF  4C
1398:  CALL   0828
....................                         lcd_gotoxy(0,1); 
139C:  CLRF   4D
139E:  MOVLW  01
13A0:  MOVWF  4E
13A2:  CALL   07C6
....................                         printf(lcd_putc," 741 Testing..."); //  escribir eso 
13A6:  MOVLW  30
13A8:  MOVWF  FF6
13AA:  MOVLW  03
13AC:  MOVWF  FF7
13AE:  CALL   086A
....................                         lcd_gotoxy(0,2); 
13B2:  CLRF   4D
13B4:  MOVLW  02
13B6:  MOVWF  4E
13B8:  CALL   07C6
....................                         printf(lcd_putc," 2>Volver"); 
13BC:  MOVLW  40
13BE:  MOVWF  FF6
13C0:  MOVLW  03
13C2:  MOVWF  FF7
13C4:  CALL   086A
....................                         delay_ms(1000); 
13C8:  MOVLW  04
13CA:  MOVWF  3F
13CC:  MOVLW  FA
13CE:  MOVWF  40
13D0:  CALL   088A
13D4:  DECFSZ 3F,F
13D6:  BRA    13CC
....................                         if(input(PIN_C1)==1){ 
13D8:  BSF    F94.1
13DA:  BTFSS  F82.1
13DC:  BRA    145C
....................                                  printf(lcd_putc,"\f"); 
13DE:  MOVLW  0C
13E0:  MOVWF  4C
13E2:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
13E6:  CLRF   4D
13E8:  MOVLW  01
13EA:  MOVWF  4E
13EC:  CALL   07C6
....................                                  printf(lcd_putc," AmpOp Bueno!"); //  escribir eso 
13F0:  MOVLW  4A
13F2:  MOVWF  FF6
13F4:  MOVLW  03
13F6:  MOVWF  FF7
13F8:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
13FC:  CLRF   4D
13FE:  MOVLW  02
1400:  MOVWF  4E
1402:  CALL   07C6
....................                                  printf(lcd_putc," Regresando..."); 
1406:  MOVLW  58
1408:  MOVWF  FF6
140A:  MOVLW  03
140C:  MOVWF  FF7
140E:  CALL   086A
....................                                  delay_ms(500); 
1412:  MOVLW  02
1414:  MOVWF  3F
1416:  MOVLW  FA
1418:  MOVWF  40
141A:  CALL   088A
141E:  DECFSZ 3F,F
1420:  BRA    1416
....................                                  printf(lcd_putc,"\f"); 
1422:  MOVLW  0C
1424:  MOVWF  4C
1426:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
142A:  CLRF   4D
142C:  MOVLW  01
142E:  MOVWF  4E
1430:  CALL   07C6
....................                                  printf(lcd_putc," 1>555 2>LM224"); 
1434:  MOVLW  68
1436:  MOVWF  FF6
1438:  MOVLW  03
143A:  MOVWF  FF7
143C:  CALL   086A
....................                                  lcd_gotoxy(0,2); 
1440:  CLRF   4D
1442:  MOVLW  02
1444:  MOVWF  4E
1446:  CALL   07C6
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig."); 
144A:  MOVLW  78
144C:  MOVWF  FF6
144E:  MOVLW  03
1450:  MOVWF  FF7
1452:  CALL   086A
....................                                  output_low(PIN_B7); 
1456:  BCF    F93.7
1458:  BCF    F8A.7
....................                                 break; 
145A:  BRA    14D0
....................                         } 
....................                         if(Boton()==2){ 
145C:  CALL   08B2
1460:  MOVF   01,W
1462:  SUBLW  02
1464:  BNZ   14CE
....................                              output_low(PIN_B7); // Colocar en bajo pin B0 
1466:  BCF    F93.7
1468:  BCF    F8A.7
....................                              printf(lcd_putc,"\f"); //Limpiar la pantalla 
146A:  MOVLW  0C
146C:  MOVWF  4C
146E:  CALL   0828
....................                              lcd_gotoxy(0,2); 
1472:  CLRF   4D
1474:  MOVLW  02
1476:  MOVWF  4E
1478:  CALL   07C6
....................                              printf(lcd_putc," Regresando..."); 
147C:  MOVLW  8A
147E:  MOVWF  FF6
1480:  MOVLW  03
1482:  MOVWF  FF7
1484:  CALL   086A
....................                              delay_ms(500); 
1488:  MOVLW  02
148A:  MOVWF  3F
148C:  MOVLW  FA
148E:  MOVWF  40
1490:  CALL   088A
1494:  DECFSZ 3F,F
1496:  BRA    148C
....................                              printf(lcd_putc,"\f"); 
1498:  MOVLW  0C
149A:  MOVWF  4C
149C:  CALL   0828
....................                              lcd_gotoxy(0,1); 
14A0:  CLRF   4D
14A2:  MOVLW  01
14A4:  MOVWF  4E
14A6:  CALL   07C6
....................                              printf(lcd_putc," 1>555 2>LM224"); 
14AA:  MOVLW  9A
14AC:  MOVWF  FF6
14AE:  MOVLW  03
14B0:  MOVWF  FF7
14B2:  CALL   086A
....................                              lcd_gotoxy(0,2); 
14B6:  CLRF   4D
14B8:  MOVLW  02
14BA:  MOVWF  4E
14BC:  CALL   07C6
....................                              printf(lcd_putc," 4>741 3>Pag.Sig."); 
14C0:  MOVLW  AA
14C2:  MOVWF  FF6
14C4:  MOVLW  03
14C6:  MOVWF  FF7
14C8:  CALL   086A
....................                              break; 
14CC:  BRA    14D0
....................                          } 
14CE:  BRA    1390
....................                         }    
....................                     } 
....................                   if(Boton()==3){ 
14D0:  CALL   08B2
14D4:  MOVF   01,W
14D6:  SUBLW  03
14D8:  BTFSS  FD8.2
14DA:  BRA    1AA6
....................                         while(1){ 
....................                         printf(lcd_putc,"\f"); 
14DC:  MOVLW  0C
14DE:  MOVWF  4C
14E0:  CALL   0828
....................                         lcd_gotoxy(0,1); 
14E4:  CLRF   4D
14E6:  MOVLW  01
14E8:  MOVWF  4E
14EA:  CALL   07C6
....................                         printf(lcd_putc," 1>LM358 2>LM348"); 
14EE:  MOVLW  BC
14F0:  MOVWF  FF6
14F2:  MOVLW  03
14F4:  MOVWF  FF7
14F6:  CALL   086A
....................                         lcd_gotoxy(0,2); 
14FA:  CLRF   4D
14FC:  MOVLW  02
14FE:  MOVWF  4E
1500:  CALL   07C6
....................                         printf(lcd_putc," 4>LM324 3>Pag.Sig."); 
1504:  MOVLW  CE
1506:  MOVWF  FF6
1508:  MOVLW  03
150A:  MOVWF  FF7
150C:  CALL   086A
....................                         delay_ms(1000); 
1510:  MOVLW  04
1512:  MOVWF  3F
1514:  MOVLW  FA
1516:  MOVWF  40
1518:  CALL   088A
151C:  DECFSZ 3F,F
151E:  BRA    1514
....................                         if(Boton()==4){ 
1520:  CALL   08B2
1524:  MOVF   01,W
1526:  SUBLW  04
1528:  BTFSS  FD8.2
152A:  BRA    1744
....................                               while(1){ 
....................                                   output_high(PIN_B7); // Colocar en alto pin B7  
152C:  BCF    F93.7
152E:  BSF    F8A.7
....................                                   printf(lcd_putc,"\f"); //Limpiar la pantalla 
1530:  MOVLW  0C
1532:  MOVWF  4C
1534:  CALL   0828
....................                                   lcd_gotoxy(0,1); 
1538:  CLRF   4D
153A:  MOVLW  01
153C:  MOVWF  4E
153E:  CALL   07C6
....................                                   printf(lcd_putc," LM324 Testing..."); //  escribir eso 
1542:  MOVLW  E2
1544:  MOVWF  FF6
1546:  MOVLW  03
1548:  MOVWF  FF7
154A:  CALL   086A
....................                                   lcd_gotoxy(0,2); 
154E:  CLRF   4D
1550:  MOVLW  02
1552:  MOVWF  4E
1554:  CALL   07C6
....................                                   printf(lcd_putc," 2>Volver"); 
1558:  MOVLW  F4
155A:  MOVWF  FF6
155C:  MOVLW  03
155E:  MOVWF  FF7
1560:  CALL   086A
....................                                   delay_ms(1000); 
1564:  MOVLW  04
1566:  MOVWF  3F
1568:  MOVLW  FA
156A:  MOVWF  40
156C:  CALL   088A
1570:  DECFSZ 3F,F
1572:  BRA    1568
....................                                   if(input(PIN_C0)==1){ 
1574:  BSF    F94.0
1576:  BTFSS  F82.0
1578:  BRA    15C2
....................                                        printf(lcd_putc,"\f"); 
157A:  MOVLW  0C
157C:  MOVWF  4C
157E:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
1582:  CLRF   4D
1584:  MOVLW  01
1586:  MOVWF  4E
1588:  CALL   07C6
....................                                        printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso 
158C:  MOVLW  FE
158E:  MOVWF  FF6
1590:  MOVLW  03
1592:  MOVWF  FF7
1594:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
1598:  CLRF   4D
159A:  MOVLW  02
159C:  MOVWF  4E
159E:  CALL   07C6
....................                                        printf(lcd_putc," LM324 Testing..."); 
15A2:  MOVLW  0E
15A4:  MOVWF  FF6
15A6:  MOVLW  04
15A8:  MOVWF  FF7
15AA:  CALL   086A
....................                                        delay_ms(500); 
15AE:  MOVLW  02
15B0:  MOVWF  3F
15B2:  MOVLW  FA
15B4:  MOVWF  40
15B6:  CALL   088A
15BA:  DECFSZ 3F,F
15BC:  BRA    15B2
....................                                        opambuenos = opambuenos + 1; 
15BE:  MOVLW  01
15C0:  ADDWF  30,F
....................                                   } 
....................                                   if(input(PIN_C1)==1){ 
15C2:  BSF    F94.1
15C4:  BTFSS  F82.1
15C6:  BRA    1610
....................                                        printf(lcd_putc,"\f"); 
15C8:  MOVLW  0C
15CA:  MOVWF  4C
15CC:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
15D0:  CLRF   4D
15D2:  MOVLW  01
15D4:  MOVWF  4E
15D6:  CALL   07C6
....................                                        printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso 
15DA:  MOVLW  20
15DC:  MOVWF  FF6
15DE:  MOVLW  04
15E0:  MOVWF  FF7
15E2:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
15E6:  CLRF   4D
15E8:  MOVLW  02
15EA:  MOVWF  4E
15EC:  CALL   07C6
....................                                        printf(lcd_putc," LM324 Testing..."); 
15F0:  MOVLW  30
15F2:  MOVWF  FF6
15F4:  MOVLW  04
15F6:  MOVWF  FF7
15F8:  CALL   086A
....................                                        delay_ms(500); 
15FC:  MOVLW  02
15FE:  MOVWF  3F
1600:  MOVLW  FA
1602:  MOVWF  40
1604:  CALL   088A
1608:  DECFSZ 3F,F
160A:  BRA    1600
....................                                        opambuenos = opambuenos + 1; 
160C:  MOVLW  01
160E:  ADDWF  30,F
....................                                   } 
....................                                   if(input(PIN_C2)==1){ 
1610:  BSF    F94.2
1612:  BTFSS  F82.2
1614:  BRA    165E
....................                                        printf(lcd_putc,"\f"); 
1616:  MOVLW  0C
1618:  MOVWF  4C
161A:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
161E:  CLRF   4D
1620:  MOVLW  01
1622:  MOVWF  4E
1624:  CALL   07C6
....................                                        printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso 
1628:  MOVLW  42
162A:  MOVWF  FF6
162C:  MOVLW  04
162E:  MOVWF  FF7
1630:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
1634:  CLRF   4D
1636:  MOVLW  02
1638:  MOVWF  4E
163A:  CALL   07C6
....................                                        printf(lcd_putc," LM324 Testing..."); 
163E:  MOVLW  52
1640:  MOVWF  FF6
1642:  MOVLW  04
1644:  MOVWF  FF7
1646:  CALL   086A
....................                                        delay_ms(500); 
164A:  MOVLW  02
164C:  MOVWF  3F
164E:  MOVLW  FA
1650:  MOVWF  40
1652:  CALL   088A
1656:  DECFSZ 3F,F
1658:  BRA    164E
....................                                        opambuenos = opambuenos + 1; 
165A:  MOVLW  01
165C:  ADDWF  30,F
....................                                   }  
....................                                   if(input(PIN_C5)==1){ 
165E:  BSF    F94.5
1660:  BTFSS  F82.5
1662:  BRA    16AC
....................                                        printf(lcd_putc,"\f"); 
1664:  MOVLW  0C
1666:  MOVWF  4C
1668:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
166C:  CLRF   4D
166E:  MOVLW  01
1670:  MOVWF  4E
1672:  CALL   07C6
....................                                        printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso 
1676:  MOVLW  64
1678:  MOVWF  FF6
167A:  MOVLW  04
167C:  MOVWF  FF7
167E:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
1682:  CLRF   4D
1684:  MOVLW  02
1686:  MOVWF  4E
1688:  CALL   07C6
....................                                        printf(lcd_putc," LM324 Testing..."); 
168C:  MOVLW  74
168E:  MOVWF  FF6
1690:  MOVLW  04
1692:  MOVWF  FF7
1694:  CALL   086A
....................                                        delay_ms(500); 
1698:  MOVLW  02
169A:  MOVWF  3F
169C:  MOVLW  FA
169E:  MOVWF  40
16A0:  CALL   088A
16A4:  DECFSZ 3F,F
16A6:  BRA    169C
....................                                        opambuenos = opambuenos + 1; 
16A8:  MOVLW  01
16AA:  ADDWF  30,F
....................                                   }    
....................                                   if(opambuenos>=1){ 
16AC:  MOVF   30,W
16AE:  SUBLW  00
16B0:  BC    1742
....................                                        output_low(PIN_B7); // Colocar en bajo pin B0 
16B2:  BCF    F93.7
16B4:  BCF    F8A.7
....................                                        printf(lcd_putc,"\f"); //Limpiar la pantalla 
16B6:  MOVLW  0C
16B8:  MOVWF  4C
16BA:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
16BE:  CLRF   4D
16C0:  MOVLW  01
16C2:  MOVWF  4E
16C4:  CALL   07C6
....................                                        printf(lcd_putc," Buenos %i", opambuenos); 
16C8:  MOVLW  86
16CA:  MOVWF  FF6
16CC:  MOVLW  04
16CE:  MOVWF  FF7
16D0:  MOVLW  08
16D2:  MOVWF  3F
16D4:  CALL   0A12
16D8:  MOVFF  30,3F
16DC:  MOVLW  18
16DE:  MOVWF  40
16E0:  CALL   0CA0
....................                                        lcd_gotoxy(0,2); 
16E4:  CLRF   4D
16E6:  MOVLW  02
16E8:  MOVWF  4E
16EA:  CALL   07C6
....................                                        printf(lcd_putc," Regresando..."); 
16EE:  MOVLW  92
16F0:  MOVWF  FF6
16F2:  MOVLW  04
16F4:  MOVWF  FF7
16F6:  CALL   086A
....................                                        delay_ms(1000); 
16FA:  MOVLW  04
16FC:  MOVWF  3F
16FE:  MOVLW  FA
1700:  MOVWF  40
1702:  CALL   088A
1706:  DECFSZ 3F,F
1708:  BRA    16FE
....................                                        opambuenos = 0; 
170A:  CLRF   30
....................                                        printf(lcd_putc,"\f"); 
170C:  MOVLW  0C
170E:  MOVWF  4C
1710:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
1714:  CLRF   4D
1716:  MOVLW  01
1718:  MOVWF  4E
171A:  CALL   07C6
....................                                        printf(lcd_putc," 1>LM358 2>LM348"); 
171E:  MOVLW  A2
1720:  MOVWF  FF6
1722:  MOVLW  04
1724:  MOVWF  FF7
1726:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
172A:  CLRF   4D
172C:  MOVLW  02
172E:  MOVWF  4E
1730:  CALL   07C6
....................                                        printf(lcd_putc," 4>LM324 3>Pag.Sig."); 
1734:  MOVLW  B4
1736:  MOVWF  FF6
1738:  MOVLW  04
173A:  MOVWF  FF7
173C:  CALL   086A
....................                                       break; 
1740:  BRA    1744
....................                                   } 
1742:  BRA    152C
....................                               }  
....................                         } 
....................                         if(Boton()==3){ 
1744:  CALL   08B2
1748:  MOVF   01,W
174A:  SUBLW  03
174C:  BTFSS  FD8.2
174E:  BRA    1AA4
....................                            printf(lcd_putc,"\f"); 
1750:  MOVLW  0C
1752:  MOVWF  4C
1754:  CALL   0828
....................                            lcd_gotoxy(0,1); 
1758:  CLRF   4D
175A:  MOVLW  01
175C:  MOVWF  4E
175E:  CALL   07C6
....................                            printf(lcd_putc," 1>NPN 2>PNP"); 
1762:  MOVLW  C8
1764:  MOVWF  FF6
1766:  MOVLW  04
1768:  MOVWF  FF7
176A:  CALL   086A
....................                            lcd_gotoxy(0,2); 
176E:  CLRF   4D
1770:  MOVLW  02
1772:  MOVWF  4E
1774:  CALL   07C6
....................                            printf(lcd_putc," 4>NADA 3>Regresar"); 
1778:  MOVLW  D6
177A:  MOVWF  FF6
177C:  MOVLW  04
177E:  MOVWF  FF7
1780:  CALL   086A
....................                            delay_ms(1000); 
1784:  MOVLW  04
1786:  MOVWF  3F
1788:  MOVLW  FA
178A:  MOVWF  40
178C:  CALL   088A
1790:  DECFSZ 3F,F
1792:  BRA    1788
....................                            while(1){ 
....................                               if(Boton()==1) { 
1794:  CALL   08B2
1798:  DECFSZ 01,W
179A:  BRA    190A
....................                                  NPN_estado = 1; 
179C:  BSF    2B.2
....................                                  printf(lcd_putc,"\f"); 
179E:  MOVLW  0C
17A0:  MOVWF  4C
17A2:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
17A6:  CLRF   4D
17A8:  MOVLW  01
17AA:  MOVWF  4E
17AC:  CALL   07C6
....................                                  printf(lcd_putc,"NPN Testing..."); 
17B0:  MOVLW  EA
17B2:  MOVWF  FF6
17B4:  MOVLW  04
17B6:  MOVWF  FF7
17B8:  CALL   086A
....................                                  delay_ms(1000); 
17BC:  MOVLW  04
17BE:  MOVWF  3F
17C0:  MOVLW  FA
17C2:  MOVWF  40
17C4:  CALL   088A
17C8:  DECFSZ 3F,F
17CA:  BRA    17C0
....................                                  if (input(PIN_C6) == 0) { 
17CC:  BSF    F94.6
17CE:  BTFSC  F82.6
17D0:  BRA    17D4
....................                                     NPN_estado = 0; 
17D2:  BCF    2B.2
....................                                  } 
....................                                  output_high(PIN_D0); 
17D4:  BCF    F95.0
17D6:  BSF    F8C.0
....................                                  delay_ms(1500); 
17D8:  MOVLW  06
17DA:  MOVWF  3F
17DC:  MOVLW  FA
17DE:  MOVWF  40
17E0:  CALL   088A
17E4:  DECFSZ 3F,F
17E6:  BRA    17DC
....................                                  if (input(PIN_C6) == 1) { 
17E8:  BSF    F94.6
17EA:  BTFSS  F82.6
17EC:  BRA    17F0
....................                                     NPN_estado = 0; 
17EE:  BCF    2B.2
....................                                  } 
....................                                  if (NPN_estado == 1) { 
17F0:  BTFSS  2B.2
17F2:  BRA    1846
....................                                     printf(lcd_putc,"\f"); 
17F4:  MOVLW  0C
17F6:  MOVWF  4C
17F8:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
17FC:  CLRF   4D
17FE:  MOVLW  01
1800:  MOVWF  4E
1802:  CALL   07C6
....................                                     printf(lcd_putc,"NPN BUENO"); 
1806:  MOVLW  FA
1808:  MOVWF  FF6
180A:  MOVLW  04
180C:  MOVWF  FF7
180E:  CALL   086A
....................                                     lcd_gotoxy(0,2); 
1812:  CLRF   4D
1814:  MOVLW  02
1816:  MOVWF  4E
1818:  CALL   07C6
....................                                     printf(lcd_putc," 2>Volver"); 
181C:  MOVLW  04
181E:  MOVWF  FF6
1820:  MOVLW  05
1822:  MOVWF  FF7
1824:  CALL   086A
....................                                     delay_ms(1000); 
1828:  MOVLW  04
182A:  MOVWF  3F
182C:  MOVLW  FA
182E:  MOVWF  40
1830:  CALL   088A
1834:  DECFSZ 3F,F
1836:  BRA    182C
....................                                     while(1) { 
....................                                        if( Boton() == 2){ 
1838:  CALL   08B2
183C:  MOVF   01,W
183E:  SUBLW  02
1840:  BNZ   1844
....................                                           break; 
1842:  BRA    1846
....................                                        } 
1844:  BRA    1838
....................                                     } 
....................                                  } 
....................                                  if (NPN_estado == 0) { 
1846:  BTFSC  2B.2
1848:  BRA    188E
....................                                     printf(lcd_putc,"\f"); 
184A:  MOVLW  0C
184C:  MOVWF  4C
184E:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
1852:  CLRF   4D
1854:  MOVLW  01
1856:  MOVWF  4E
1858:  CALL   07C6
....................                                     printf(lcd_putc,"NPN MALO"); 
185C:  MOVLW  0E
185E:  MOVWF  FF6
1860:  MOVLW  05
1862:  MOVWF  FF7
1864:  CALL   086A
....................                                     lcd_gotoxy(0,2); 
1868:  CLRF   4D
186A:  MOVLW  02
186C:  MOVWF  4E
186E:  CALL   07C6
....................                                     printf(lcd_putc," 2>Volver"); 
1872:  MOVLW  18
1874:  MOVWF  FF6
1876:  MOVLW  05
1878:  MOVWF  FF7
187A:  CALL   086A
....................                                     delay_ms(1000); 
187E:  MOVLW  04
1880:  MOVWF  3F
1882:  MOVLW  FA
1884:  MOVWF  40
1886:  CALL   088A
188A:  DECFSZ 3F,F
188C:  BRA    1882
....................                                  } 
....................                                  while(1) { 
....................                                     if(Boton() == 2){ 
188E:  CALL   08B2
1892:  MOVF   01,W
1894:  SUBLW  02
1896:  BNZ   1908
....................                                        NPN_estado == 1; 
....................                                        output_low(PIN_D0); 
1898:  BCF    F95.0
189A:  BCF    F8C.0
....................                                        lcd_gotoxy(0,2); 
189C:  CLRF   4D
189E:  MOVLW  02
18A0:  MOVWF  4E
18A2:  CALL   07C6
....................                                        printf(lcd_putc," Regresando..."); 
18A6:  MOVLW  22
18A8:  MOVWF  FF6
18AA:  MOVLW  05
18AC:  MOVWF  FF7
18AE:  CALL   086A
....................                                        delay_ms(1000); 
18B2:  MOVLW  04
18B4:  MOVWF  3F
18B6:  MOVLW  FA
18B8:  MOVWF  40
18BA:  CALL   088A
18BE:  DECFSZ 3F,F
18C0:  BRA    18B6
....................                                        printf(lcd_putc,"\f"); 
18C2:  MOVLW  0C
18C4:  MOVWF  4C
18C6:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
18CA:  CLRF   4D
18CC:  MOVLW  01
18CE:  MOVWF  4E
18D0:  CALL   07C6
....................                                        printf(lcd_putc," 1>NPN 2>PNP"); 
18D4:  MOVLW  32
18D6:  MOVWF  FF6
18D8:  MOVLW  05
18DA:  MOVWF  FF7
18DC:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
18E0:  CLRF   4D
18E2:  MOVLW  02
18E4:  MOVWF  4E
18E6:  CALL   07C6
....................                                        printf(lcd_putc," 4>NADA 3>Regresar"); 
18EA:  MOVLW  40
18EC:  MOVWF  FF6
18EE:  MOVLW  05
18F0:  MOVWF  FF7
18F2:  CALL   086A
....................                                        delay_ms(1000); 
18F6:  MOVLW  04
18F8:  MOVWF  3F
18FA:  MOVLW  FA
18FC:  MOVWF  40
18FE:  CALL   088A
1902:  DECFSZ 3F,F
1904:  BRA    18FA
....................                                        break; 
1906:  BRA    190A
....................                                     } 
1908:  BRA    188E
....................                                  } 
....................                               } 
....................                                
....................                               if(Boton() == 2) { 
190A:  CALL   08B2
190E:  MOVF   01,W
1910:  SUBLW  02
1912:  BTFSS  FD8.2
1914:  BRA    1A84
....................                                  PNP_estado = 1; 
1916:  BSF    2B.3
....................                                  printf(lcd_putc,"\f"); 
1918:  MOVLW  0C
191A:  MOVWF  4C
191C:  CALL   0828
....................                                  lcd_gotoxy(0,1); 
1920:  CLRF   4D
1922:  MOVLW  01
1924:  MOVWF  4E
1926:  CALL   07C6
....................                                  printf(lcd_putc,"PNP Testing..."); 
192A:  MOVLW  54
192C:  MOVWF  FF6
192E:  MOVLW  05
1930:  MOVWF  FF7
1932:  CALL   086A
....................                                  delay_ms(1000); 
1936:  MOVLW  04
1938:  MOVWF  3F
193A:  MOVLW  FA
193C:  MOVWF  40
193E:  CALL   088A
1942:  DECFSZ 3F,F
1944:  BRA    193A
....................                                  if (input(PIN_C7) == 0) { 
1946:  BSF    F94.7
1948:  BTFSC  F82.7
194A:  BRA    194E
....................                                     PNP_estado = 0; 
194C:  BCF    2B.3
....................                                  } 
....................                                  output_high(PIN_D1); 
194E:  BCF    F95.1
1950:  BSF    F8C.1
....................                                  delay_ms(1500); 
1952:  MOVLW  06
1954:  MOVWF  3F
1956:  MOVLW  FA
1958:  MOVWF  40
195A:  CALL   088A
195E:  DECFSZ 3F,F
1960:  BRA    1956
....................                                  if (input(PIN_C7) == 1) { 
1962:  BSF    F94.7
1964:  BTFSS  F82.7
1966:  BRA    196A
....................                                     PNP_estado = 0; 
1968:  BCF    2B.3
....................                                  } 
....................                                  if (PNP_estado == 1) { 
196A:  BTFSS  2B.3
196C:  BRA    19C0
....................                                     printf(lcd_putc,"\f"); 
196E:  MOVLW  0C
1970:  MOVWF  4C
1972:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
1976:  CLRF   4D
1978:  MOVLW  01
197A:  MOVWF  4E
197C:  CALL   07C6
....................                                     printf(lcd_putc,"PNP BUENO"); 
1980:  MOVLW  64
1982:  MOVWF  FF6
1984:  MOVLW  05
1986:  MOVWF  FF7
1988:  CALL   086A
....................                                     lcd_gotoxy(0,2); 
198C:  CLRF   4D
198E:  MOVLW  02
1990:  MOVWF  4E
1992:  CALL   07C6
....................                                     printf(lcd_putc," 2>Volver"); 
1996:  MOVLW  6E
1998:  MOVWF  FF6
199A:  MOVLW  05
199C:  MOVWF  FF7
199E:  CALL   086A
....................                                     delay_ms(1000); 
19A2:  MOVLW  04
19A4:  MOVWF  3F
19A6:  MOVLW  FA
19A8:  MOVWF  40
19AA:  CALL   088A
19AE:  DECFSZ 3F,F
19B0:  BRA    19A6
....................                                     while(1) { 
....................                                        if( Boton() == 2){ 
19B2:  CALL   08B2
19B6:  MOVF   01,W
19B8:  SUBLW  02
19BA:  BNZ   19BE
....................                                           break; 
19BC:  BRA    19C0
....................                                        } 
19BE:  BRA    19B2
....................                                     } 
....................                                  } 
....................                                  if (PNP_estado == 0) { 
19C0:  BTFSC  2B.3
19C2:  BRA    1A08
....................                                     printf(lcd_putc,"\f"); 
19C4:  MOVLW  0C
19C6:  MOVWF  4C
19C8:  CALL   0828
....................                                     lcd_gotoxy(0,1); 
19CC:  CLRF   4D
19CE:  MOVLW  01
19D0:  MOVWF  4E
19D2:  CALL   07C6
....................                                     printf(lcd_putc,"PNP MALO"); 
19D6:  MOVLW  78
19D8:  MOVWF  FF6
19DA:  MOVLW  05
19DC:  MOVWF  FF7
19DE:  CALL   086A
....................                                     lcd_gotoxy(0,2); 
19E2:  CLRF   4D
19E4:  MOVLW  02
19E6:  MOVWF  4E
19E8:  CALL   07C6
....................                                     printf(lcd_putc," 2>Volver"); 
19EC:  MOVLW  82
19EE:  MOVWF  FF6
19F0:  MOVLW  05
19F2:  MOVWF  FF7
19F4:  CALL   086A
....................                                     delay_ms(1000); 
19F8:  MOVLW  04
19FA:  MOVWF  3F
19FC:  MOVLW  FA
19FE:  MOVWF  40
1A00:  CALL   088A
1A04:  DECFSZ 3F,F
1A06:  BRA    19FC
....................                                  } 
....................                                  while(1) { 
....................                                     if(Boton() == 2){ 
1A08:  CALL   08B2
1A0C:  MOVF   01,W
1A0E:  SUBLW  02
1A10:  BNZ   1A82
....................                                        PNP_estado == 1; 
....................                                        output_low(PIN_D1); 
1A12:  BCF    F95.1
1A14:  BCF    F8C.1
....................                                        lcd_gotoxy(0,2); 
1A16:  CLRF   4D
1A18:  MOVLW  02
1A1A:  MOVWF  4E
1A1C:  CALL   07C6
....................                                        printf(lcd_putc," Regresando..."); 
1A20:  MOVLW  8C
1A22:  MOVWF  FF6
1A24:  MOVLW  05
1A26:  MOVWF  FF7
1A28:  CALL   086A
....................                                        delay_ms(1000); 
1A2C:  MOVLW  04
1A2E:  MOVWF  3F
1A30:  MOVLW  FA
1A32:  MOVWF  40
1A34:  CALL   088A
1A38:  DECFSZ 3F,F
1A3A:  BRA    1A30
....................                                        printf(lcd_putc,"\f"); 
1A3C:  MOVLW  0C
1A3E:  MOVWF  4C
1A40:  CALL   0828
....................                                        lcd_gotoxy(0,1); 
1A44:  CLRF   4D
1A46:  MOVLW  01
1A48:  MOVWF  4E
1A4A:  CALL   07C6
....................                                        printf(lcd_putc," 1>NPN 2>PNP"); 
1A4E:  MOVLW  9C
1A50:  MOVWF  FF6
1A52:  MOVLW  05
1A54:  MOVWF  FF7
1A56:  CALL   086A
....................                                        lcd_gotoxy(0,2); 
1A5A:  CLRF   4D
1A5C:  MOVLW  02
1A5E:  MOVWF  4E
1A60:  CALL   07C6
....................                                        printf(lcd_putc," 4>NADA 3>Regresar"); 
1A64:  MOVLW  AA
1A66:  MOVWF  FF6
1A68:  MOVLW  05
1A6A:  MOVWF  FF7
1A6C:  CALL   086A
....................                                        delay_ms(1000); 
1A70:  MOVLW  04
1A72:  MOVWF  3F
1A74:  MOVLW  FA
1A76:  MOVWF  40
1A78:  CALL   088A
1A7C:  DECFSZ 3F,F
1A7E:  BRA    1A74
....................                                        break; 
1A80:  BRA    1A84
....................                                     } 
1A82:  BRA    1A08
....................                                  } 
....................                               } 
....................                                   
....................                                
....................                                
....................                               if(Boton() == 3) { 
1A84:  CALL   08B2
1A88:  MOVF   01,W
1A8A:  SUBLW  03
1A8C:  BNZ   1AA2
....................                                  delay_ms(500); 
1A8E:  MOVLW  02
1A90:  MOVWF  3F
1A92:  MOVLW  FA
1A94:  MOVWF  40
1A96:  CALL   088A
1A9A:  DECFSZ 3F,F
1A9C:  BRA    1A92
....................                                  goto MENUPRINCIPAL; 
1A9E:  GOTO   0DC6
....................                               } 
1AA2:  BRA    1794
....................                            } 
....................                         } 
1AA4:  BRA    14DC
....................                      } 
....................                   } 
1AA6:  GOTO   0F6C
....................                } 
....................             } 
1AAA:  GOTO   0DFE
....................          } 
1AAE:  GOTO   0DC6
....................       } 
.................... }    
*
1AB2:  SLEEP 

Configuration Fuses:
   Word  1: C93F   PLL12 CPUDIV4 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
