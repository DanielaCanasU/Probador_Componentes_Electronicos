CCS PCH C Compiler, Version 5.112, 29001               17-dic.-24 23:54

               Filename:   C:\Users\gabog\OneDrive\Documentos\GitHub\Probador_Componentes_Electronicos\Probador184550.lst

               ROM used:   7900 bytes (24%)
                           Largest free fragment is 24864
               RAM used:   64 (3%) at main() level
                           91 (4%) worst case
               Stack used: 7 locations (6 in main + 1 for interrupts)
               Stack size: 31

*
0000:  GOTO   0E8A
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00DA
0060:  BTFSS  FF0.4
0062:  GOTO   006C
0066:  BTFSC  FF0.1
0068:  GOTO   00CE
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... #include <18f4550.h>
.................... //////////// Standard Header file for the PIC18F4550 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F4550
00BA:  CLRF   FF7
00BC:  ADDLW  CA
00BE:  MOVWF  FF6
00C0:  MOVLW  00
00C2:  ADDWFC FF7,F
00C4:  TBLRD*+
00C6:  MOVF   FF5,W
00C8:  RETURN 0
00CA:  DATA 28,0C
00CC:  DATA 01,06
*
00F4:  DATA 20,4D
00F6:  DATA 45,4E
00F8:  DATA 55,20
00FA:  DATA 50,52
00FC:  DATA 49,4E
00FE:  DATA 43,49
0100:  DATA 50,41
0102:  DATA 4C,00
0104:  DATA 20,31
0106:  DATA 3E,41
0108:  DATA 44,36
010A:  DATA 32,30
010C:  DATA 20,33
010E:  DATA 3E,4E
0110:  DATA 45,58
0112:  DATA 54,00
0114:  DATA 20,41
0116:  DATA 44,36
0118:  DATA 32,30
011A:  DATA 20,54
011C:  DATA 65,73
011E:  DATA 74,69
0120:  DATA 6E,67
0122:  DATA 2E,2E
0124:  DATA 2E,00
0126:  DATA 20,56
0128:  DATA 3A,25
012A:  DATA 30,2E
012C:  DATA 32,66
012E:  DATA 2E,20
0130:  DATA 32,3E
0132:  DATA 52,65
0134:  DATA 74,00
0136:  DATA 20,4D
0138:  DATA 45,4E
013A:  DATA 55,20
013C:  DATA 50,52
013E:  DATA 49,4E
0140:  DATA 43,49
0142:  DATA 50,41
0144:  DATA 4C,00
0146:  DATA 20,31
0148:  DATA 3E,41
014A:  DATA 44,36
014C:  DATA 32,30
014E:  DATA 20,33
0150:  DATA 3E,4E
0152:  DATA 45,58
0154:  DATA 54,00
0156:  DATA 20,31
0158:  DATA 3E,35
015A:  DATA 35,35
015C:  DATA 20,32
015E:  DATA 3E,4C
0160:  DATA 4D,32
0162:  DATA 32,34
0164:  DATA 00,00
0166:  DATA 20,34
0168:  DATA 3E,37
016A:  DATA 34,31
016C:  DATA 20,33
016E:  DATA 3E,50
0170:  DATA 61,67
0172:  DATA 2E,53
0174:  DATA 69,67
0176:  DATA 2E,00
0178:  DATA 20,35
017A:  DATA 35,35
017C:  DATA 20,54
017E:  DATA 65,73
0180:  DATA 74,69
0182:  DATA 6E,67
0184:  DATA 2E,2E
0186:  DATA 2E,00
0188:  DATA 20,32
018A:  DATA 3E,56
018C:  DATA 6F,6C
018E:  DATA 76,65
0190:  DATA 72,00
0192:  DATA 20,31
0194:  DATA 3E,35
0196:  DATA 35,35
0198:  DATA 20,32
019A:  DATA 3E,4C
019C:  DATA 4D,32
019E:  DATA 32,34
01A0:  DATA 00,00
01A2:  DATA 20,34
01A4:  DATA 3E,37
01A6:  DATA 34,31
01A8:  DATA 20,33
01AA:  DATA 3E,50
01AC:  DATA 61,67
01AE:  DATA 2E,53
01B0:  DATA 69,67
01B2:  DATA 2E,00
01B4:  DATA 4D,61
01B6:  DATA 6C,6F
01B8:  DATA 20,25
01BA:  DATA 69,00
01BC:  DATA 20,32
01BE:  DATA 3E,56
01C0:  DATA 6F,6C
01C2:  DATA 76,65
01C4:  DATA 72,00
01C6:  DATA 20,31
01C8:  DATA 3E,35
01CA:  DATA 35,35
01CC:  DATA 20,32
01CE:  DATA 3E,4C
01D0:  DATA 4D,32
01D2:  DATA 32,34
01D4:  DATA 00,00
01D6:  DATA 20,34
01D8:  DATA 3E,37
01DA:  DATA 34,31
01DC:  DATA 20,33
01DE:  DATA 3E,50
01E0:  DATA 61,67
01E2:  DATA 2E,53
01E4:  DATA 69,67
01E6:  DATA 2E,00
01E8:  DATA 42,75
01EA:  DATA 65,6E
01EC:  DATA 6F,20
01EE:  DATA 25,69
01F0:  DATA 00,00
01F2:  DATA 20,32
01F4:  DATA 3E,56
01F6:  DATA 6F,6C
01F8:  DATA 76,65
01FA:  DATA 72,00
01FC:  DATA 20,31
01FE:  DATA 3E,35
0200:  DATA 35,35
0202:  DATA 20,32
0204:  DATA 3E,4C
0206:  DATA 4D,32
0208:  DATA 32,34
020A:  DATA 00,00
020C:  DATA 20,34
020E:  DATA 3E,37
0210:  DATA 34,31
0212:  DATA 20,33
0214:  DATA 3E,50
0216:  DATA 61,67
0218:  DATA 2E,53
021A:  DATA 69,67
021C:  DATA 2E,00
021E:  DATA 20,52
0220:  DATA 65,67
0222:  DATA 72,65
0224:  DATA 73,61
0226:  DATA 6E,64
0228:  DATA 6F,2E
022A:  DATA 2E,2E
022C:  DATA 00,00
022E:  DATA 20,31
0230:  DATA 3E,35
0232:  DATA 35,35
0234:  DATA 20,32
0236:  DATA 3E,4C
0238:  DATA 4D,32
023A:  DATA 32,34
023C:  DATA 00,00
023E:  DATA 20,34
0240:  DATA 3E,37
0242:  DATA 34,31
0244:  DATA 20,33
0246:  DATA 3E,50
0248:  DATA 61,67
024A:  DATA 2E,53
024C:  DATA 69,67
024E:  DATA 2E,00
0250:  DATA 20,4C
0252:  DATA 4D,32
0254:  DATA 32,34
0256:  DATA 20,54
0258:  DATA 65,73
025A:  DATA 74,69
025C:  DATA 6E,67
025E:  DATA 2E,2E
0260:  DATA 2E,00
0262:  DATA 20,32
0264:  DATA 3E,56
0266:  DATA 6F,6C
0268:  DATA 76,65
026A:  DATA 72,00
026C:  DATA 20,41
026E:  DATA 6D,70
0270:  DATA 4F,70
0272:  DATA 2D,31
0274:  DATA 20,42
0276:  DATA 75,65
0278:  DATA 6E,6F
027A:  DATA 21,00
027C:  DATA 20,4C
027E:  DATA 4D,32
0280:  DATA 32,34
0282:  DATA 20,54
0284:  DATA 65,73
0286:  DATA 74,69
0288:  DATA 6E,67
028A:  DATA 2E,2E
028C:  DATA 2E,00
028E:  DATA 20,41
0290:  DATA 6D,70
0292:  DATA 4F,70
0294:  DATA 2D,32
0296:  DATA 20,42
0298:  DATA 75,65
029A:  DATA 6E,6F
029C:  DATA 21,00
029E:  DATA 20,4C
02A0:  DATA 4D,32
02A2:  DATA 32,34
02A4:  DATA 20,54
02A6:  DATA 65,73
02A8:  DATA 74,69
02AA:  DATA 6E,67
02AC:  DATA 2E,2E
02AE:  DATA 2E,00
02B0:  DATA 20,41
02B2:  DATA 6D,70
02B4:  DATA 4F,70
02B6:  DATA 2D,33
02B8:  DATA 20,42
02BA:  DATA 75,65
02BC:  DATA 6E,6F
02BE:  DATA 21,00
02C0:  DATA 20,4C
02C2:  DATA 4D,32
02C4:  DATA 32,34
02C6:  DATA 20,54
02C8:  DATA 65,73
02CA:  DATA 74,69
02CC:  DATA 6E,67
02CE:  DATA 2E,2E
02D0:  DATA 2E,00
02D2:  DATA 20,41
02D4:  DATA 6D,70
02D6:  DATA 4F,70
02D8:  DATA 2D,34
02DA:  DATA 20,42
02DC:  DATA 75,65
02DE:  DATA 6E,6F
02E0:  DATA 21,00
02E2:  DATA 20,4C
02E4:  DATA 4D,32
02E6:  DATA 32,34
02E8:  DATA 20,54
02EA:  DATA 65,73
02EC:  DATA 74,69
02EE:  DATA 6E,67
02F0:  DATA 2E,2E
02F2:  DATA 2E,00
02F4:  DATA 20,42
02F6:  DATA 75,65
02F8:  DATA 6E,6F
02FA:  DATA 73,20
02FC:  DATA 25,69
02FE:  DATA 00,00
0300:  DATA 20,52
0302:  DATA 65,67
0304:  DATA 72,65
0306:  DATA 73,61
0308:  DATA 6E,64
030A:  DATA 6F,2E
030C:  DATA 2E,00
030E:  DATA 20,31
0310:  DATA 3E,35
0312:  DATA 35,35
0314:  DATA 20,32
0316:  DATA 3E,4C
0318:  DATA 4D,32
031A:  DATA 32,34
031C:  DATA 00,00
031E:  DATA 20,34
0320:  DATA 3E,37
0322:  DATA 34,31
0324:  DATA 20,33
0326:  DATA 3E,50
0328:  DATA 61,67
032A:  DATA 2E,53
032C:  DATA 69,67
032E:  DATA 2E,00
0330:  DATA 20,52
0332:  DATA 65,67
0334:  DATA 72,65
0336:  DATA 73,61
0338:  DATA 6E,64
033A:  DATA 6F,2E
033C:  DATA 2E,2E
033E:  DATA 00,00
0340:  DATA 20,31
0342:  DATA 3E,35
0344:  DATA 35,35
0346:  DATA 20,32
0348:  DATA 3E,4C
034A:  DATA 4D,32
034C:  DATA 32,34
034E:  DATA 00,00
0350:  DATA 20,34
0352:  DATA 3E,37
0354:  DATA 34,31
0356:  DATA 20,33
0358:  DATA 3E,50
035A:  DATA 61,67
035C:  DATA 2E,53
035E:  DATA 69,67
0360:  DATA 2E,00
0362:  DATA 20,37
0364:  DATA 34,31
0366:  DATA 20,54
0368:  DATA 65,73
036A:  DATA 74,69
036C:  DATA 6E,67
036E:  DATA 2E,2E
0370:  DATA 2E,00
0372:  DATA 20,32
0374:  DATA 3E,56
0376:  DATA 6F,6C
0378:  DATA 76,65
037A:  DATA 72,00
037C:  DATA 20,41
037E:  DATA 6D,70
0380:  DATA 4F,70
0382:  DATA 20,42
0384:  DATA 75,65
0386:  DATA 6E,6F
0388:  DATA 21,00
038A:  DATA 20,52
038C:  DATA 65,67
038E:  DATA 72,65
0390:  DATA 73,61
0392:  DATA 6E,64
0394:  DATA 6F,2E
0396:  DATA 2E,2E
0398:  DATA 00,00
039A:  DATA 20,31
039C:  DATA 3E,35
039E:  DATA 35,35
03A0:  DATA 20,32
03A2:  DATA 3E,4C
03A4:  DATA 4D,32
03A6:  DATA 32,34
03A8:  DATA 00,00
03AA:  DATA 20,34
03AC:  DATA 3E,37
03AE:  DATA 34,31
03B0:  DATA 20,33
03B2:  DATA 3E,50
03B4:  DATA 61,67
03B6:  DATA 2E,53
03B8:  DATA 69,67
03BA:  DATA 2E,00
03BC:  DATA 20,52
03BE:  DATA 65,67
03C0:  DATA 72,65
03C2:  DATA 73,61
03C4:  DATA 6E,64
03C6:  DATA 6F,2E
03C8:  DATA 2E,2E
03CA:  DATA 00,00
03CC:  DATA 20,31
03CE:  DATA 3E,35
03D0:  DATA 35,35
03D2:  DATA 20,32
03D4:  DATA 3E,4C
03D6:  DATA 4D,32
03D8:  DATA 32,34
03DA:  DATA 00,00
03DC:  DATA 20,34
03DE:  DATA 3E,37
03E0:  DATA 34,31
03E2:  DATA 20,33
03E4:  DATA 3E,50
03E6:  DATA 61,67
03E8:  DATA 2E,53
03EA:  DATA 69,67
03EC:  DATA 2E,00
03EE:  DATA 20,31
03F0:  DATA 3E,4C
03F2:  DATA 4D,33
03F4:  DATA 35,38
03F6:  DATA 20,32
03F8:  DATA 3E,4C
03FA:  DATA 4D,33
03FC:  DATA 34,38
03FE:  DATA 00,00
0400:  DATA 20,34
0402:  DATA 3E,4C
0404:  DATA 4D,33
0406:  DATA 32,34
0408:  DATA 20,33
040A:  DATA 3E,50
040C:  DATA 61,67
040E:  DATA 2E,53
0410:  DATA 69,67
0412:  DATA 2E,00
0414:  DATA 20,4C
0416:  DATA 4D,33
0418:  DATA 35,38
041A:  DATA 20,54
041C:  DATA 65,73
041E:  DATA 74,69
0420:  DATA 6E,67
0422:  DATA 2E,2E
0424:  DATA 2E,00
0426:  DATA 20,32
0428:  DATA 3E,56
042A:  DATA 6F,6C
042C:  DATA 76,65
042E:  DATA 72,00
0430:  DATA 20,41
0432:  DATA 6D,70
0434:  DATA 4F,70
0436:  DATA 2D,31
0438:  DATA 20,42
043A:  DATA 75,65
043C:  DATA 6E,6F
043E:  DATA 21,00
0440:  DATA 20,4C
0442:  DATA 4D,33
0444:  DATA 35,38
0446:  DATA 20,54
0448:  DATA 65,73
044A:  DATA 74,69
044C:  DATA 6E,67
044E:  DATA 2E,2E
0450:  DATA 2E,00
0452:  DATA 20,41
0454:  DATA 6D,70
0456:  DATA 4F,70
0458:  DATA 2D,32
045A:  DATA 20,42
045C:  DATA 75,65
045E:  DATA 6E,6F
0460:  DATA 21,00
0462:  DATA 20,4C
0464:  DATA 4D,33
0466:  DATA 35,38
0468:  DATA 20,54
046A:  DATA 65,73
046C:  DATA 74,69
046E:  DATA 6E,67
0470:  DATA 2E,2E
0472:  DATA 2E,00
0474:  DATA 20,42
0476:  DATA 75,65
0478:  DATA 6E,6F
047A:  DATA 73,20
047C:  DATA 25,69
047E:  DATA 00,00
0480:  DATA 20,52
0482:  DATA 65,67
0484:  DATA 72,65
0486:  DATA 73,61
0488:  DATA 6E,64
048A:  DATA 6F,2E
048C:  DATA 2E,00
048E:  DATA 20,31
0490:  DATA 3E,4C
0492:  DATA 4D,33
0494:  DATA 35,38
0496:  DATA 20,32
0498:  DATA 3E,4C
049A:  DATA 4D,33
049C:  DATA 34,38
049E:  DATA 00,00
04A0:  DATA 20,34
04A2:  DATA 3E,4C
04A4:  DATA 4D,33
04A6:  DATA 32,34
04A8:  DATA 20,33
04AA:  DATA 3E,50
04AC:  DATA 61,67
04AE:  DATA 2E,53
04B0:  DATA 69,67
04B2:  DATA 2E,00
04B4:  DATA 20,52
04B6:  DATA 65,67
04B8:  DATA 72,65
04BA:  DATA 73,61
04BC:  DATA 6E,64
04BE:  DATA 6F,2E
04C0:  DATA 2E,2E
04C2:  DATA 00,00
04C4:  DATA 20,31
04C6:  DATA 3E,4C
04C8:  DATA 4D,33
04CA:  DATA 35,38
04CC:  DATA 20,32
04CE:  DATA 3E,4C
04D0:  DATA 4D,33
04D2:  DATA 34,38
04D4:  DATA 00,00
04D6:  DATA 20,34
04D8:  DATA 3E,4C
04DA:  DATA 4D,33
04DC:  DATA 32,34
04DE:  DATA 20,33
04E0:  DATA 3E,50
04E2:  DATA 61,67
04E4:  DATA 2E,53
04E6:  DATA 69,67
04E8:  DATA 2E,00
04EA:  DATA 20,4C
04EC:  DATA 4D,33
04EE:  DATA 32,34
04F0:  DATA 20,54
04F2:  DATA 65,73
04F4:  DATA 74,69
04F6:  DATA 6E,67
04F8:  DATA 2E,2E
04FA:  DATA 2E,00
04FC:  DATA 20,32
04FE:  DATA 3E,56
0500:  DATA 6F,6C
0502:  DATA 76,65
0504:  DATA 72,00
0506:  DATA 20,41
0508:  DATA 6D,70
050A:  DATA 4F,70
050C:  DATA 2D,31
050E:  DATA 20,42
0510:  DATA 75,65
0512:  DATA 6E,6F
0514:  DATA 21,00
0516:  DATA 20,4C
0518:  DATA 4D,33
051A:  DATA 32,34
051C:  DATA 20,54
051E:  DATA 65,73
0520:  DATA 74,69
0522:  DATA 6E,67
0524:  DATA 2E,2E
0526:  DATA 2E,00
0528:  DATA 20,41
052A:  DATA 6D,70
052C:  DATA 4F,70
052E:  DATA 2D,32
0530:  DATA 20,42
0532:  DATA 75,65
0534:  DATA 6E,6F
0536:  DATA 21,00
0538:  DATA 20,4C
053A:  DATA 4D,33
053C:  DATA 32,34
053E:  DATA 20,54
0540:  DATA 65,73
0542:  DATA 74,69
0544:  DATA 6E,67
0546:  DATA 2E,2E
0548:  DATA 2E,00
054A:  DATA 20,41
054C:  DATA 6D,70
054E:  DATA 4F,70
0550:  DATA 2D,33
0552:  DATA 20,42
0554:  DATA 75,65
0556:  DATA 6E,6F
0558:  DATA 21,00
055A:  DATA 20,4C
055C:  DATA 4D,33
055E:  DATA 32,34
0560:  DATA 20,54
0562:  DATA 65,73
0564:  DATA 74,69
0566:  DATA 6E,67
0568:  DATA 2E,2E
056A:  DATA 2E,00
056C:  DATA 20,41
056E:  DATA 6D,70
0570:  DATA 4F,70
0572:  DATA 2D,34
0574:  DATA 20,42
0576:  DATA 75,65
0578:  DATA 6E,6F
057A:  DATA 21,00
057C:  DATA 20,4C
057E:  DATA 4D,33
0580:  DATA 32,34
0582:  DATA 20,54
0584:  DATA 65,73
0586:  DATA 74,69
0588:  DATA 6E,67
058A:  DATA 2E,2E
058C:  DATA 2E,00
058E:  DATA 20,42
0590:  DATA 75,65
0592:  DATA 6E,6F
0594:  DATA 73,20
0596:  DATA 25,69
0598:  DATA 00,00
059A:  DATA 20,52
059C:  DATA 65,67
059E:  DATA 72,65
05A0:  DATA 73,61
05A2:  DATA 6E,64
05A4:  DATA 6F,2E
05A6:  DATA 2E,2E
05A8:  DATA 00,00
05AA:  DATA 20,31
05AC:  DATA 3E,4C
05AE:  DATA 4D,33
05B0:  DATA 35,38
05B2:  DATA 20,32
05B4:  DATA 3E,4C
05B6:  DATA 4D,33
05B8:  DATA 34,38
05BA:  DATA 00,00
05BC:  DATA 20,34
05BE:  DATA 3E,4C
05C0:  DATA 4D,33
05C2:  DATA 32,34
05C4:  DATA 20,33
05C6:  DATA 3E,50
05C8:  DATA 61,67
05CA:  DATA 2E,53
05CC:  DATA 69,67
05CE:  DATA 2E,00
05D0:  DATA 20,52
05D2:  DATA 65,67
05D4:  DATA 72,65
05D6:  DATA 73,61
05D8:  DATA 6E,64
05DA:  DATA 6F,2E
05DC:  DATA 2E,2E
05DE:  DATA 00,00
05E0:  DATA 20,31
05E2:  DATA 3E,4C
05E4:  DATA 4D,33
05E6:  DATA 35,38
05E8:  DATA 20,32
05EA:  DATA 3E,4C
05EC:  DATA 4D,33
05EE:  DATA 34,38
05F0:  DATA 00,00
05F2:  DATA 20,34
05F4:  DATA 3E,4C
05F6:  DATA 4D,33
05F8:  DATA 32,34
05FA:  DATA 20,33
05FC:  DATA 3E,50
05FE:  DATA 61,67
0600:  DATA 2E,53
0602:  DATA 69,67
0604:  DATA 2E,00
0606:  DATA 20,31
0608:  DATA 3E,4E
060A:  DATA 50,4E
060C:  DATA 20,32
060E:  DATA 3E,50
0610:  DATA 4E,50
0612:  DATA 00,00
0614:  DATA 20,34
0616:  DATA 3E,4E
0618:  DATA 41,44
061A:  DATA 41,20
061C:  DATA 33,3E
061E:  DATA 52,65
0620:  DATA 67,72
0622:  DATA 65,73
0624:  DATA 61,72
0626:  DATA 00,00
0628:  DATA 4E,50
062A:  DATA 4E,20
062C:  DATA 54,65
062E:  DATA 73,74
0630:  DATA 69,6E
0632:  DATA 67,2E
0634:  DATA 2E,2E
0636:  DATA 00,00
0638:  DATA 4E,50
063A:  DATA 4E,20
063C:  DATA 42,55
063E:  DATA 45,4E
0640:  DATA 4F,00
0642:  DATA 20,32
0644:  DATA 3E,56
0646:  DATA 6F,6C
0648:  DATA 76,65
064A:  DATA 72,00
064C:  DATA 4E,50
064E:  DATA 4E,20
0650:  DATA 4D,41
0652:  DATA 4C,4F
0654:  DATA 00,00
0656:  DATA 20,32
0658:  DATA 3E,56
065A:  DATA 6F,6C
065C:  DATA 76,65
065E:  DATA 72,00
0660:  DATA 20,52
0662:  DATA 65,67
0664:  DATA 72,65
0666:  DATA 73,61
0668:  DATA 6E,64
066A:  DATA 6F,2E
066C:  DATA 2E,2E
066E:  DATA 00,00
0670:  DATA 20,31
0672:  DATA 3E,4E
0674:  DATA 50,4E
0676:  DATA 20,32
0678:  DATA 3E,50
067A:  DATA 4E,50
067C:  DATA 00,00
067E:  DATA 20,34
0680:  DATA 3E,4E
0682:  DATA 41,44
0684:  DATA 41,20
0686:  DATA 33,3E
0688:  DATA 52,65
068A:  DATA 67,72
068C:  DATA 65,73
068E:  DATA 61,72
0690:  DATA 00,00
0692:  DATA 50,4E
0694:  DATA 50,20
0696:  DATA 54,65
0698:  DATA 73,74
069A:  DATA 69,6E
069C:  DATA 67,2E
069E:  DATA 2E,2E
06A0:  DATA 00,00
06A2:  DATA 50,4E
06A4:  DATA 50,20
06A6:  DATA 42,55
06A8:  DATA 45,4E
06AA:  DATA 4F,00
06AC:  DATA 20,32
06AE:  DATA 3E,56
06B0:  DATA 6F,6C
06B2:  DATA 76,65
06B4:  DATA 72,00
06B6:  DATA 50,4E
06B8:  DATA 50,20
06BA:  DATA 4D,41
06BC:  DATA 4C,4F
06BE:  DATA 00,00
06C0:  DATA 20,32
06C2:  DATA 3E,56
06C4:  DATA 6F,6C
06C6:  DATA 76,65
06C8:  DATA 72,00
06CA:  DATA 20,52
06CC:  DATA 65,67
06CE:  DATA 72,65
06D0:  DATA 73,61
06D2:  DATA 6E,64
06D4:  DATA 6F,2E
06D6:  DATA 2E,2E
06D8:  DATA 00,00
06DA:  DATA 20,31
06DC:  DATA 3E,4E
06DE:  DATA 50,4E
06E0:  DATA 20,32
06E2:  DATA 3E,50
06E4:  DATA 4E,50
06E6:  DATA 00,00
06E8:  DATA 20,34
06EA:  DATA 3E,4E
06EC:  DATA 41,44
06EE:  DATA 41,20
06F0:  DATA 33,3E
06F2:  DATA 52,65
06F4:  DATA 67,72
06F6:  DATA 65,73
06F8:  DATA 61,72
06FA:  DATA 00,00
*
09AA:  TBLRD*+
09AC:  MOVF   FF5,F
09AE:  BZ    09C8
09B0:  MOVFF  FF6,3F
09B4:  MOVFF  FF7,40
09B8:  MOVFF  FF5,4C
09BC:  RCALL  0968
09BE:  MOVFF  3F,FF6
09C2:  MOVFF  40,FF7
09C6:  BRA    09AA
09C8:  RETURN 0
*
0A28:  MOVLW  8E
0A2A:  MOVWF  00
0A2C:  MOVFF  40,01
0A30:  MOVFF  3F,02
0A34:  CLRF   03
0A36:  MOVF   01,F
0A38:  BNZ   0A4C
0A3A:  MOVFF  02,01
0A3E:  CLRF   02
0A40:  MOVLW  08
0A42:  SUBWF  00,F
0A44:  MOVF   01,F
0A46:  BNZ   0A4C
0A48:  CLRF   00
0A4A:  BRA    0A5C
0A4C:  BCF    FD8.0
0A4E:  BTFSC  01.7
0A50:  BRA    0A5A
0A52:  RLCF   02,F
0A54:  RLCF   01,F
0A56:  DECF   00,F
0A58:  BRA    0A4C
0A5A:  BCF    01.7
0A5C:  GOTO   0F78 (RETURN)
0A60:  MOVF   4C,W
0A62:  BTFSC  FD8.2
0A64:  BRA    0B48
0A66:  MOVWF  00
0A68:  MOVF   50,W
0A6A:  BTFSC  FD8.2
0A6C:  BRA    0B48
0A6E:  ADDWF  00,F
0A70:  BNC   0A7A
0A72:  MOVLW  81
0A74:  ADDWF  00,F
0A76:  BC    0B48
0A78:  BRA    0A82
0A7A:  MOVLW  7F
0A7C:  SUBWF  00,F
0A7E:  BNC   0B48
0A80:  BZ    0B48
0A82:  MOVFF  4D,54
0A86:  MOVF   51,W
0A88:  XORWF  54,F
0A8A:  BSF    4D.7
0A8C:  BSF    51.7
0A8E:  MOVF   4F,W
0A90:  MULWF  53
0A92:  MOVFF  FF4,56
0A96:  MOVF   4E,W
0A98:  MULWF  52
0A9A:  MOVFF  FF4,03
0A9E:  MOVFF  FF3,55
0AA2:  MULWF  53
0AA4:  MOVF   FF3,W
0AA6:  ADDWF  56,F
0AA8:  MOVF   FF4,W
0AAA:  ADDWFC 55,F
0AAC:  MOVLW  00
0AAE:  ADDWFC 03,F
0AB0:  MOVF   4F,W
0AB2:  MULWF  52
0AB4:  MOVF   FF3,W
0AB6:  ADDWF  56,F
0AB8:  MOVF   FF4,W
0ABA:  ADDWFC 55,F
0ABC:  MOVLW  00
0ABE:  CLRF   02
0AC0:  ADDWFC 03,F
0AC2:  ADDWFC 02,F
0AC4:  MOVF   4D,W
0AC6:  MULWF  53
0AC8:  MOVF   FF3,W
0ACA:  ADDWF  55,F
0ACC:  MOVF   FF4,W
0ACE:  ADDWFC 03,F
0AD0:  MOVLW  00
0AD2:  ADDWFC 02,F
0AD4:  MOVF   4D,W
0AD6:  MULWF  52
0AD8:  MOVF   FF3,W
0ADA:  ADDWF  03,F
0ADC:  MOVF   FF4,W
0ADE:  ADDWFC 02,F
0AE0:  MOVLW  00
0AE2:  CLRF   01
0AE4:  ADDWFC 01,F
0AE6:  MOVF   4F,W
0AE8:  MULWF  51
0AEA:  MOVF   FF3,W
0AEC:  ADDWF  55,F
0AEE:  MOVF   FF4,W
0AF0:  ADDWFC 03,F
0AF2:  MOVLW  00
0AF4:  ADDWFC 02,F
0AF6:  ADDWFC 01,F
0AF8:  MOVF   4E,W
0AFA:  MULWF  51
0AFC:  MOVF   FF3,W
0AFE:  ADDWF  03,F
0B00:  MOVF   FF4,W
0B02:  ADDWFC 02,F
0B04:  MOVLW  00
0B06:  ADDWFC 01,F
0B08:  MOVF   4D,W
0B0A:  MULWF  51
0B0C:  MOVF   FF3,W
0B0E:  ADDWF  02,F
0B10:  MOVF   FF4,W
0B12:  ADDWFC 01,F
0B14:  INCF   00,F
0B16:  BTFSC  01.7
0B18:  BRA    0B24
0B1A:  RLCF   55,F
0B1C:  RLCF   03,F
0B1E:  RLCF   02,F
0B20:  RLCF   01,F
0B22:  DECF   00,F
0B24:  MOVLW  00
0B26:  BTFSS  55.7
0B28:  BRA    0B3E
0B2A:  INCF   03,F
0B2C:  ADDWFC 02,F
0B2E:  ADDWFC 01,F
0B30:  MOVF   01,W
0B32:  BNZ   0B3E
0B34:  MOVF   02,W
0B36:  BNZ   0B3E
0B38:  MOVF   03,W
0B3A:  BNZ   0B3E
0B3C:  INCF   00,F
0B3E:  BTFSC  54.7
0B40:  BSF    01.7
0B42:  BTFSS  54.7
0B44:  BCF    01.7
0B46:  BRA    0B50
0B48:  CLRF   00
0B4A:  CLRF   01
0B4C:  CLRF   02
0B4E:  CLRF   03
0B50:  RETURN 0
0B52:  TBLRD*+
0B54:  MOVFF  FF6,40
0B58:  MOVFF  FF7,41
0B5C:  MOVFF  FF5,4C
0B60:  RCALL  0968
0B62:  MOVFF  40,FF6
0B66:  MOVFF  41,FF7
0B6A:  DECFSZ 3F,F
0B6C:  BRA    0B52
0B6E:  RETURN 0
0B70:  MOVF   4C,W
0B72:  SUBLW  B6
0B74:  MOVWF  4C
0B76:  CLRF   03
0B78:  MOVFF  4D,50
0B7C:  BSF    4D.7
0B7E:  BCF    FD8.0
0B80:  RRCF   4D,F
0B82:  RRCF   4E,F
0B84:  RRCF   4F,F
0B86:  RRCF   03,F
0B88:  RRCF   02,F
0B8A:  RRCF   01,F
0B8C:  RRCF   00,F
0B8E:  DECFSZ 4C,F
0B90:  BRA    0B7E
0B92:  BTFSS  50.7
0B94:  BRA    0BAC
0B96:  COMF   00,F
0B98:  COMF   01,F
0B9A:  COMF   02,F
0B9C:  COMF   03,F
0B9E:  INCF   00,F
0BA0:  BTFSC  FD8.2
0BA2:  INCF   01,F
0BA4:  BTFSC  FD8.2
0BA6:  INCF   02,F
0BA8:  BTFSC  FD8.2
0BAA:  INCF   03,F
0BAC:  GOTO   0C8C (RETURN)
0BB0:  BTFSC  FD8.1
0BB2:  BRA    0BBA
0BB4:  CLRF   FEA
0BB6:  MOVLW  54
0BB8:  MOVWF  FE9
0BBA:  CLRF   00
0BBC:  CLRF   01
0BBE:  CLRF   02
0BC0:  CLRF   03
0BC2:  CLRF   54
0BC4:  CLRF   55
0BC6:  CLRF   56
0BC8:  CLRF   57
0BCA:  MOVF   53,W
0BCC:  IORWF  52,W
0BCE:  IORWF  51,W
0BD0:  IORWF  50,W
0BD2:  BZ    0C2C
0BD4:  MOVLW  20
0BD6:  MOVWF  58
0BD8:  BCF    FD8.0
0BDA:  RLCF   4C,F
0BDC:  RLCF   4D,F
0BDE:  RLCF   4E,F
0BE0:  RLCF   4F,F
0BE2:  RLCF   54,F
0BE4:  RLCF   55,F
0BE6:  RLCF   56,F
0BE8:  RLCF   57,F
0BEA:  MOVF   53,W
0BEC:  SUBWF  57,W
0BEE:  BNZ   0C00
0BF0:  MOVF   52,W
0BF2:  SUBWF  56,W
0BF4:  BNZ   0C00
0BF6:  MOVF   51,W
0BF8:  SUBWF  55,W
0BFA:  BNZ   0C00
0BFC:  MOVF   50,W
0BFE:  SUBWF  54,W
0C00:  BNC   0C20
0C02:  MOVF   50,W
0C04:  SUBWF  54,F
0C06:  MOVF   51,W
0C08:  BTFSS  FD8.0
0C0A:  INCFSZ 51,W
0C0C:  SUBWF  55,F
0C0E:  MOVF   52,W
0C10:  BTFSS  FD8.0
0C12:  INCFSZ 52,W
0C14:  SUBWF  56,F
0C16:  MOVF   53,W
0C18:  BTFSS  FD8.0
0C1A:  INCFSZ 53,W
0C1C:  SUBWF  57,F
0C1E:  BSF    FD8.0
0C20:  RLCF   00,F
0C22:  RLCF   01,F
0C24:  RLCF   02,F
0C26:  RLCF   03,F
0C28:  DECFSZ 58,F
0C2A:  BRA    0BD8
0C2C:  MOVFF  54,FEF
0C30:  MOVFF  55,FEC
0C34:  MOVFF  56,FEC
0C38:  MOVFF  57,FEC
0C3C:  RETURN 0
0C3E:  MOVF   FE9,W
0C40:  MOVWF  44
0C42:  MOVF   43,W
0C44:  MOVWF  46
0C46:  BZ    0C7A
0C48:  MOVFF  42,4F
0C4C:  MOVFF  41,4E
0C50:  MOVFF  40,4D
0C54:  MOVFF  3F,4C
0C58:  CLRF   53
0C5A:  CLRF   52
0C5C:  MOVLW  20
0C5E:  MOVWF  51
0C60:  MOVLW  82
0C62:  MOVWF  50
0C64:  RCALL  0A60
0C66:  MOVFF  03,42
0C6A:  MOVFF  02,41
0C6E:  MOVFF  01,40
0C72:  MOVFF  00,3F
0C76:  DECFSZ 46,F
0C78:  BRA    0C48
0C7A:  MOVFF  42,4F
0C7E:  MOVFF  41,4E
0C82:  MOVFF  40,4D
0C86:  MOVFF  3F,4C
0C8A:  BRA    0B70
0C8C:  MOVFF  03,42
0C90:  MOVFF  02,41
0C94:  MOVFF  01,40
0C98:  MOVFF  00,3F
0C9C:  BTFSS  42.7
0C9E:  BRA    0CBA
0CA0:  DECF   44,F
0CA2:  BSF    44.5
0CA4:  COMF   3F,F
0CA6:  COMF   40,F
0CA8:  COMF   41,F
0CAA:  COMF   42,F
0CAC:  INCF   3F,F
0CAE:  BTFSC  FD8.2
0CB0:  INCF   40,F
0CB2:  BTFSC  FD8.2
0CB4:  INCF   41,F
0CB6:  BTFSC  FD8.2
0CB8:  INCF   42,F
0CBA:  MOVLW  3B
0CBC:  MOVWF  4B
0CBE:  MOVLW  9A
0CC0:  MOVWF  4A
0CC2:  MOVLW  CA
0CC4:  MOVWF  49
0CC6:  CLRF   48
0CC8:  MOVLW  0A
0CCA:  MOVWF  46
0CCC:  MOVF   43,W
0CCE:  BTFSC  FD8.2
0CD0:  INCF   44,F
0CD2:  BSF    FD8.1
0CD4:  CLRF   FEA
0CD6:  MOVLW  3F
0CD8:  MOVWF  FE9
0CDA:  MOVFF  42,4F
0CDE:  MOVFF  41,4E
0CE2:  MOVFF  40,4D
0CE6:  MOVFF  3F,4C
0CEA:  MOVFF  4B,53
0CEE:  MOVFF  4A,52
0CF2:  MOVFF  49,51
0CF6:  MOVFF  48,50
0CFA:  RCALL  0BB0
0CFC:  MOVF   01,W
0CFE:  MOVF   00,F
0D00:  BNZ   0D20
0D02:  INCF   43,W
0D04:  SUBWF  46,W
0D06:  BZ    0D20
0D08:  MOVF   44,W
0D0A:  BZ    0D24
0D0C:  ANDLW  0F
0D0E:  SUBWF  46,W
0D10:  BZ    0D14
0D12:  BC    0D82
0D14:  BTFSC  44.7
0D16:  BRA    0D82
0D18:  BTFSC  44.6
0D1A:  BRA    0D24
0D1C:  MOVLW  20
0D1E:  BRA    0D7A
0D20:  MOVLW  20
0D22:  ANDWF  44,F
0D24:  BTFSS  44.5
0D26:  BRA    0D40
0D28:  BCF    44.5
0D2A:  MOVF   43,W
0D2C:  BTFSS  FD8.2
0D2E:  DECF   44,F
0D30:  MOVF   00,W
0D32:  MOVWF  44
0D34:  MOVLW  2D
0D36:  MOVWF  4C
0D38:  RCALL  0968
0D3A:  MOVF   44,W
0D3C:  MOVWF  00
0D3E:  CLRF   44
0D40:  MOVF   43,W
0D42:  SUBWF  46,W
0D44:  BNZ   0D5A
0D46:  MOVF   00,W
0D48:  MOVWF  44
0D4A:  MOVLW  2E
0D4C:  MOVWF  4C
0D4E:  RCALL  0968
0D50:  MOVF   44,W
0D52:  MOVWF  00
0D54:  MOVLW  20
0D56:  ANDWF  44,F
0D58:  MOVLW  00
0D5A:  MOVLW  30
0D5C:  BTFSS  44.5
0D5E:  BRA    0D7A
0D60:  BCF    44.5
0D62:  MOVF   43,W
0D64:  BTFSS  FD8.2
0D66:  DECF   44,F
0D68:  MOVF   00,W
0D6A:  MOVWF  44
0D6C:  MOVLW  2D
0D6E:  MOVWF  4C
0D70:  RCALL  0968
0D72:  MOVF   44,W
0D74:  MOVWF  00
0D76:  CLRF   44
0D78:  MOVLW  30
0D7A:  ADDWF  00,F
0D7C:  MOVFF  00,4C
0D80:  RCALL  0968
0D82:  BCF    FD8.1
0D84:  MOVFF  4B,4F
0D88:  MOVFF  4A,4E
0D8C:  MOVFF  49,4D
0D90:  MOVFF  48,4C
0D94:  CLRF   53
0D96:  CLRF   52
0D98:  CLRF   51
0D9A:  MOVLW  0A
0D9C:  MOVWF  50
0D9E:  RCALL  0BB0
0DA0:  MOVFF  03,4B
0DA4:  MOVFF  02,4A
0DA8:  MOVFF  01,49
0DAC:  MOVFF  00,48
0DB0:  DECFSZ 46,F
0DB2:  BRA    0CD2
0DB4:  GOTO   1012 (RETURN)
0DB8:  MOVF   46,W
0DBA:  CLRF   01
0DBC:  SUBWF  45,W
0DBE:  BC    0DC6
0DC0:  MOVFF  45,00
0DC4:  BRA    0DDE
0DC6:  CLRF   00
0DC8:  MOVLW  08
0DCA:  MOVWF  47
0DCC:  RLCF   45,F
0DCE:  RLCF   00,F
0DD0:  MOVF   46,W
0DD2:  SUBWF  00,W
0DD4:  BTFSC  FD8.0
0DD6:  MOVWF  00
0DD8:  RLCF   01,F
0DDA:  DECFSZ 47,F
0DDC:  BRA    0DCC
0DDE:  RETURN 0
0DE0:  MOVLW  20
0DE2:  BTFSS  40.4
0DE4:  MOVLW  30
0DE6:  MOVWF  41
0DE8:  MOVFF  3F,00
0DEC:  BTFSS  3F.7
0DEE:  BRA    0E00
0DF0:  COMF   00,F
0DF2:  INCF   00,F
0DF4:  MOVFF  00,3F
0DF8:  MOVLW  2D
0DFA:  MOVWF  41
0DFC:  BSF    40.7
0DFE:  BSF    40.0
0E00:  MOVF   01,W
0E02:  MOVFF  3F,45
0E06:  MOVLW  64
0E08:  MOVWF  46
0E0A:  RCALL  0DB8
0E0C:  MOVFF  00,3F
0E10:  MOVLW  30
0E12:  ADDWF  01,W
0E14:  MOVWF  42
0E16:  MOVFF  3F,45
0E1A:  MOVLW  0A
0E1C:  MOVWF  46
0E1E:  RCALL  0DB8
0E20:  MOVLW  30
0E22:  ADDWF  00,W
0E24:  MOVWF  44
0E26:  MOVLW  30
0E28:  ADDWF  01,W
0E2A:  MOVWF  43
0E2C:  MOVFF  41,00
0E30:  MOVLW  30
0E32:  SUBWF  42,W
0E34:  BZ    0E3E
0E36:  BSF    40.1
0E38:  BTFSC  40.7
0E3A:  BSF    40.2
0E3C:  BRA    0E62
0E3E:  MOVFF  41,42
0E42:  MOVLW  20
0E44:  MOVWF  41
0E46:  MOVLW  30
0E48:  SUBWF  43,W
0E4A:  BZ    0E54
0E4C:  BSF    40.0
0E4E:  BTFSC  40.7
0E50:  BSF    40.1
0E52:  BRA    0E62
0E54:  BTFSS  FD8.2
0E56:  BSF    40.0
0E58:  BNZ   0E62
0E5A:  MOVFF  42,43
0E5E:  MOVLW  20
0E60:  MOVWF  42
0E62:  BTFSC  40.2
0E64:  BRA    0E70
0E66:  BTFSC  40.1
0E68:  BRA    0E76
0E6A:  BTFSC  40.0
0E6C:  BRA    0E7C
0E6E:  BRA    0E82
0E70:  MOVFF  41,4C
0E74:  RCALL  0968
0E76:  MOVFF  42,4C
0E7A:  RCALL  0968
0E7C:  MOVFF  43,4C
0E80:  RCALL  0968
0E82:  MOVFF  44,4C
0E86:  RCALL  0968
0E88:  RETURN 0
.................... 
.................... #list
.................... 
.................... #device ADC = 10
.................... #use i2c(Master,Fast=100000, sda=PIN_B0, scl=PIN_B1,force_sw)
*
0724:  MOVLW  08
0726:  MOVWF  01
0728:  NOP   
072A:  BCF    F8A.1
072C:  BCF    F93.1
072E:  NOP   
0730:  RLCF   5A,F
0732:  BCF    F8A.0
0734:  BTFSC  FD8.0
0736:  BSF    F93.0
0738:  BTFSS  FD8.0
073A:  BCF    F93.0
073C:  BSF    F93.1
073E:  BTFSS  F81.1
0740:  BRA    073E
0742:  DECFSZ 01,F
0744:  BRA    0728
0746:  NOP   
0748:  BCF    F8A.1
074A:  BCF    F93.1
074C:  NOP   
074E:  BSF    F93.0
0750:  NOP   
0752:  NOP   
0754:  BSF    F93.1
0756:  BTFSS  F81.1
0758:  BRA    0756
075A:  CLRF   01
075C:  NOP   
075E:  BTFSC  F81.0
0760:  BSF    01.0
0762:  BCF    F8A.1
0764:  BCF    F93.1
0766:  BCF    F8A.0
0768:  BCF    F93.0
076A:  RETURN 0
.................... #include <i2c_Flex_LCD.c>
.................... //----------------------------------------------------------------------------- 
.................... // Title:         i2c_Flex_LCD 
.................... // Description:   Driver for common LCD with 1/2/3 or 4 rows by 1...20 columns 
.................... //                using PCF8574T interface board with I2C protocol. 
.................... // Date:          Nov-2013 
.................... // Ver.Rev.:      1.1 
.................... // Author:        Hugo Silva (sergio-hugo@bol.com.br) #Based on the routines of 
.................... //                "20X4_LCD_I2C_DRIVER.h" from Pumrin S. and "lcd4_i2c.c" from XP8100 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // lcd_init() Must be called before any other function. 
.................... // 
.................... // lcd_putc(c) Will display c on the next position of the LCD. 
.................... //  
.................... //     \f Clear LCD display 
.................... //     \n Set write position on next lcd line 
.................... //     \b LCD backspace 
.................... //     lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1) 
.................... // 
.................... // lcd_backlight_led(ON)/lcd_backlight_led(OFF) = Turn ON/OFF LCD Backlight LED 
.................... // 
.................... //----------------------------------------------------------------------------- 
.................... // LCD pins D0-D3 are not used. 
.................... //----------------------------------------------------------------------------- 
.................... // 
.................... // Comment   : Control of a compatible LCD (1...4 rows by 1...4 columns) from 
.................... //              a bus I2C with an EXPANDER of I/O with connection I2C. 
.................... //              The tests of these routines have been programmed using the IC 
.................... //              Phillips PCF8574T. I've used 4 bits mode programming. 
.................... //              The 8 bits mode programming is possible if you use 2 x PCF8574T. 
.................... //              RW Pin is not being used. 
.................... // 
.................... // As defined in the following structure the pin connection is as follows: 
.................... // 
.................... //  PCF8574P     LCD 
.................... //  ========     ====== 
.................... //     P0        RS 
.................... //     P1        RW    (Not used!) 
.................... //     P2        Enable  
.................... //     P3        Led Backlight 
.................... //     P4        D4 
.................... //     P5        D5 
.................... //     P6        D6 
.................... //     P7        D7 
.................... // 
.................... //  The SCL and SDA pins should be pull-up resistor as shown below: 
.................... // 
.................... //             +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SDA pin  
.................... //(SDA)                      
.................... //              +5v 
.................... //               | 
.................... //               < 
.................... //               > 4.7K        
.................... //               <          
.................... //To PIC         |          To i2c slave 
.................... //pin xx ------------------ SCL pin  
.................... //(SCL) 
.................... // 
.................... //To PIC                    To i2c slave 
.................... //Vss pin ----------------- Vss or ground pin  
.................... //                | 
.................... //              ----- 
.................... //               ---  Ground 
.................... //                -  
.................... //  
.................... // THIS DOCUMENT IS PROVIDED TO THE USER "AS IS" 
.................... //----------------------------------------------------------------------------- 
.................... byte LCD_ADDR ;//             0x4E        //I2C slave address for LCD module 
.................... byte lcd_total_rows ;//       2           //Number of rows: 1,2,3 or 4 
.................... byte lcd_total_columns ;//    16          //Number of columns: 1...20   
.................... 
.................... #define RS                    0b00000001  //P0 - PCF8574T Pin connected to RS 
.................... #define RW                    0b00000010  //P1 - PCF8574T Pin connected to RW 
.................... #define ENABLE                0b00000100  //P2 - PCF8574T Pin connected to EN 
.................... #define LCD_BACKLIGHT         0b00001000  //P3 - PCF8574T Pin connected to BACKLIGHT LED 
.................... 
.................... #define addr_row_one          0x00        //LCD RAM address for row 1 
.................... #define addr_row_two          0x40        //LCD RAM address for row 2 
.................... #define addr_row_three        0x14        //LCD RAM address for row 3 
.................... #define addr_row_four         0x54        //LCD RAM address for row 4 
.................... 
.................... #define ON                    1 
.................... #define OFF                   0 
.................... #define NOT                   ~ 
.................... #define data_shifted          data<<4 
.................... 
.................... #use delay(clock=4Mhz)
*
06FC:  CLRF   FEA
06FE:  MOVLW  4D
0700:  MOVWF  FE9
0702:  MOVF   FEF,W
0704:  BZ    0722
0706:  MOVLW  01
0708:  MOVWF  01
070A:  CLRF   00
070C:  DECFSZ 00,F
070E:  BRA    070C
0710:  DECFSZ 01,F
0712:  BRA    070A
0714:  MOVLW  4A
0716:  MOVWF  00
0718:  DECFSZ 00,F
071A:  BRA    0718
071C:  BRA    071E
071E:  DECFSZ FEF,F
0720:  BRA    0706
0722:  RETURN 0
.................... int8 new_row_request=1, BACKLIGHT_LED=LCD_BACKLIGHT; 
.................... 
.................... void lcd_backlight_led(byte bl) 
.................... {  
....................       If (bl) BACKLIGHT_LED=LCD_BACKLIGHT; else BACKLIGHT_LED=OFF; 
.................... } 
.................... 
.................... void i2c_send_nibble(byte data, byte type) 
.................... {    
....................    switch (type) 
*
076C:  MOVF   58,W
076E:  XORLW  00
0770:  BZ    0778
0772:  XORLW  01
0774:  BZ    07B8
0776:  BRA    07FA
....................    {      
....................       case 0 :      
....................       i2c_write(data_shifted | BACKLIGHT_LED); 
0778:  SWAPF  57,W
077A:  MOVWF  00
077C:  MOVLW  F0
077E:  ANDWF  00,F
0780:  MOVF   00,W
0782:  IORWF  1D,W
0784:  MOVWF  59
0786:  MOVWF  5A
0788:  RCALL  0724
....................       delay_cycles(1); 
078A:  NOP   
....................       i2c_write(data_shifted | ENABLE | BACKLIGHT_LED ); 
078C:  SWAPF  57,W
078E:  MOVWF  00
0790:  MOVLW  F0
0792:  ANDWF  00,F
0794:  MOVF   00,W
0796:  IORLW  04
0798:  IORWF  1D,W
079A:  MOVWF  59
079C:  MOVWF  5A
079E:  RCALL  0724
....................       delay_us(2); 
07A0:  BRA    07A2
....................       i2c_write(data_shifted & NOT ENABLE | BACKLIGHT_LED); 
07A2:  SWAPF  57,W
07A4:  MOVWF  00
07A6:  MOVLW  F0
07A8:  ANDWF  00,F
07AA:  MOVF   00,W
07AC:  ANDLW  FB
07AE:  IORWF  1D,W
07B0:  MOVWF  59
07B2:  MOVWF  5A
07B4:  RCALL  0724
....................       break; 
07B6:  BRA    07FA
....................       
....................       case 1 : 
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
07B8:  SWAPF  57,W
07BA:  MOVWF  00
07BC:  MOVLW  F0
07BE:  ANDWF  00,F
07C0:  MOVF   00,W
07C2:  IORLW  01
07C4:  IORWF  1D,W
07C6:  MOVWF  59
07C8:  MOVWF  5A
07CA:  RCALL  0724
....................       delay_cycles(1); 
07CC:  NOP   
....................       i2c_write(data_shifted | RS | ENABLE | BACKLIGHT_LED ); 
07CE:  SWAPF  57,W
07D0:  MOVWF  00
07D2:  MOVLW  F0
07D4:  ANDWF  00,F
07D6:  MOVF   00,W
07D8:  IORLW  01
07DA:  IORLW  04
07DC:  IORWF  1D,W
07DE:  MOVWF  59
07E0:  MOVWF  5A
07E2:  RCALL  0724
....................       delay_us(2); 
07E4:  BRA    07E6
....................       i2c_write(data_shifted | RS | BACKLIGHT_LED); 
07E6:  SWAPF  57,W
07E8:  MOVWF  00
07EA:  MOVLW  F0
07EC:  ANDWF  00,F
07EE:  MOVF   00,W
07F0:  IORLW  01
07F2:  IORWF  1D,W
07F4:  MOVWF  59
07F6:  MOVWF  5A
07F8:  RCALL  0724
....................       break; 
....................    } 
07FA:  RETURN 0
.................... } 
....................     
.................... void lcd_send_byte(byte data, byte type) 
....................    { 
....................         i2c_start(); 
07FC:  BSF    F93.0
07FE:  NOP   
0800:  BSF    F93.1
0802:  NOP   
0804:  BCF    F8A.0
0806:  BCF    F93.0
0808:  NOP   
080A:  BCF    F8A.1
080C:  BCF    F93.1
....................         i2c_write(LCD_ADDR); 
080E:  MOVFF  19,5A
0812:  RCALL  0724
....................         i2c_send_nibble(data >> 4 , type); 
0814:  SWAPF  54,W
0816:  MOVWF  56
0818:  MOVLW  0F
081A:  ANDWF  56,F
081C:  MOVFF  56,57
0820:  MOVFF  55,58
0824:  RCALL  076C
....................         i2c_send_nibble(data & 0xf , type); 
0826:  MOVF   54,W
0828:  ANDLW  0F
082A:  MOVWF  56
082C:  MOVWF  57
082E:  MOVFF  55,58
0832:  RCALL  076C
....................         i2c_stop();        
0834:  BCF    F93.0
0836:  NOP   
0838:  BSF    F93.1
083A:  BTFSS  F81.1
083C:  BRA    083A
083E:  NOP   
0840:  BRA    0842
0842:  NOP   
0844:  BSF    F93.0
0846:  NOP   
0848:  RETURN 0
....................    } 
.................... 
.................... void lcd_clear() 
.................... {  
....................         lcd_send_byte(0x01,0); 
084A:  MOVLW  01
084C:  MOVWF  54
084E:  CLRF   55
0850:  RCALL  07FC
....................         delay_ms(2); 
0852:  MOVLW  02
0854:  MOVWF  4D
0856:  RCALL  06FC
....................         new_row_request=1; 
0858:  MOVLW  01
085A:  MOVWF  1C
085C:  RETURN 0
.................... } 
.................... 
.................... void lcd_init(byte ADDR, byte col, byte row) 
.................... { 
....................    byte i;
....................    byte CONST lcd_type=2;  // 0=5x7, 1=5x10, 2=2 lines 
....................    byte CONST LCD_INIT_STRING[4] = {0x20 | (lcd_type << 2), 0xc, 1, 6}; // These bytes need to be sent to the LCD to start it up.
....................    
....................    LCD_ADDR =ADDR;//             0x4E        //I2C slave address for LCD module 
085E:  MOVFF  3F,19
....................    lcd_total_rows =row;//       2           //Number of rows: 1,2,3 or 4 
0862:  MOVFF  41,1A
....................    lcd_total_columns= col ;
0866:  MOVFF  40,1B
....................    disable_interrupts(GLOBAL); 
086A:  BCF    FF2.6
086C:  BCF    FF2.7
086E:  BTFSC  FF2.7
0870:  BRA    086C
....................    delay_ms(50); //LCD power up delay 
0872:  MOVLW  32
0874:  MOVWF  4D
0876:  RCALL  06FC
....................     
....................    i2c_start(); 
0878:  BSF    F93.0
087A:  NOP   
087C:  BSF    F93.1
087E:  NOP   
0880:  BCF    F8A.0
0882:  BCF    F93.0
0884:  NOP   
0886:  BCF    F8A.1
0888:  BCF    F93.1
....................    i2c_write(LCD_ADDR); 
088A:  MOVFF  19,5A
088E:  RCALL  0724
....................       i2c_send_nibble(0x00,0); 
0890:  CLRF   57
0892:  CLRF   58
0894:  RCALL  076C
....................       delay_ms(15); 
0896:  MOVLW  0F
0898:  MOVWF  4D
089A:  RCALL  06FC
....................     
....................    for (i=1;i<=3;++i)    
089C:  MOVLW  01
089E:  MOVWF  42
08A0:  MOVF   42,W
08A2:  SUBLW  03
08A4:  BNC   08B8
....................    { 
....................       i2c_send_nibble(0x03,0); 
08A6:  MOVLW  03
08A8:  MOVWF  57
08AA:  CLRF   58
08AC:  RCALL  076C
....................       delay_ms(5); 
08AE:  MOVLW  05
08B0:  MOVWF  4D
08B2:  RCALL  06FC
08B4:  INCF   42,F
08B6:  BRA    08A0
....................    }    
....................       i2c_send_nibble(0x02,0); 
08B8:  MOVLW  02
08BA:  MOVWF  57
08BC:  CLRF   58
08BE:  RCALL  076C
....................       delay_ms(5); 
08C0:  MOVLW  05
08C2:  MOVWF  4D
08C4:  RCALL  06FC
....................    i2c_stop(); 
08C6:  BCF    F93.0
08C8:  NOP   
08CA:  BSF    F93.1
08CC:  BTFSS  F81.1
08CE:  BRA    08CC
08D0:  NOP   
08D2:  BRA    08D4
08D4:  NOP   
08D6:  BSF    F93.0
08D8:  NOP   
....................     
....................    for (i=0;i<=3;++i) { 
08DA:  CLRF   42
08DC:  MOVF   42,W
08DE:  SUBLW  03
08E0:  BNC   08FC
....................    lcd_send_byte(LCD_INIT_STRING[i],0); 
08E2:  CLRF   03
08E4:  MOVF   42,W
08E6:  CALL   00BA
08EA:  MOVWF  43
08EC:  MOVWF  54
08EE:  CLRF   55
08F0:  RCALL  07FC
....................    delay_ms(5); 
08F2:  MOVLW  05
08F4:  MOVWF  4D
08F6:  RCALL  06FC
08F8:  INCF   42,F
08FA:  BRA    08DC
....................    } 
....................    lcd_clear();  //Clear Display 
08FC:  RCALL  084A
....................    enable_interrupts(GLOBAL); 
08FE:  MOVLW  C0
0900:  IORWF  FF2,F
0902:  GOTO   0EF2 (RETURN)
.................... } 
.................... 
.................... void lcd_gotoxy( byte x, byte y) 
.................... { 
.................... byte row,column,row_addr,lcd_address; 
.................... static char data; 
.................... 
....................    if (y>lcd_total_rows) row=lcd_total_rows; else row=y; 
0906:  MOVF   4E,W
0908:  SUBWF  1A,W
090A:  BC    0912
090C:  MOVFF  1A,4F
0910:  BRA    0916
0912:  MOVFF  4E,4F
....................   
....................    switch(row) 
0916:  MOVF   4F,W
0918:  XORLW  01
091A:  BZ    092A
091C:  XORLW  03
091E:  BZ    092E
0920:  XORLW  01
0922:  BZ    0934
0924:  XORLW  07
0926:  BZ    093A
0928:  BRA    0940
....................    { 
....................       case 1:  row_addr=addr_row_one;     break; 
092A:  CLRF   51
092C:  BRA    0942
....................       case 2:  row_addr=addr_row_two;     break; 
092E:  MOVLW  40
0930:  MOVWF  51
0932:  BRA    0942
....................       case 3:  row_addr=addr_row_three;   break; 
0934:  MOVLW  14
0936:  MOVWF  51
0938:  BRA    0942
....................       case 4:  row_addr=addr_row_four;    break; 
093A:  MOVLW  54
093C:  MOVWF  51
093E:  BRA    0942
....................       default: row_addr=addr_row_one;     break;  
0940:  CLRF   51
....................    }  
....................     
....................    if (x>lcd_total_columns) column=lcd_total_columns; else column=x;  
0942:  MOVF   4D,W
0944:  SUBWF  1B,W
0946:  BC    094E
0948:  MOVFF  1B,50
094C:  BRA    0952
094E:  MOVFF  4D,50
....................    lcd_address=(row_addr+(column-1)); 
0952:  MOVLW  01
0954:  SUBWF  50,W
0956:  ADDWF  51,W
0958:  MOVWF  52
....................    lcd_send_byte(0x80|lcd_address,0); 
095A:  MOVF   52,W
095C:  IORLW  80
095E:  MOVWF  53
0960:  MOVWF  54
0962:  CLRF   55
0964:  RCALL  07FC
0966:  RETURN 0
.................... } 
.................... 
.................... //Display the character on LCD screen. 
.................... void LCD_PUTC(char in_data) 
.................... {    
....................   switch(in_data) 
0968:  MOVF   4C,W
096A:  XORLW  0C
096C:  BZ    0978
096E:  XORLW  06
0970:  BZ    097C
0972:  XORLW  02
0974:  BZ    0994
0976:  BRA    099E
....................    {  
....................      case '\f': lcd_clear();                       break;                
0978:  RCALL  084A
097A:  BRA    09A8
....................       
....................      case '\n': 
....................      new_row_request++; 
097C:  INCF   1C,F
....................      if (new_row_request>lcd_total_rows) new_row_request=1; 
097E:  MOVF   1C,W
0980:  SUBWF  1A,W
0982:  BC    0988
0984:  MOVLW  01
0986:  MOVWF  1C
....................      lcd_gotoxy(1, new_row_request); 
0988:  MOVLW  01
098A:  MOVWF  4D
098C:  MOVFF  1C,4E
0990:  RCALL  0906
....................      break; 
0992:  BRA    09A8
....................                   
....................      case '\b': lcd_send_byte(0x10,0);             break; 
0994:  MOVLW  10
0996:  MOVWF  54
0998:  CLRF   55
099A:  RCALL  07FC
099C:  BRA    09A8
....................         
....................      default: lcd_send_byte(in_data,1);            break;      
099E:  MOVFF  4C,54
09A2:  MOVLW  01
09A4:  MOVWF  55
09A6:  RCALL  07FC
....................       
....................    } 
09A8:  RETURN 0
.................... } 
.................... 
.................... #fuses intrc,nowdt
.................... #use delay(clock=4Mhz)
*
09CA:  CLRF   FEA
09CC:  MOVLW  40
09CE:  MOVWF  FE9
09D0:  MOVF   FEF,W
09D2:  BZ    09F0
09D4:  MOVLW  01
09D6:  MOVWF  01
09D8:  CLRF   00
09DA:  DECFSZ 00,F
09DC:  BRA    09DA
09DE:  DECFSZ 01,F
09E0:  BRA    09D8
09E2:  MOVLW  4A
09E4:  MOVWF  00
09E6:  DECFSZ 00,F
09E8:  BRA    09E6
09EA:  BRA    09EC
09EC:  DECFSZ FEF,F
09EE:  BRA    09D4
09F0:  RETURN 0
.................... //#include <lcd.c>
.................... #use fast_io(a)
.................... float Lecturaad620;
.................... int32 valor_recarga = 63899;
.................... //int32 valor_recarga = 0;
.................... int direccionI2C = 0x4E;
.................... int filas = 2;
.................... int columnas = 16;
.................... int pulsos_555 =  0;
.................... int1 bandera_prueba_555;
.................... int1 bandera_estado_555;
.................... int32 value;
.................... int opambuenos = 0;
.................... int1 NPN_estado;
.................... int1 PNP_estado;
.................... 
.................... #INT_EXT2
.................... void pulsos() {
....................    pulsos_555 = pulsos_555 + 1;
*
00CE:  MOVLW  01
00D0:  ADDWF  2A,F
....................    CLEAR_INTERRUPT(INT_EXT2);
00D2:  BCF    FF0.1
.................... }
.................... 
00D4:  BCF    FF0.1
00D6:  GOTO   006C
.................... #INT_RTCC 
.................... void tiempo_final_555() {
....................    DISABLE_INTERRUPTS(INT_EXT2);// Inhabilitar las interrupciones del timer0
00DA:  BCF    FF0.4
....................    DISABLE_INTERRUPTS(INT_RTCC);
00DC:  BCF    FF2.5
....................    bandera_prueba_555 = 0;
00DE:  BCF    2B.0
....................    if (pulsos_555 > 9) {
00E0:  MOVF   2A,W
00E2:  SUBLW  09
00E4:  BC    00EA
....................       bandera_estado_555 = 1;
00E6:  BSF    2B.1
....................    }
00E8:  BRA    00EC
....................    
....................    else {
....................       bandera_estado_555 = 0;
00EA:  BCF    2B.1
....................    }
....................    
....................    CLEAR_INTERRUPT(INT_RTCC);
00EC:  BCF    FF2.2
00EE:  BCF    FF2.2
00F0:  GOTO   006C
.................... }
.................... 
.................... int Boton(){
....................          if(input(PIN_A3)) {
*
09F2:  BTFSS  F80.3
09F4:  BRA    09FE
....................             return 1;
09F6:  MOVLW  01
09F8:  MOVWF  01
09FA:  BRA    0A26
....................             } else if(input(PIN_A4)) {
09FC:  BRA    0A22
09FE:  BTFSS  F80.4
0A00:  BRA    0A0A
....................             return 2;
0A02:  MOVLW  02
0A04:  MOVWF  01
0A06:  BRA    0A26
....................             } else if(input(PIN_A5)) {
0A08:  BRA    0A22
0A0A:  BTFSS  F80.5
0A0C:  BRA    0A16
....................             return 3;
0A0E:  MOVLW  03
0A10:  MOVWF  01
0A12:  BRA    0A26
....................             } else if (input(PIN_C0)) {
0A14:  BRA    0A22
0A16:  BSF    F94.0
0A18:  BTFSS  F82.0
0A1A:  BRA    0A22
....................             return 4;
0A1C:  MOVLW  04
0A1E:  MOVWF  01
0A20:  BRA    0A26
....................             }
....................             return 0;
0A22:  MOVLW  00
0A24:  MOVWF  01
0A26:  RETURN 0
....................          }
.................... void main(){
*
0E8A:  CLRF   FF8
0E8C:  BCF    FD0.7
0E8E:  BSF    07.7
0E90:  MOVLW  01
0E92:  MOVWF  1C
0E94:  MOVLW  08
0E96:  MOVWF  1D
0E98:  CLRF   26
0E9A:  CLRF   25
0E9C:  MOVLW  F9
0E9E:  MOVWF  24
0EA0:  MOVLW  9B
0EA2:  MOVWF  23
0EA4:  MOVLW  4E
0EA6:  MOVWF  27
0EA8:  MOVLW  02
0EAA:  MOVWF  28
0EAC:  MOVLW  10
0EAE:  MOVWF  29
0EB0:  CLRF   2A
0EB2:  CLRF   30
0EB4:  CLRF   32
0EB6:  CLRF   31
0EB8:  MOVF   FC1,W
0EBA:  ANDLW  C0
0EBC:  IORLW  0F
0EBE:  MOVWF  FC1
0EC0:  MOVLW  07
0EC2:  MOVWF  FB4
0EC4:  CLRF   1E
....................       setup_oscillator(OSC_4MHZ);
0EC6:  MOVLW  60
0EC8:  MOVWF  FD3
0ECA:  MOVF   FD3,W
....................       set_tris_a(0xff);// puerto a entrada
0ECC:  MOVLW  FF
0ECE:  MOVWF  F92
....................       set_tris_d(00001100);// puerto d salida
0ED0:  MOVLW  40
0ED2:  MOVWF  F95
....................       set_tris_c(0xff);// puerto c entrada
0ED4:  MOVLW  FF
0ED6:  MOVWF  F94
....................       SETUP_COUNTERS(RTCC_INTERNAL,RTCC_DIV_256);
0ED8:  BCF    FD1.0
0EDA:  MOVLW  87
0EDC:  MOVWF  FD5
....................       ENABLE_INTERRUPTS(GLOBAL);// Habilita las interrupciones globales
0EDE:  MOVLW  C0
0EE0:  IORWF  FF2,F
....................       ext_int_edge(H_TO_L); //Inicia el flanco de la interruccion de alto abajo
0EE2:  BCF    FF1.6
....................       lcd_init(direccionI2C,filas,columnas);
0EE4:  MOVFF  27,3F
0EE8:  MOVFF  28,40
0EEC:  MOVFF  29,41
0EF0:  BRA    085E
....................       setup_adc_ports(0x0e);
0EF2:  MOVF   FC1,W
0EF4:  ANDLW  C0
0EF6:  IORLW  0E
0EF8:  MOVWF  FC1
....................       setup_adc(adc_clock_internal);
0EFA:  MOVF   FC0,W
0EFC:  ANDLW  C0
0EFE:  IORLW  07
0F00:  MOVWF  FC0
0F02:  BSF    FC0.7
0F04:  BSF    FC2.0
....................             /**
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(5,1);
....................       printf(lcd_putc," UNEXPO");
....................       lcd_gotoxy(2,2);
....................       printf(lcd_putc," BARQUISIMETO");
....................       delay_ms(3000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Daniela Canas");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Gabriel Gimenez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Guedez");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Developer]");
....................       delay_ms(1000);
....................       printf(lcd_putc,"\f");
....................       lcd_gotoxy(0,1);
....................       printf(lcd_putc," Carlos Zambrano");
....................       lcd_gotoxy(0,2);
....................       printf(lcd_putc," [Tutor]");
....................       delay_ms(1000);
....................       **/
....................       
.................... MENUPRINCIPAL:
....................       while(true){
....................           printf(lcd_putc,"\f");
0F06:  MOVLW  0C
0F08:  MOVWF  4C
0F0A:  MOVLB  0
0F0C:  RCALL  0968
....................           lcd_gotoxy(0,1);
0F0E:  CLRF   4D
0F10:  MOVLW  01
0F12:  MOVWF  4E
0F14:  RCALL  0906
....................           printf(lcd_putc," MENU PRINCIPAL");
0F16:  MOVLW  F4
0F18:  MOVWF  FF6
0F1A:  MOVLW  00
0F1C:  MOVWF  FF7
0F1E:  RCALL  09AA
....................           lcd_gotoxy(0,2);
0F20:  CLRF   4D
0F22:  MOVLW  02
0F24:  MOVWF  4E
0F26:  RCALL  0906
....................           printf(lcd_putc," 1>AD620 3>NEXT");
0F28:  MOVLW  04
0F2A:  MOVWF  FF6
0F2C:  MOVLW  01
0F2E:  MOVWF  FF7
0F30:  RCALL  09AA
....................           delay_ms(1000);
0F32:  MOVLW  04
0F34:  MOVWF  3F
0F36:  MOVLW  FA
0F38:  MOVWF  40
0F3A:  RCALL  09CA
0F3C:  DECFSZ 3F,F
0F3E:  BRA    0F36
....................           while(1){
....................              if(Boton()==1){
0F40:  RCALL  09F2
0F42:  DECFSZ 01,W
0F44:  BRA    1072
....................                while(1){
....................                   set_adc_channel(0);
0F46:  MOVLW  00
0F48:  MOVWF  01
0F4A:  MOVF   FC2,W
0F4C:  ANDLW  C3
0F4E:  IORWF  01,W
0F50:  MOVWF  FC2
....................                   delay_us(20);
0F52:  MOVLW  06
0F54:  MOVWF  00
0F56:  DECFSZ 00,F
0F58:  BRA    0F56
0F5A:  NOP   
....................                   float valor_adc = read_adc();
....................                   float lectura= valor_adc*0.004886;
....................                   float Lecturaad620=lectura;
0F5C:  BSF    FC2.1
0F5E:  BTFSC  FC2.1
0F60:  BRA    0F5E
0F62:  MOVFF  FC4,02
0F66:  MOVFF  FC3,01
0F6A:  MOVFF  FC4,03
0F6E:  MOVFF  FC3,3F
0F72:  MOVFF  FC4,40
0F76:  BRA    0A28
0F78:  MOVFF  03,36
0F7C:  MOVFF  02,35
0F80:  MOVFF  01,34
0F84:  MOVFF  00,33
0F88:  MOVFF  36,4F
0F8C:  MOVFF  35,4E
0F90:  MOVFF  34,4D
0F94:  MOVFF  33,4C
0F98:  MOVLW  BD
0F9A:  MOVWF  53
0F9C:  MOVLW  1A
0F9E:  MOVWF  52
0FA0:  MOVLW  20
0FA2:  MOVWF  51
0FA4:  MOVLW  77
0FA6:  MOVWF  50
0FA8:  RCALL  0A60
0FAA:  MOVFF  03,3A
0FAE:  MOVFF  02,39
0FB2:  MOVFF  01,38
0FB6:  MOVFF  00,37
0FBA:  MOVFF  3A,3E
0FBE:  MOVFF  39,3D
0FC2:  MOVFF  38,3C
0FC6:  MOVFF  37,3B
....................                   printf(lcd_putc,"\f"); //Limpiar la pantalla
0FCA:  MOVLW  0C
0FCC:  MOVWF  4C
0FCE:  RCALL  0968
....................                   lcd_gotoxy(0,1);
0FD0:  CLRF   4D
0FD2:  MOVLW  01
0FD4:  MOVWF  4E
0FD6:  RCALL  0906
....................                   printf(lcd_putc," AD620 Testing..."); //  escribir eso
0FD8:  MOVLW  14
0FDA:  MOVWF  FF6
0FDC:  MOVLW  01
0FDE:  MOVWF  FF7
0FE0:  RCALL  09AA
....................                   lcd_gotoxy(0,2);
0FE2:  CLRF   4D
0FE4:  MOVLW  02
0FE6:  MOVWF  4E
0FE8:  RCALL  0906
....................                   printf(lcd_putc," V:%0.2f. 2>Ret",Lecturaad620);
0FEA:  MOVLW  26
0FEC:  MOVWF  FF6
0FEE:  MOVLW  01
0FF0:  MOVWF  FF7
0FF2:  MOVLW  03
0FF4:  MOVWF  3F
0FF6:  RCALL  0B52
0FF8:  MOVLW  C9
0FFA:  MOVWF  FE9
0FFC:  MOVFF  3E,42
1000:  MOVFF  3D,41
1004:  MOVFF  3C,40
1008:  MOVFF  3B,3F
100C:  MOVLW  02
100E:  MOVWF  43
1010:  BRA    0C3E
1012:  MOVLW  2E
1014:  MOVWF  FF6
1016:  MOVLW  01
1018:  MOVWF  FF7
101A:  MOVLW  07
101C:  MOVWF  3F
101E:  RCALL  0B52
....................                   delay_ms(500);
1020:  MOVLW  02
1022:  MOVWF  3F
1024:  MOVLW  FA
1026:  MOVWF  40
1028:  RCALL  09CA
102A:  DECFSZ 3F,F
102C:  BRA    1024
....................                   if(Boton()==2){
102E:  RCALL  09F2
1030:  MOVF   01,W
1032:  SUBLW  02
1034:  BNZ   1070
....................                      printf(lcd_putc,"\f");
1036:  MOVLW  0C
1038:  MOVWF  4C
103A:  RCALL  0968
....................                      lcd_gotoxy(0,1);
103C:  CLRF   4D
103E:  MOVLW  01
1040:  MOVWF  4E
1042:  RCALL  0906
....................                      printf(lcd_putc," MENU PRINCIPAL");
1044:  MOVLW  36
1046:  MOVWF  FF6
1048:  MOVLW  01
104A:  MOVWF  FF7
104C:  RCALL  09AA
....................                      lcd_gotoxy(0,2);
104E:  CLRF   4D
1050:  MOVLW  02
1052:  MOVWF  4E
1054:  RCALL  0906
....................                      printf(lcd_putc," 1>AD620 3>NEXT");
1056:  MOVLW  46
1058:  MOVWF  FF6
105A:  MOVLW  01
105C:  MOVWF  FF7
105E:  RCALL  09AA
....................                      delay_ms(1000);
1060:  MOVLW  04
1062:  MOVWF  3F
1064:  MOVLW  FA
1066:  MOVWF  40
1068:  RCALL  09CA
106A:  DECFSZ 3F,F
106C:  BRA    1064
....................                      break;
106E:  BRA    1072
....................                   }
1070:  BRA    0F46
....................                 }     
....................              }
....................              if(Boton()==3){
1072:  RCALL  09F2
1074:  MOVF   01,W
1076:  SUBLW  03
1078:  BTFSS  FD8.2
107A:  GOTO   1ED4
....................                printf(lcd_putc,"\f");
107E:  MOVLW  0C
1080:  MOVWF  4C
1082:  RCALL  0968
....................                lcd_gotoxy(0,1);
1084:  CLRF   4D
1086:  MOVLW  01
1088:  MOVWF  4E
108A:  RCALL  0906
....................                printf(lcd_putc," 1>555 2>LM224");
108C:  MOVLW  56
108E:  MOVWF  FF6
1090:  MOVLW  01
1092:  MOVWF  FF7
1094:  RCALL  09AA
....................                lcd_gotoxy(0,2);
1096:  CLRF   4D
1098:  MOVLW  02
109A:  MOVWF  4E
109C:  RCALL  0906
....................                printf(lcd_putc," 4>741 3>Pag.Sig.");
109E:  MOVLW  66
10A0:  MOVWF  FF6
10A2:  MOVLW  01
10A4:  MOVWF  FF7
10A6:  RCALL  09AA
....................                delay_ms(1000);
10A8:  MOVLW  04
10AA:  MOVWF  3F
10AC:  MOVLW  FA
10AE:  MOVWF  40
10B0:  RCALL  09CA
10B2:  DECFSZ 3F,F
10B4:  BRA    10AC
....................                while(1){
....................                   if(Boton()==1){
10B6:  RCALL  09F2
10B8:  DECFSZ 01,W
10BA:  BRA    12AE
....................                         bandera_prueba_555 = 1;
10BC:  BSF    2B.0
....................                         SET_TIMER0(valor_recarga);
10BE:  MOVFF  24,FD7
10C2:  MOVFF  23,FD6
10C6:  NOP   
....................                         value=get_timer0();
10C8:  MOVF   FD6,W
10CA:  MOVWF  2C
10CC:  MOVFF  FD7,2D
10D0:  CLRF   2E
10D2:  CLRF   2F
....................                         ENABLE_INTERRUPTS(INT_RTCC);
10D4:  BSF    FF2.5
....................                         ENABLE_INTERRUPTS(INT_EXT2);// Habilita las interrupciones externas
10D6:  BSF    FF0.4
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
10D8:  MOVLW  0C
10DA:  MOVWF  4C
10DC:  RCALL  0968
....................                         lcd_gotoxy(0,1);
10DE:  CLRF   4D
10E0:  MOVLW  01
10E2:  MOVWF  4E
10E4:  RCALL  0906
....................                         printf(lcd_putc," 555 Testing..."); //  escribir eso
10E6:  MOVLW  78
10E8:  MOVWF  FF6
10EA:  MOVLW  01
10EC:  MOVWF  FF7
10EE:  RCALL  09AA
....................                         lcd_gotoxy(0,2);
10F0:  CLRF   4D
10F2:  MOVLW  02
10F4:  MOVWF  4E
10F6:  RCALL  0906
....................                         printf(lcd_putc," 2>Volver");
10F8:  MOVLW  88
10FA:  MOVWF  FF6
10FC:  MOVLW  01
10FE:  MOVWF  FF7
1100:  RCALL  09AA
....................                             
....................                         while(bandera_prueba_555 == 1) {
1102:  BTFSS  2B.0
1104:  BRA    1140
....................                            if (Boton() == 2) {                        
1106:  RCALL  09F2
1108:  MOVF   01,W
110A:  SUBLW  02
110C:  BNZ   113E
....................                               printf(lcd_putc,"\f");
110E:  MOVLW  0C
1110:  MOVWF  4C
1112:  RCALL  0968
....................                               lcd_gotoxy(0,1);
1114:  CLRF   4D
1116:  MOVLW  01
1118:  MOVWF  4E
111A:  CALL   0906
....................                               printf(lcd_putc," 1>555 2>LM224");
111E:  MOVLW  92
1120:  MOVWF  FF6
1122:  MOVLW  01
1124:  MOVWF  FF7
1126:  RCALL  09AA
....................                               lcd_gotoxy(0,2);
1128:  CLRF   4D
112A:  MOVLW  02
112C:  MOVWF  4E
112E:  CALL   0906
....................                               printf(lcd_putc," 4>741 3>Pag.Sig.");
1132:  MOVLW  A2
1134:  MOVWF  FF6
1136:  MOVLW  01
1138:  MOVWF  FF7
113A:  RCALL  09AA
....................                               break;
113C:  BRA    1140
....................                            }
113E:  BRA    1102
....................                         }
....................                         
....................                         if (bandera_prueba_555 == 0) {
1140:  BTFSC  2B.0
1142:  BRA    1248
....................                            if (bandera_estado_555 == 0) {
1144:  BTFSC  2B.1
1146:  BRA    11C2
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
1148:  MOVLW  0C
114A:  MOVWF  4C
114C:  RCALL  0968
....................                               lcd_gotoxy(0,1);
114E:  CLRF   4D
1150:  MOVLW  01
1152:  MOVWF  4E
1154:  CALL   0906
....................                               printf(lcd_putc,"Malo %i", pulsos_555); //  escribir eso
1158:  MOVLW  B4
115A:  MOVWF  FF6
115C:  MOVLW  01
115E:  MOVWF  FF7
1160:  MOVLW  05
1162:  MOVWF  3F
1164:  RCALL  0B52
1166:  MOVFF  2A,3F
116A:  MOVLW  18
116C:  MOVWF  40
116E:  RCALL  0DE0
....................                               lcd_gotoxy(0,2);
1170:  CLRF   4D
1172:  MOVLW  02
1174:  MOVWF  4E
1176:  CALL   0906
....................                               printf(lcd_putc," 2>Volver");
117A:  MOVLW  BC
117C:  MOVWF  FF6
117E:  MOVLW  01
1180:  MOVWF  FF7
1182:  RCALL  09AA
....................                               while(1) {
....................                                  if(Boton() == 2) {
1184:  RCALL  09F2
1186:  MOVF   01,W
1188:  SUBLW  02
118A:  BNZ   11C0
....................                                     printf(lcd_putc,"\f");
118C:  MOVLW  0C
118E:  MOVWF  4C
1190:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1194:  CLRF   4D
1196:  MOVLW  01
1198:  MOVWF  4E
119A:  CALL   0906
....................                                     printf(lcd_putc," 1>555 2>LM224");
119E:  MOVLW  C6
11A0:  MOVWF  FF6
11A2:  MOVLW  01
11A4:  MOVWF  FF7
11A6:  RCALL  09AA
....................                                     lcd_gotoxy(0,2);
11A8:  CLRF   4D
11AA:  MOVLW  02
11AC:  MOVWF  4E
11AE:  CALL   0906
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
11B2:  MOVLW  D6
11B4:  MOVWF  FF6
11B6:  MOVLW  01
11B8:  MOVWF  FF7
11BA:  CALL   09AA
....................                                     break;
11BE:  BRA    11C2
....................                                  }
11C0:  BRA    1184
....................                               }
....................                            }
....................                            
....................                            if (bandera_estado_555 == 1) {
11C2:  BTFSS  2B.1
11C4:  BRA    1248
....................                               printf(lcd_putc,"\f"); //Limpiar la pantalla
11C6:  MOVLW  0C
11C8:  MOVWF  4C
11CA:  CALL   0968
....................                               lcd_gotoxy(0,1);
11CE:  CLRF   4D
11D0:  MOVLW  01
11D2:  MOVWF  4E
11D4:  CALL   0906
....................                               printf(lcd_putc,"Bueno %i", pulsos_555); //  escribir eso
11D8:  MOVLW  E8
11DA:  MOVWF  FF6
11DC:  MOVLW  01
11DE:  MOVWF  FF7
11E0:  MOVLW  06
11E2:  MOVWF  3F
11E4:  RCALL  0B52
11E6:  MOVFF  2A,3F
11EA:  MOVLW  18
11EC:  MOVWF  40
11EE:  RCALL  0DE0
....................                               lcd_gotoxy(0,2);
11F0:  CLRF   4D
11F2:  MOVLW  02
11F4:  MOVWF  4E
11F6:  CALL   0906
....................                               printf(lcd_putc," 2>Volver");
11FA:  MOVLW  F2
11FC:  MOVWF  FF6
11FE:  MOVLW  01
1200:  MOVWF  FF7
1202:  CALL   09AA
....................                               while(1) {
....................                                  if(Boton() == 2) {
1206:  CALL   09F2
120A:  MOVF   01,W
120C:  SUBLW  02
120E:  BNZ   1246
....................                                     printf(lcd_putc,"\f");
1210:  MOVLW  0C
1212:  MOVWF  4C
1214:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1218:  CLRF   4D
121A:  MOVLW  01
121C:  MOVWF  4E
121E:  CALL   0906
....................                                     printf(lcd_putc," 1>555 2>LM224");
1222:  MOVLW  FC
1224:  MOVWF  FF6
1226:  MOVLW  01
1228:  MOVWF  FF7
122A:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
122E:  CLRF   4D
1230:  MOVLW  02
1232:  MOVWF  4E
1234:  CALL   0906
....................                                     printf(lcd_putc," 4>741 3>Pag.Sig.");
1238:  MOVLW  0C
123A:  MOVWF  FF6
123C:  MOVLW  02
123E:  MOVWF  FF7
1240:  CALL   09AA
....................                                     break;
1244:  BRA    1248
....................                                  }
1246:  BRA    1206
....................                               }
....................                            }
....................                         }
....................                         bandera_prueba_555 = 0;
1248:  BCF    2B.0
....................                         pulsos_555 = 0;
124A:  CLRF   2A
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
124C:  MOVLW  0C
124E:  MOVWF  4C
1250:  CALL   0968
....................                         lcd_gotoxy(0,2);
1254:  CLRF   4D
1256:  MOVLW  02
1258:  MOVWF  4E
125A:  CALL   0906
....................                         printf(lcd_putc," Regresando...");
125E:  MOVLW  1E
1260:  MOVWF  FF6
1262:  MOVLW  02
1264:  MOVWF  FF7
1266:  CALL   09AA
....................                         printf(lcd_putc,"\f");
126A:  MOVLW  0C
126C:  MOVWF  4C
126E:  CALL   0968
....................                         lcd_gotoxy(0,1);
1272:  CLRF   4D
1274:  MOVLW  01
1276:  MOVWF  4E
1278:  CALL   0906
....................                         printf(lcd_putc," 1>555 2>LM224");
127C:  MOVLW  2E
127E:  MOVWF  FF6
1280:  MOVLW  02
1282:  MOVWF  FF7
1284:  CALL   09AA
....................                         lcd_gotoxy(0,2);
1288:  CLRF   4D
128A:  MOVLW  02
128C:  MOVWF  4E
128E:  CALL   0906
....................                         printf(lcd_putc," 4>741 3>Pag.Sig.");
1292:  MOVLW  3E
1294:  MOVWF  FF6
1296:  MOVLW  02
1298:  MOVWF  FF7
129A:  CALL   09AA
....................                         delay_ms(1000);
129E:  MOVLW  04
12A0:  MOVWF  3F
12A2:  MOVLW  FA
12A4:  MOVWF  40
12A6:  CALL   09CA
12AA:  DECFSZ 3F,F
12AC:  BRA    12A2
....................                      }
....................                 
....................                   if(Boton()==2){
12AE:  CALL   09F2
12B2:  MOVF   01,W
12B4:  SUBLW  02
12B6:  BTFSS  FD8.2
12B8:  BRA    1542
....................                         while(1){
....................                             output_high(PIN_B7); // Colocar en alto pin B7 
12BA:  BCF    F93.7
12BC:  BSF    F8A.7
....................                             printf(lcd_putc,"\f"); //Limpiar la pantalla
12BE:  MOVLW  0C
12C0:  MOVWF  4C
12C2:  CALL   0968
....................                             lcd_gotoxy(0,1);
12C6:  CLRF   4D
12C8:  MOVLW  01
12CA:  MOVWF  4E
12CC:  CALL   0906
....................                             printf(lcd_putc," LM224 Testing..."); //  escribir eso
12D0:  MOVLW  50
12D2:  MOVWF  FF6
12D4:  MOVLW  02
12D6:  MOVWF  FF7
12D8:  CALL   09AA
....................                             lcd_gotoxy(0,2);
12DC:  CLRF   4D
12DE:  MOVLW  02
12E0:  MOVWF  4E
12E2:  CALL   0906
....................                             printf(lcd_putc," 2>Volver");
12E6:  MOVLW  62
12E8:  MOVWF  FF6
12EA:  MOVLW  02
12EC:  MOVWF  FF7
12EE:  CALL   09AA
....................                             delay_ms(1000);
12F2:  MOVLW  04
12F4:  MOVWF  3F
12F6:  MOVLW  FA
12F8:  MOVWF  40
12FA:  CALL   09CA
12FE:  DECFSZ 3F,F
1300:  BRA    12F6
....................                             if(input(PIN_D3)==1){
1302:  BSF    F95.3
1304:  BTFSS  F83.3
1306:  BRA    1350
....................                                  printf(lcd_putc,"\f");
1308:  MOVLW  0C
130A:  MOVWF  4C
130C:  CALL   0968
....................                                  lcd_gotoxy(0,1);
1310:  CLRF   4D
1312:  MOVLW  01
1314:  MOVWF  4E
1316:  CALL   0906
....................                                  printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
131A:  MOVLW  6C
131C:  MOVWF  FF6
131E:  MOVLW  02
1320:  MOVWF  FF7
1322:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
1326:  CLRF   4D
1328:  MOVLW  02
132A:  MOVWF  4E
132C:  CALL   0906
....................                                  printf(lcd_putc," LM224 Testing...");
1330:  MOVLW  7C
1332:  MOVWF  FF6
1334:  MOVLW  02
1336:  MOVWF  FF7
1338:  CALL   09AA
....................                                  delay_ms(500);
133C:  MOVLW  02
133E:  MOVWF  3F
1340:  MOVLW  FA
1342:  MOVWF  40
1344:  CALL   09CA
1348:  DECFSZ 3F,F
134A:  BRA    1340
....................                                  opambuenos = opambuenos + 1;
134C:  MOVLW  01
134E:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C1)==1){
1350:  BSF    F94.1
1352:  BTFSS  F82.1
1354:  BRA    139E
....................                                  printf(lcd_putc,"\f");
1356:  MOVLW  0C
1358:  MOVWF  4C
135A:  CALL   0968
....................                                  lcd_gotoxy(0,1);
135E:  CLRF   4D
1360:  MOVLW  01
1362:  MOVWF  4E
1364:  CALL   0906
....................                                  printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
1368:  MOVLW  8E
136A:  MOVWF  FF6
136C:  MOVLW  02
136E:  MOVWF  FF7
1370:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
1374:  CLRF   4D
1376:  MOVLW  02
1378:  MOVWF  4E
137A:  CALL   0906
....................                                  printf(lcd_putc," LM224 Testing...");
137E:  MOVLW  9E
1380:  MOVWF  FF6
1382:  MOVLW  02
1384:  MOVWF  FF7
1386:  CALL   09AA
....................                                  delay_ms(500);
138A:  MOVLW  02
138C:  MOVWF  3F
138E:  MOVLW  FA
1390:  MOVWF  40
1392:  CALL   09CA
1396:  DECFSZ 3F,F
1398:  BRA    138E
....................                                  opambuenos = opambuenos + 1;
139A:  MOVLW  01
139C:  ADDWF  30,F
....................                             }
....................                             if(input(PIN_C2)==1){
139E:  BSF    F94.2
13A0:  BTFSS  F82.2
13A2:  BRA    13EC
....................                                  printf(lcd_putc,"\f");
13A4:  MOVLW  0C
13A6:  MOVWF  4C
13A8:  CALL   0968
....................                                  lcd_gotoxy(0,1);
13AC:  CLRF   4D
13AE:  MOVLW  01
13B0:  MOVWF  4E
13B2:  CALL   0906
....................                                  printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
13B6:  MOVLW  B0
13B8:  MOVWF  FF6
13BA:  MOVLW  02
13BC:  MOVWF  FF7
13BE:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
13C2:  CLRF   4D
13C4:  MOVLW  02
13C6:  MOVWF  4E
13C8:  CALL   0906
....................                                  printf(lcd_putc," LM224 Testing...");
13CC:  MOVLW  C0
13CE:  MOVWF  FF6
13D0:  MOVLW  02
13D2:  MOVWF  FF7
13D4:  CALL   09AA
....................                                  delay_ms(500);
13D8:  MOVLW  02
13DA:  MOVWF  3F
13DC:  MOVLW  FA
13DE:  MOVWF  40
13E0:  CALL   09CA
13E4:  DECFSZ 3F,F
13E6:  BRA    13DC
....................                                  opambuenos = opambuenos + 1;
13E8:  MOVLW  01
13EA:  ADDWF  30,F
....................                             } 
....................                             if(input(PIN_D2)==1){
13EC:  BSF    F95.2
13EE:  BTFSS  F83.2
13F0:  BRA    143A
....................                                  printf(lcd_putc,"\f");
13F2:  MOVLW  0C
13F4:  MOVWF  4C
13F6:  CALL   0968
....................                                  lcd_gotoxy(0,1);
13FA:  CLRF   4D
13FC:  MOVLW  01
13FE:  MOVWF  4E
1400:  CALL   0906
....................                                  printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
1404:  MOVLW  D2
1406:  MOVWF  FF6
1408:  MOVLW  02
140A:  MOVWF  FF7
140C:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
1410:  CLRF   4D
1412:  MOVLW  02
1414:  MOVWF  4E
1416:  CALL   0906
....................                                  printf(lcd_putc," LM224 Testing...");
141A:  MOVLW  E2
141C:  MOVWF  FF6
141E:  MOVLW  02
1420:  MOVWF  FF7
1422:  CALL   09AA
....................                                  delay_ms(500);
1426:  MOVLW  02
1428:  MOVWF  3F
142A:  MOVLW  FA
142C:  MOVWF  40
142E:  CALL   09CA
1432:  DECFSZ 3F,F
1434:  BRA    142A
....................                                  opambuenos = opambuenos + 1;
1436:  MOVLW  01
1438:  ADDWF  30,F
....................                             }   
....................                             if(opambuenos>=1){
143A:  MOVF   30,W
143C:  SUBLW  00
143E:  BC    14CE
....................                                  output_low(PIN_B7); // Colocar en bajo pin B0
1440:  BCF    F93.7
1442:  BCF    F8A.7
....................                                  printf(lcd_putc,"\f"); //Limpiar la pantalla
1444:  MOVLW  0C
1446:  MOVWF  4C
1448:  CALL   0968
....................                                  lcd_gotoxy(0,1);
144C:  CLRF   4D
144E:  MOVLW  01
1450:  MOVWF  4E
1452:  CALL   0906
....................                                  printf(lcd_putc," Buenos %i", opambuenos);
1456:  MOVLW  F4
1458:  MOVWF  FF6
145A:  MOVLW  02
145C:  MOVWF  FF7
145E:  MOVLW  08
1460:  MOVWF  3F
1462:  CALL   0B52
1466:  MOVFF  30,3F
146A:  MOVLW  18
146C:  MOVWF  40
146E:  RCALL  0DE0
....................                                  lcd_gotoxy(0,2);
1470:  CLRF   4D
1472:  MOVLW  02
1474:  MOVWF  4E
1476:  CALL   0906
....................                                  printf(lcd_putc," Regresando..");
147A:  MOVLW  00
147C:  MOVWF  FF6
147E:  MOVLW  03
1480:  MOVWF  FF7
1482:  CALL   09AA
....................                                  delay_ms(1000);
1486:  MOVLW  04
1488:  MOVWF  3F
148A:  MOVLW  FA
148C:  MOVWF  40
148E:  CALL   09CA
1492:  DECFSZ 3F,F
1494:  BRA    148A
....................                                  opambuenos = 0;
1496:  CLRF   30
....................                                  printf(lcd_putc,"\f");
1498:  MOVLW  0C
149A:  MOVWF  4C
149C:  CALL   0968
....................                                  lcd_gotoxy(0,1);
14A0:  CLRF   4D
14A2:  MOVLW  01
14A4:  MOVWF  4E
14A6:  CALL   0906
....................                                  printf(lcd_putc," 1>555 2>LM224");
14AA:  MOVLW  0E
14AC:  MOVWF  FF6
14AE:  MOVLW  03
14B0:  MOVWF  FF7
14B2:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
14B6:  CLRF   4D
14B8:  MOVLW  02
14BA:  MOVWF  4E
14BC:  CALL   0906
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
14C0:  MOVLW  1E
14C2:  MOVWF  FF6
14C4:  MOVLW  03
14C6:  MOVWF  FF7
14C8:  CALL   09AA
....................                                 break;
14CC:  BRA    1542
....................                             }
....................                             if(Boton()==2){
14CE:  CALL   09F2
14D2:  MOVF   01,W
14D4:  SUBLW  02
14D6:  BNZ   1540
....................                                    output_low(PIN_B7); // Colocar en bajo pin B0
14D8:  BCF    F93.7
14DA:  BCF    F8A.7
....................                                    printf(lcd_putc,"\f"); //Limpiar la pantalla
14DC:  MOVLW  0C
14DE:  MOVWF  4C
14E0:  CALL   0968
....................                                    lcd_gotoxy(0,2);
14E4:  CLRF   4D
14E6:  MOVLW  02
14E8:  MOVWF  4E
14EA:  CALL   0906
....................                                    printf(lcd_putc," Regresando...");
14EE:  MOVLW  30
14F0:  MOVWF  FF6
14F2:  MOVLW  03
14F4:  MOVWF  FF7
14F6:  CALL   09AA
....................                                    delay_ms(500);
14FA:  MOVLW  02
14FC:  MOVWF  3F
14FE:  MOVLW  FA
1500:  MOVWF  40
1502:  CALL   09CA
1506:  DECFSZ 3F,F
1508:  BRA    14FE
....................                                    printf(lcd_putc,"\f");
150A:  MOVLW  0C
150C:  MOVWF  4C
150E:  CALL   0968
....................                                    lcd_gotoxy(0,1);
1512:  CLRF   4D
1514:  MOVLW  01
1516:  MOVWF  4E
1518:  CALL   0906
....................                                    printf(lcd_putc," 1>555 2>LM224");
151C:  MOVLW  40
151E:  MOVWF  FF6
1520:  MOVLW  03
1522:  MOVWF  FF7
1524:  CALL   09AA
....................                                    lcd_gotoxy(0,2);
1528:  CLRF   4D
152A:  MOVLW  02
152C:  MOVWF  4E
152E:  CALL   0906
....................                                    printf(lcd_putc," 4>741 3>Pag.Sig.");
1532:  MOVLW  50
1534:  MOVWF  FF6
1536:  MOVLW  03
1538:  MOVWF  FF7
153A:  CALL   09AA
....................                                    break;
153E:  BRA    1542
....................                                }
1540:  BRA    12BA
....................                         } 
....................                   }
....................                   if(Boton()==4){
1542:  CALL   09F2
1546:  MOVF   01,W
1548:  SUBLW  04
154A:  BTFSS  FD8.2
154C:  BRA    168E
....................                         while(1){
....................                         output_high(PIN_B7); // Colocar en alto pin B0 
154E:  BCF    F93.7
1550:  BSF    F8A.7
....................                         printf(lcd_putc,"\f"); //Limpiar la pantalla
1552:  MOVLW  0C
1554:  MOVWF  4C
1556:  CALL   0968
....................                         lcd_gotoxy(0,1);
155A:  CLRF   4D
155C:  MOVLW  01
155E:  MOVWF  4E
1560:  CALL   0906
....................                         printf(lcd_putc," 741 Testing..."); //  escribir eso
1564:  MOVLW  62
1566:  MOVWF  FF6
1568:  MOVLW  03
156A:  MOVWF  FF7
156C:  CALL   09AA
....................                         lcd_gotoxy(0,2);
1570:  CLRF   4D
1572:  MOVLW  02
1574:  MOVWF  4E
1576:  CALL   0906
....................                         printf(lcd_putc," 2>Volver");
157A:  MOVLW  72
157C:  MOVWF  FF6
157E:  MOVLW  03
1580:  MOVWF  FF7
1582:  CALL   09AA
....................                         delay_ms(1000);
1586:  MOVLW  04
1588:  MOVWF  3F
158A:  MOVLW  FA
158C:  MOVWF  40
158E:  CALL   09CA
1592:  DECFSZ 3F,F
1594:  BRA    158A
....................                         if(input(PIN_C1)==1){
1596:  BSF    F94.1
1598:  BTFSS  F82.1
159A:  BRA    161A
....................                                  printf(lcd_putc,"\f");
159C:  MOVLW  0C
159E:  MOVWF  4C
15A0:  CALL   0968
....................                                  output_low(PIN_B7);
15A4:  BCF    F93.7
15A6:  BCF    F8A.7
....................                                  lcd_gotoxy(0,1);
15A8:  CLRF   4D
15AA:  MOVLW  01
15AC:  MOVWF  4E
15AE:  CALL   0906
....................                                  printf(lcd_putc," AmpOp Bueno!"); //  escribir eso
15B2:  MOVLW  7C
15B4:  MOVWF  FF6
15B6:  MOVLW  03
15B8:  MOVWF  FF7
15BA:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
15BE:  CLRF   4D
15C0:  MOVLW  02
15C2:  MOVWF  4E
15C4:  CALL   0906
....................                                  printf(lcd_putc," Regresando...");
15C8:  MOVLW  8A
15CA:  MOVWF  FF6
15CC:  MOVLW  03
15CE:  MOVWF  FF7
15D0:  CALL   09AA
....................                                  delay_ms(500);
15D4:  MOVLW  02
15D6:  MOVWF  3F
15D8:  MOVLW  FA
15DA:  MOVWF  40
15DC:  CALL   09CA
15E0:  DECFSZ 3F,F
15E2:  BRA    15D8
....................                                  printf(lcd_putc,"\f");
15E4:  MOVLW  0C
15E6:  MOVWF  4C
15E8:  CALL   0968
....................                                  lcd_gotoxy(0,1);
15EC:  CLRF   4D
15EE:  MOVLW  01
15F0:  MOVWF  4E
15F2:  CALL   0906
....................                                  printf(lcd_putc," 1>555 2>LM224");
15F6:  MOVLW  9A
15F8:  MOVWF  FF6
15FA:  MOVLW  03
15FC:  MOVWF  FF7
15FE:  CALL   09AA
....................                                  lcd_gotoxy(0,2);
1602:  CLRF   4D
1604:  MOVLW  02
1606:  MOVWF  4E
1608:  CALL   0906
....................                                  printf(lcd_putc," 4>741 3>Pag.Sig.");
160C:  MOVLW  AA
160E:  MOVWF  FF6
1610:  MOVLW  03
1612:  MOVWF  FF7
1614:  CALL   09AA
....................                                 
....................                                 break;
1618:  BRA    168E
....................                         }
....................                         if(Boton()==2){
161A:  CALL   09F2
161E:  MOVF   01,W
1620:  SUBLW  02
1622:  BNZ   168C
....................                              output_low(PIN_B7); // Colocar en bajo pin B0
1624:  BCF    F93.7
1626:  BCF    F8A.7
....................                              printf(lcd_putc,"\f"); //Limpiar la pantalla
1628:  MOVLW  0C
162A:  MOVWF  4C
162C:  CALL   0968
....................                              lcd_gotoxy(0,2);
1630:  CLRF   4D
1632:  MOVLW  02
1634:  MOVWF  4E
1636:  CALL   0906
....................                              printf(lcd_putc," Regresando...");
163A:  MOVLW  BC
163C:  MOVWF  FF6
163E:  MOVLW  03
1640:  MOVWF  FF7
1642:  CALL   09AA
....................                              delay_ms(500);
1646:  MOVLW  02
1648:  MOVWF  3F
164A:  MOVLW  FA
164C:  MOVWF  40
164E:  CALL   09CA
1652:  DECFSZ 3F,F
1654:  BRA    164A
....................                              printf(lcd_putc,"\f");
1656:  MOVLW  0C
1658:  MOVWF  4C
165A:  CALL   0968
....................                              lcd_gotoxy(0,1);
165E:  CLRF   4D
1660:  MOVLW  01
1662:  MOVWF  4E
1664:  CALL   0906
....................                              printf(lcd_putc," 1>555 2>LM224");
1668:  MOVLW  CC
166A:  MOVWF  FF6
166C:  MOVLW  03
166E:  MOVWF  FF7
1670:  CALL   09AA
....................                              lcd_gotoxy(0,2);
1674:  CLRF   4D
1676:  MOVLW  02
1678:  MOVWF  4E
167A:  CALL   0906
....................                              printf(lcd_putc," 4>741 3>Pag.Sig.");
167E:  MOVLW  DC
1680:  MOVWF  FF6
1682:  MOVLW  03
1684:  MOVWF  FF7
1686:  CALL   09AA
....................                              break;
168A:  BRA    168E
....................                          }
168C:  BRA    154E
....................                         }   
....................                     }
....................                   if(Boton()==3){
168E:  CALL   09F2
1692:  MOVF   01,W
1694:  SUBLW  03
1696:  BTFSS  FD8.2
1698:  GOTO   1ED0
....................                         while(1){
....................                         printf(lcd_putc,"\f");
169C:  MOVLW  0C
169E:  MOVWF  4C
16A0:  CALL   0968
....................                         lcd_gotoxy(0,1);
16A4:  CLRF   4D
16A6:  MOVLW  01
16A8:  MOVWF  4E
16AA:  CALL   0906
....................                         printf(lcd_putc," 1>LM358 2>LM348");
16AE:  MOVLW  EE
16B0:  MOVWF  FF6
16B2:  MOVLW  03
16B4:  MOVWF  FF7
16B6:  CALL   09AA
....................                         lcd_gotoxy(0,2);
16BA:  CLRF   4D
16BC:  MOVLW  02
16BE:  MOVWF  4E
16C0:  CALL   0906
....................                         printf(lcd_putc," 4>LM324 3>Pag.Sig.");
16C4:  MOVLW  00
16C6:  MOVWF  FF6
16C8:  MOVLW  04
16CA:  MOVWF  FF7
16CC:  CALL   09AA
....................                         delay_ms(1000);
16D0:  MOVLW  04
16D2:  MOVWF  3F
16D4:  MOVLW  FA
16D6:  MOVWF  40
16D8:  CALL   09CA
16DC:  DECFSZ 3F,F
16DE:  BRA    16D4
....................                         if(Boton()==1){
16E0:  CALL   09F2
16E4:  DECFSZ 01,W
16E6:  BRA    18D6
....................                            while(1){
....................                                output_high(PIN_B7); // Colocar en alto pin B7 
16E8:  BCF    F93.7
16EA:  BSF    F8A.7
....................                                printf(lcd_putc,"\f"); //Limpiar la pantalla
16EC:  MOVLW  0C
16EE:  MOVWF  4C
16F0:  CALL   0968
....................                                lcd_gotoxy(0,1);
16F4:  CLRF   4D
16F6:  MOVLW  01
16F8:  MOVWF  4E
16FA:  CALL   0906
....................                                printf(lcd_putc," LM358 Testing..."); //  escribir eso
16FE:  MOVLW  14
1700:  MOVWF  FF6
1702:  MOVLW  04
1704:  MOVWF  FF7
1706:  CALL   09AA
....................                                lcd_gotoxy(0,2);
170A:  CLRF   4D
170C:  MOVLW  02
170E:  MOVWF  4E
1710:  CALL   0906
....................                                printf(lcd_putc," 2>Volver");
1714:  MOVLW  26
1716:  MOVWF  FF6
1718:  MOVLW  04
171A:  MOVWF  FF7
171C:  CALL   09AA
....................                                delay_ms(1000);
1720:  MOVLW  04
1722:  MOVWF  3F
1724:  MOVLW  FA
1726:  MOVWF  40
1728:  CALL   09CA
172C:  DECFSZ 3F,F
172E:  BRA    1724
....................                                if(input(PIN_C1)==1){
1730:  BSF    F94.1
1732:  BTFSS  F82.1
1734:  BRA    177E
....................                                     printf(lcd_putc,"\f");
1736:  MOVLW  0C
1738:  MOVWF  4C
173A:  CALL   0968
....................                                     lcd_gotoxy(0,1);
173E:  CLRF   4D
1740:  MOVLW  01
1742:  MOVWF  4E
1744:  CALL   0906
....................                                     printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
1748:  MOVLW  30
174A:  MOVWF  FF6
174C:  MOVLW  04
174E:  MOVWF  FF7
1750:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
1754:  CLRF   4D
1756:  MOVLW  02
1758:  MOVWF  4E
175A:  CALL   0906
....................                                     printf(lcd_putc," LM358 Testing...");
175E:  MOVLW  40
1760:  MOVWF  FF6
1762:  MOVLW  04
1764:  MOVWF  FF7
1766:  CALL   09AA
....................                                     delay_ms(500);
176A:  MOVLW  02
176C:  MOVWF  3F
176E:  MOVLW  FA
1770:  MOVWF  40
1772:  CALL   09CA
1776:  DECFSZ 3F,F
1778:  BRA    176E
....................                                     opambuenos = opambuenos + 1;
177A:  MOVLW  01
177C:  ADDWF  30,F
....................                                }
....................                                if(input(PIN_C2)==1){
177E:  BSF    F94.2
1780:  BTFSS  F82.2
1782:  BRA    17CC
....................                                     printf(lcd_putc,"\f");
1784:  MOVLW  0C
1786:  MOVWF  4C
1788:  CALL   0968
....................                                     lcd_gotoxy(0,1);
178C:  CLRF   4D
178E:  MOVLW  01
1790:  MOVWF  4E
1792:  CALL   0906
....................                                     printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
1796:  MOVLW  52
1798:  MOVWF  FF6
179A:  MOVLW  04
179C:  MOVWF  FF7
179E:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
17A2:  CLRF   4D
17A4:  MOVLW  02
17A6:  MOVWF  4E
17A8:  CALL   0906
....................                                     printf(lcd_putc," LM358 Testing...");
17AC:  MOVLW  62
17AE:  MOVWF  FF6
17B0:  MOVLW  04
17B2:  MOVWF  FF7
17B4:  CALL   09AA
....................                                     delay_ms(500);
17B8:  MOVLW  02
17BA:  MOVWF  3F
17BC:  MOVLW  FA
17BE:  MOVWF  40
17C0:  CALL   09CA
17C4:  DECFSZ 3F,F
17C6:  BRA    17BC
....................                                     opambuenos = opambuenos + 1;
17C8:  MOVLW  01
17CA:  ADDWF  30,F
....................                                }
....................                                if(opambuenos>=1){
17CC:  MOVF   30,W
17CE:  SUBLW  00
17D0:  BC    1862
....................                                     output_low(PIN_B7); // Colocar en bajo pin B0
17D2:  BCF    F93.7
17D4:  BCF    F8A.7
....................                                     printf(lcd_putc,"\f"); //Limpiar la pantalla
17D6:  MOVLW  0C
17D8:  MOVWF  4C
17DA:  CALL   0968
....................                                     lcd_gotoxy(0,1);
17DE:  CLRF   4D
17E0:  MOVLW  01
17E2:  MOVWF  4E
17E4:  CALL   0906
....................                                     printf(lcd_putc," Buenos %i", opambuenos);
17E8:  MOVLW  74
17EA:  MOVWF  FF6
17EC:  MOVLW  04
17EE:  MOVWF  FF7
17F0:  MOVLW  08
17F2:  MOVWF  3F
17F4:  CALL   0B52
17F8:  MOVFF  30,3F
17FC:  MOVLW  18
17FE:  MOVWF  40
1800:  CALL   0DE0
....................                                     lcd_gotoxy(0,2);
1804:  CLRF   4D
1806:  MOVLW  02
1808:  MOVWF  4E
180A:  CALL   0906
....................                                     printf(lcd_putc," Regresando..");
180E:  MOVLW  80
1810:  MOVWF  FF6
1812:  MOVLW  04
1814:  MOVWF  FF7
1816:  CALL   09AA
....................                                     delay_ms(1000);
181A:  MOVLW  04
181C:  MOVWF  3F
181E:  MOVLW  FA
1820:  MOVWF  40
1822:  CALL   09CA
1826:  DECFSZ 3F,F
1828:  BRA    181E
....................                                     opambuenos = 0;
182A:  CLRF   30
....................                                     printf(lcd_putc,"\f");
182C:  MOVLW  0C
182E:  MOVWF  4C
1830:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1834:  CLRF   4D
1836:  MOVLW  01
1838:  MOVWF  4E
183A:  CALL   0906
....................                                     printf(lcd_putc," 1>LM358 2>LM348");
183E:  MOVLW  8E
1840:  MOVWF  FF6
1842:  MOVLW  04
1844:  MOVWF  FF7
1846:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
184A:  CLRF   4D
184C:  MOVLW  02
184E:  MOVWF  4E
1850:  CALL   0906
....................                                     printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1854:  MOVLW  A0
1856:  MOVWF  FF6
1858:  MOVLW  04
185A:  MOVWF  FF7
185C:  CALL   09AA
....................                                     break;
1860:  BRA    18D6
....................                                }
....................                                if(Boton()==2){
1862:  CALL   09F2
1866:  MOVF   01,W
1868:  SUBLW  02
186A:  BNZ   18D4
....................                                    output_low(PIN_B7); // Colocar en bajo pin B0
186C:  BCF    F93.7
186E:  BCF    F8A.7
....................                                    printf(lcd_putc,"\f"); //Limpiar la pantalla
1870:  MOVLW  0C
1872:  MOVWF  4C
1874:  CALL   0968
....................                                    lcd_gotoxy(0,2);
1878:  CLRF   4D
187A:  MOVLW  02
187C:  MOVWF  4E
187E:  CALL   0906
....................                                    printf(lcd_putc," Regresando...");
1882:  MOVLW  B4
1884:  MOVWF  FF6
1886:  MOVLW  04
1888:  MOVWF  FF7
188A:  CALL   09AA
....................                                    delay_ms(500);
188E:  MOVLW  02
1890:  MOVWF  3F
1892:  MOVLW  FA
1894:  MOVWF  40
1896:  CALL   09CA
189A:  DECFSZ 3F,F
189C:  BRA    1892
....................                                    printf(lcd_putc,"\f");
189E:  MOVLW  0C
18A0:  MOVWF  4C
18A2:  CALL   0968
....................                                    lcd_gotoxy(0,1);
18A6:  CLRF   4D
18A8:  MOVLW  01
18AA:  MOVWF  4E
18AC:  CALL   0906
....................                                    printf(lcd_putc," 1>LM358 2>LM348");
18B0:  MOVLW  C4
18B2:  MOVWF  FF6
18B4:  MOVLW  04
18B6:  MOVWF  FF7
18B8:  CALL   09AA
....................                                    lcd_gotoxy(0,2);
18BC:  CLRF   4D
18BE:  MOVLW  02
18C0:  MOVWF  4E
18C2:  CALL   0906
....................                                    printf(lcd_putc," 4>LM324 3>Pag.Sig.");
18C6:  MOVLW  D6
18C8:  MOVWF  FF6
18CA:  MOVLW  04
18CC:  MOVWF  FF7
18CE:  CALL   09AA
....................                                    break;
18D2:  BRA    18D6
....................                                }
18D4:  BRA    16E8
....................                            } 
....................                         }
....................                         if(Boton()==4){
18D6:  CALL   09F2
18DA:  MOVF   01,W
18DC:  SUBLW  04
18DE:  BTFSS  FD8.2
18E0:  BRA    1B6C
....................                               while(1){
....................                                   output_high(PIN_B7); // Colocar en alto pin B7 
18E2:  BCF    F93.7
18E4:  BSF    F8A.7
....................                                   printf(lcd_putc,"\f"); //Limpiar la pantalla
18E6:  MOVLW  0C
18E8:  MOVWF  4C
18EA:  CALL   0968
....................                                   lcd_gotoxy(0,1);
18EE:  CLRF   4D
18F0:  MOVLW  01
18F2:  MOVWF  4E
18F4:  CALL   0906
....................                                   printf(lcd_putc," LM324 Testing..."); //  escribir eso
18F8:  MOVLW  EA
18FA:  MOVWF  FF6
18FC:  MOVLW  04
18FE:  MOVWF  FF7
1900:  CALL   09AA
....................                                   lcd_gotoxy(0,2);
1904:  CLRF   4D
1906:  MOVLW  02
1908:  MOVWF  4E
190A:  CALL   0906
....................                                   printf(lcd_putc," 2>Volver");
190E:  MOVLW  FC
1910:  MOVWF  FF6
1912:  MOVLW  04
1914:  MOVWF  FF7
1916:  CALL   09AA
....................                                   delay_ms(1000);
191A:  MOVLW  04
191C:  MOVWF  3F
191E:  MOVLW  FA
1920:  MOVWF  40
1922:  CALL   09CA
1926:  DECFSZ 3F,F
1928:  BRA    191E
....................                                   if(input(PIN_D3)==1){
192A:  BSF    F95.3
192C:  BTFSS  F83.3
192E:  BRA    1978
....................                                        printf(lcd_putc,"\f");
1930:  MOVLW  0C
1932:  MOVWF  4C
1934:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1938:  CLRF   4D
193A:  MOVLW  01
193C:  MOVWF  4E
193E:  CALL   0906
....................                                        printf(lcd_putc," AmpOp-1 Bueno!"); //  escribir eso
1942:  MOVLW  06
1944:  MOVWF  FF6
1946:  MOVLW  05
1948:  MOVWF  FF7
194A:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
194E:  CLRF   4D
1950:  MOVLW  02
1952:  MOVWF  4E
1954:  CALL   0906
....................                                        printf(lcd_putc," LM324 Testing...");
1958:  MOVLW  16
195A:  MOVWF  FF6
195C:  MOVLW  05
195E:  MOVWF  FF7
1960:  CALL   09AA
....................                                        delay_ms(500);
1964:  MOVLW  02
1966:  MOVWF  3F
1968:  MOVLW  FA
196A:  MOVWF  40
196C:  CALL   09CA
1970:  DECFSZ 3F,F
1972:  BRA    1968
....................                                        opambuenos = opambuenos + 1;
1974:  MOVLW  01
1976:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C1)==1){
1978:  BSF    F94.1
197A:  BTFSS  F82.1
197C:  BRA    19C6
....................                                        printf(lcd_putc,"\f");
197E:  MOVLW  0C
1980:  MOVWF  4C
1982:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1986:  CLRF   4D
1988:  MOVLW  01
198A:  MOVWF  4E
198C:  CALL   0906
....................                                        printf(lcd_putc," AmpOp-2 Bueno!"); //  escribir eso
1990:  MOVLW  28
1992:  MOVWF  FF6
1994:  MOVLW  05
1996:  MOVWF  FF7
1998:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
199C:  CLRF   4D
199E:  MOVLW  02
19A0:  MOVWF  4E
19A2:  CALL   0906
....................                                        printf(lcd_putc," LM324 Testing...");
19A6:  MOVLW  38
19A8:  MOVWF  FF6
19AA:  MOVLW  05
19AC:  MOVWF  FF7
19AE:  CALL   09AA
....................                                        delay_ms(500);
19B2:  MOVLW  02
19B4:  MOVWF  3F
19B6:  MOVLW  FA
19B8:  MOVWF  40
19BA:  CALL   09CA
19BE:  DECFSZ 3F,F
19C0:  BRA    19B6
....................                                        opambuenos = opambuenos + 1;
19C2:  MOVLW  01
19C4:  ADDWF  30,F
....................                                   }
....................                                   if(input(PIN_C2)==1){
19C6:  BSF    F94.2
19C8:  BTFSS  F82.2
19CA:  BRA    1A14
....................                                        printf(lcd_putc,"\f");
19CC:  MOVLW  0C
19CE:  MOVWF  4C
19D0:  CALL   0968
....................                                        lcd_gotoxy(0,1);
19D4:  CLRF   4D
19D6:  MOVLW  01
19D8:  MOVWF  4E
19DA:  CALL   0906
....................                                        printf(lcd_putc," AmpOp-3 Bueno!"); //  escribir eso
19DE:  MOVLW  4A
19E0:  MOVWF  FF6
19E2:  MOVLW  05
19E4:  MOVWF  FF7
19E6:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
19EA:  CLRF   4D
19EC:  MOVLW  02
19EE:  MOVWF  4E
19F0:  CALL   0906
....................                                        printf(lcd_putc," LM324 Testing...");
19F4:  MOVLW  5A
19F6:  MOVWF  FF6
19F8:  MOVLW  05
19FA:  MOVWF  FF7
19FC:  CALL   09AA
....................                                        delay_ms(500);
1A00:  MOVLW  02
1A02:  MOVWF  3F
1A04:  MOVLW  FA
1A06:  MOVWF  40
1A08:  CALL   09CA
1A0C:  DECFSZ 3F,F
1A0E:  BRA    1A04
....................                                        opambuenos = opambuenos + 1;
1A10:  MOVLW  01
1A12:  ADDWF  30,F
....................                                   } 
....................                                   if(input(PIN_D2)==1){
1A14:  BSF    F95.2
1A16:  BTFSS  F83.2
1A18:  BRA    1A62
....................                                        printf(lcd_putc,"\f");
1A1A:  MOVLW  0C
1A1C:  MOVWF  4C
1A1E:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1A22:  CLRF   4D
1A24:  MOVLW  01
1A26:  MOVWF  4E
1A28:  CALL   0906
....................                                        printf(lcd_putc," AmpOp-4 Bueno!"); //  escribir eso
1A2C:  MOVLW  6C
1A2E:  MOVWF  FF6
1A30:  MOVLW  05
1A32:  MOVWF  FF7
1A34:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
1A38:  CLRF   4D
1A3A:  MOVLW  02
1A3C:  MOVWF  4E
1A3E:  CALL   0906
....................                                        printf(lcd_putc," LM324 Testing...");
1A42:  MOVLW  7C
1A44:  MOVWF  FF6
1A46:  MOVLW  05
1A48:  MOVWF  FF7
1A4A:  CALL   09AA
....................                                        delay_ms(500);
1A4E:  MOVLW  02
1A50:  MOVWF  3F
1A52:  MOVLW  FA
1A54:  MOVWF  40
1A56:  CALL   09CA
1A5A:  DECFSZ 3F,F
1A5C:  BRA    1A52
....................                                        opambuenos = opambuenos + 1;
1A5E:  MOVLW  01
1A60:  ADDWF  30,F
....................                                   }   
....................                                   if(opambuenos>=1){
1A62:  MOVF   30,W
1A64:  SUBLW  00
1A66:  BC    1AF8
....................                                        output_low(PIN_B7); // Colocar en bajo pin B0
1A68:  BCF    F93.7
1A6A:  BCF    F8A.7
....................                                        printf(lcd_putc,"\f"); //Limpiar la pantalla
1A6C:  MOVLW  0C
1A6E:  MOVWF  4C
1A70:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1A74:  CLRF   4D
1A76:  MOVLW  01
1A78:  MOVWF  4E
1A7A:  CALL   0906
....................                                        printf(lcd_putc," Buenos %i", opambuenos);
1A7E:  MOVLW  8E
1A80:  MOVWF  FF6
1A82:  MOVLW  05
1A84:  MOVWF  FF7
1A86:  MOVLW  08
1A88:  MOVWF  3F
1A8A:  CALL   0B52
1A8E:  MOVFF  30,3F
1A92:  MOVLW  18
1A94:  MOVWF  40
1A96:  CALL   0DE0
....................                                        lcd_gotoxy(0,2);
1A9A:  CLRF   4D
1A9C:  MOVLW  02
1A9E:  MOVWF  4E
1AA0:  CALL   0906
....................                                        printf(lcd_putc," Regresando...");
1AA4:  MOVLW  9A
1AA6:  MOVWF  FF6
1AA8:  MOVLW  05
1AAA:  MOVWF  FF7
1AAC:  CALL   09AA
....................                                        delay_ms(1000);
1AB0:  MOVLW  04
1AB2:  MOVWF  3F
1AB4:  MOVLW  FA
1AB6:  MOVWF  40
1AB8:  CALL   09CA
1ABC:  DECFSZ 3F,F
1ABE:  BRA    1AB4
....................                                        opambuenos = 0;
1AC0:  CLRF   30
....................                                        printf(lcd_putc,"\f");
1AC2:  MOVLW  0C
1AC4:  MOVWF  4C
1AC6:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1ACA:  CLRF   4D
1ACC:  MOVLW  01
1ACE:  MOVWF  4E
1AD0:  CALL   0906
....................                                        printf(lcd_putc," 1>LM358 2>LM348");
1AD4:  MOVLW  AA
1AD6:  MOVWF  FF6
1AD8:  MOVLW  05
1ADA:  MOVWF  FF7
1ADC:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
1AE0:  CLRF   4D
1AE2:  MOVLW  02
1AE4:  MOVWF  4E
1AE6:  CALL   0906
....................                                        printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1AEA:  MOVLW  BC
1AEC:  MOVWF  FF6
1AEE:  MOVLW  05
1AF0:  MOVWF  FF7
1AF2:  CALL   09AA
....................                                       break;
1AF6:  BRA    1B6C
....................                                   }
....................                                   if(Boton()==2){
1AF8:  CALL   09F2
1AFC:  MOVF   01,W
1AFE:  SUBLW  02
1B00:  BNZ   1B6A
....................                                       output_low(PIN_B7); // Colocar en bajo pin B0
1B02:  BCF    F93.7
1B04:  BCF    F8A.7
....................                                       printf(lcd_putc,"\f"); //Limpiar la pantalla
1B06:  MOVLW  0C
1B08:  MOVWF  4C
1B0A:  CALL   0968
....................                                       lcd_gotoxy(0,2);
1B0E:  CLRF   4D
1B10:  MOVLW  02
1B12:  MOVWF  4E
1B14:  CALL   0906
....................                                       printf(lcd_putc," Regresando...");
1B18:  MOVLW  D0
1B1A:  MOVWF  FF6
1B1C:  MOVLW  05
1B1E:  MOVWF  FF7
1B20:  CALL   09AA
....................                                       delay_ms(500);
1B24:  MOVLW  02
1B26:  MOVWF  3F
1B28:  MOVLW  FA
1B2A:  MOVWF  40
1B2C:  CALL   09CA
1B30:  DECFSZ 3F,F
1B32:  BRA    1B28
....................                                       printf(lcd_putc,"\f");
1B34:  MOVLW  0C
1B36:  MOVWF  4C
1B38:  CALL   0968
....................                                       lcd_gotoxy(0,1);
1B3C:  CLRF   4D
1B3E:  MOVLW  01
1B40:  MOVWF  4E
1B42:  CALL   0906
....................                                       printf(lcd_putc," 1>LM358 2>LM348");
1B46:  MOVLW  E0
1B48:  MOVWF  FF6
1B4A:  MOVLW  05
1B4C:  MOVWF  FF7
1B4E:  CALL   09AA
....................                                       lcd_gotoxy(0,2);
1B52:  CLRF   4D
1B54:  MOVLW  02
1B56:  MOVWF  4E
1B58:  CALL   0906
....................                                       printf(lcd_putc," 4>LM324 3>Pag.Sig.");
1B5C:  MOVLW  F2
1B5E:  MOVWF  FF6
1B60:  MOVLW  05
1B62:  MOVWF  FF7
1B64:  CALL   09AA
....................                                       break;
1B68:  BRA    1B6C
....................                                   }
1B6A:  BRA    18E2
....................                               }
....................                         }
....................                         if(Boton()==3){
1B6C:  CALL   09F2
1B70:  MOVF   01,W
1B72:  SUBLW  03
1B74:  BTFSS  FD8.2
1B76:  BRA    1ECC
....................                            printf(lcd_putc,"\f");
1B78:  MOVLW  0C
1B7A:  MOVWF  4C
1B7C:  CALL   0968
....................                            lcd_gotoxy(0,1);
1B80:  CLRF   4D
1B82:  MOVLW  01
1B84:  MOVWF  4E
1B86:  CALL   0906
....................                            printf(lcd_putc," 1>NPN 2>PNP");
1B8A:  MOVLW  06
1B8C:  MOVWF  FF6
1B8E:  MOVLW  06
1B90:  MOVWF  FF7
1B92:  CALL   09AA
....................                            lcd_gotoxy(0,2);
1B96:  CLRF   4D
1B98:  MOVLW  02
1B9A:  MOVWF  4E
1B9C:  CALL   0906
....................                            printf(lcd_putc," 4>NADA 3>Regresar");
1BA0:  MOVLW  14
1BA2:  MOVWF  FF6
1BA4:  MOVLW  06
1BA6:  MOVWF  FF7
1BA8:  CALL   09AA
....................                            delay_ms(1000);
1BAC:  MOVLW  04
1BAE:  MOVWF  3F
1BB0:  MOVLW  FA
1BB2:  MOVWF  40
1BB4:  CALL   09CA
1BB8:  DECFSZ 3F,F
1BBA:  BRA    1BB0
....................                            while(1){
....................                               if(Boton()==1) {
1BBC:  CALL   09F2
1BC0:  DECFSZ 01,W
1BC2:  BRA    1D32
....................                                  NPN_estado = 1;
1BC4:  BSF    2B.2
....................                                  printf(lcd_putc,"\f");
1BC6:  MOVLW  0C
1BC8:  MOVWF  4C
1BCA:  CALL   0968
....................                                  lcd_gotoxy(0,1);
1BCE:  CLRF   4D
1BD0:  MOVLW  01
1BD2:  MOVWF  4E
1BD4:  CALL   0906
....................                                  printf(lcd_putc,"NPN Testing...");
1BD8:  MOVLW  28
1BDA:  MOVWF  FF6
1BDC:  MOVLW  06
1BDE:  MOVWF  FF7
1BE0:  CALL   09AA
....................                                  delay_ms(1000);
1BE4:  MOVLW  04
1BE6:  MOVWF  3F
1BE8:  MOVLW  FA
1BEA:  MOVWF  40
1BEC:  CALL   09CA
1BF0:  DECFSZ 3F,F
1BF2:  BRA    1BE8
....................                                  if (input(PIN_C6) == 0) {
1BF4:  BSF    F94.6
1BF6:  BTFSC  F82.6
1BF8:  BRA    1BFC
....................                                     NPN_estado = 0;
1BFA:  BCF    2B.2
....................                                  }
....................                                  output_high(PIN_D0);
1BFC:  BCF    F95.0
1BFE:  BSF    F8C.0
....................                                  delay_ms(1500);
1C00:  MOVLW  06
1C02:  MOVWF  3F
1C04:  MOVLW  FA
1C06:  MOVWF  40
1C08:  CALL   09CA
1C0C:  DECFSZ 3F,F
1C0E:  BRA    1C04
....................                                  if (input(PIN_C6) == 1) {
1C10:  BSF    F94.6
1C12:  BTFSS  F82.6
1C14:  BRA    1C18
....................                                     NPN_estado = 0;
1C16:  BCF    2B.2
....................                                  }
....................                                  if (NPN_estado == 1) {
1C18:  BTFSS  2B.2
1C1A:  BRA    1C6E
....................                                     printf(lcd_putc,"\f");
1C1C:  MOVLW  0C
1C1E:  MOVWF  4C
1C20:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1C24:  CLRF   4D
1C26:  MOVLW  01
1C28:  MOVWF  4E
1C2A:  CALL   0906
....................                                     printf(lcd_putc,"NPN BUENO");
1C2E:  MOVLW  38
1C30:  MOVWF  FF6
1C32:  MOVLW  06
1C34:  MOVWF  FF7
1C36:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
1C3A:  CLRF   4D
1C3C:  MOVLW  02
1C3E:  MOVWF  4E
1C40:  CALL   0906
....................                                     printf(lcd_putc," 2>Volver");
1C44:  MOVLW  42
1C46:  MOVWF  FF6
1C48:  MOVLW  06
1C4A:  MOVWF  FF7
1C4C:  CALL   09AA
....................                                     delay_ms(1000);
1C50:  MOVLW  04
1C52:  MOVWF  3F
1C54:  MOVLW  FA
1C56:  MOVWF  40
1C58:  CALL   09CA
1C5C:  DECFSZ 3F,F
1C5E:  BRA    1C54
....................                                     while(1) {
....................                                        if( Boton() == 2){
1C60:  CALL   09F2
1C64:  MOVF   01,W
1C66:  SUBLW  02
1C68:  BNZ   1C6C
....................                                           break;
1C6A:  BRA    1C6E
....................                                        }
1C6C:  BRA    1C60
....................                                     }
....................                                  }
....................                                  if (NPN_estado == 0) {
1C6E:  BTFSC  2B.2
1C70:  BRA    1CB6
....................                                     printf(lcd_putc,"\f");
1C72:  MOVLW  0C
1C74:  MOVWF  4C
1C76:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1C7A:  CLRF   4D
1C7C:  MOVLW  01
1C7E:  MOVWF  4E
1C80:  CALL   0906
....................                                     printf(lcd_putc,"NPN MALO");
1C84:  MOVLW  4C
1C86:  MOVWF  FF6
1C88:  MOVLW  06
1C8A:  MOVWF  FF7
1C8C:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
1C90:  CLRF   4D
1C92:  MOVLW  02
1C94:  MOVWF  4E
1C96:  CALL   0906
....................                                     printf(lcd_putc," 2>Volver");
1C9A:  MOVLW  56
1C9C:  MOVWF  FF6
1C9E:  MOVLW  06
1CA0:  MOVWF  FF7
1CA2:  CALL   09AA
....................                                     delay_ms(1000);
1CA6:  MOVLW  04
1CA8:  MOVWF  3F
1CAA:  MOVLW  FA
1CAC:  MOVWF  40
1CAE:  CALL   09CA
1CB2:  DECFSZ 3F,F
1CB4:  BRA    1CAA
....................                                  }
....................                                  while(1) {
....................                                     if(Boton() == 2){
1CB6:  CALL   09F2
1CBA:  MOVF   01,W
1CBC:  SUBLW  02
1CBE:  BNZ   1D30
....................                                        NPN_estado == 1;
....................                                        output_low(PIN_D0);
1CC0:  BCF    F95.0
1CC2:  BCF    F8C.0
....................                                        lcd_gotoxy(0,2);
1CC4:  CLRF   4D
1CC6:  MOVLW  02
1CC8:  MOVWF  4E
1CCA:  CALL   0906
....................                                        printf(lcd_putc," Regresando...");
1CCE:  MOVLW  60
1CD0:  MOVWF  FF6
1CD2:  MOVLW  06
1CD4:  MOVWF  FF7
1CD6:  CALL   09AA
....................                                        delay_ms(1000);
1CDA:  MOVLW  04
1CDC:  MOVWF  3F
1CDE:  MOVLW  FA
1CE0:  MOVWF  40
1CE2:  CALL   09CA
1CE6:  DECFSZ 3F,F
1CE8:  BRA    1CDE
....................                                        printf(lcd_putc,"\f");
1CEA:  MOVLW  0C
1CEC:  MOVWF  4C
1CEE:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1CF2:  CLRF   4D
1CF4:  MOVLW  01
1CF6:  MOVWF  4E
1CF8:  CALL   0906
....................                                        printf(lcd_putc," 1>NPN 2>PNP");
1CFC:  MOVLW  70
1CFE:  MOVWF  FF6
1D00:  MOVLW  06
1D02:  MOVWF  FF7
1D04:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
1D08:  CLRF   4D
1D0A:  MOVLW  02
1D0C:  MOVWF  4E
1D0E:  CALL   0906
....................                                        printf(lcd_putc," 4>NADA 3>Regresar");
1D12:  MOVLW  7E
1D14:  MOVWF  FF6
1D16:  MOVLW  06
1D18:  MOVWF  FF7
1D1A:  CALL   09AA
....................                                        delay_ms(1000);
1D1E:  MOVLW  04
1D20:  MOVWF  3F
1D22:  MOVLW  FA
1D24:  MOVWF  40
1D26:  CALL   09CA
1D2A:  DECFSZ 3F,F
1D2C:  BRA    1D22
....................                                        break;
1D2E:  BRA    1D32
....................                                     }
1D30:  BRA    1CB6
....................                                  }
....................                               }
....................                               
....................                               if(Boton() == 2) {
1D32:  CALL   09F2
1D36:  MOVF   01,W
1D38:  SUBLW  02
1D3A:  BTFSS  FD8.2
1D3C:  BRA    1EAC
....................                                  PNP_estado = 1;
1D3E:  BSF    2B.3
....................                                  printf(lcd_putc,"\f");
1D40:  MOVLW  0C
1D42:  MOVWF  4C
1D44:  CALL   0968
....................                                  lcd_gotoxy(0,1);
1D48:  CLRF   4D
1D4A:  MOVLW  01
1D4C:  MOVWF  4E
1D4E:  CALL   0906
....................                                  printf(lcd_putc,"PNP Testing...");
1D52:  MOVLW  92
1D54:  MOVWF  FF6
1D56:  MOVLW  06
1D58:  MOVWF  FF7
1D5A:  CALL   09AA
....................                                  delay_ms(1000);
1D5E:  MOVLW  04
1D60:  MOVWF  3F
1D62:  MOVLW  FA
1D64:  MOVWF  40
1D66:  CALL   09CA
1D6A:  DECFSZ 3F,F
1D6C:  BRA    1D62
....................                                  if (input(PIN_C7) == 0) {
1D6E:  BSF    F94.7
1D70:  BTFSC  F82.7
1D72:  BRA    1D76
....................                                     PNP_estado = 0;
1D74:  BCF    2B.3
....................                                  }
....................                                  output_high(PIN_D1);
1D76:  BCF    F95.1
1D78:  BSF    F8C.1
....................                                  delay_ms(1500);
1D7A:  MOVLW  06
1D7C:  MOVWF  3F
1D7E:  MOVLW  FA
1D80:  MOVWF  40
1D82:  CALL   09CA
1D86:  DECFSZ 3F,F
1D88:  BRA    1D7E
....................                                  if (input(PIN_C7) == 1) {
1D8A:  BSF    F94.7
1D8C:  BTFSS  F82.7
1D8E:  BRA    1D92
....................                                     PNP_estado = 0;
1D90:  BCF    2B.3
....................                                  }
....................                                  if (PNP_estado == 1) {
1D92:  BTFSS  2B.3
1D94:  BRA    1DE8
....................                                     printf(lcd_putc,"\f");
1D96:  MOVLW  0C
1D98:  MOVWF  4C
1D9A:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1D9E:  CLRF   4D
1DA0:  MOVLW  01
1DA2:  MOVWF  4E
1DA4:  CALL   0906
....................                                     printf(lcd_putc,"PNP BUENO");
1DA8:  MOVLW  A2
1DAA:  MOVWF  FF6
1DAC:  MOVLW  06
1DAE:  MOVWF  FF7
1DB0:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
1DB4:  CLRF   4D
1DB6:  MOVLW  02
1DB8:  MOVWF  4E
1DBA:  CALL   0906
....................                                     printf(lcd_putc," 2>Volver");
1DBE:  MOVLW  AC
1DC0:  MOVWF  FF6
1DC2:  MOVLW  06
1DC4:  MOVWF  FF7
1DC6:  CALL   09AA
....................                                     delay_ms(1000);
1DCA:  MOVLW  04
1DCC:  MOVWF  3F
1DCE:  MOVLW  FA
1DD0:  MOVWF  40
1DD2:  CALL   09CA
1DD6:  DECFSZ 3F,F
1DD8:  BRA    1DCE
....................                                     while(1) {
....................                                        if( Boton() == 2){
1DDA:  CALL   09F2
1DDE:  MOVF   01,W
1DE0:  SUBLW  02
1DE2:  BNZ   1DE6
....................                                           break;
1DE4:  BRA    1DE8
....................                                        }
1DE6:  BRA    1DDA
....................                                     }
....................                                  }
....................                                  if (PNP_estado == 0) {
1DE8:  BTFSC  2B.3
1DEA:  BRA    1E30
....................                                     printf(lcd_putc,"\f");
1DEC:  MOVLW  0C
1DEE:  MOVWF  4C
1DF0:  CALL   0968
....................                                     lcd_gotoxy(0,1);
1DF4:  CLRF   4D
1DF6:  MOVLW  01
1DF8:  MOVWF  4E
1DFA:  CALL   0906
....................                                     printf(lcd_putc,"PNP MALO");
1DFE:  MOVLW  B6
1E00:  MOVWF  FF6
1E02:  MOVLW  06
1E04:  MOVWF  FF7
1E06:  CALL   09AA
....................                                     lcd_gotoxy(0,2);
1E0A:  CLRF   4D
1E0C:  MOVLW  02
1E0E:  MOVWF  4E
1E10:  CALL   0906
....................                                     printf(lcd_putc," 2>Volver");
1E14:  MOVLW  C0
1E16:  MOVWF  FF6
1E18:  MOVLW  06
1E1A:  MOVWF  FF7
1E1C:  CALL   09AA
....................                                     delay_ms(1000);
1E20:  MOVLW  04
1E22:  MOVWF  3F
1E24:  MOVLW  FA
1E26:  MOVWF  40
1E28:  CALL   09CA
1E2C:  DECFSZ 3F,F
1E2E:  BRA    1E24
....................                                  }
....................                                  while(1) {
....................                                     if(Boton() == 2){
1E30:  CALL   09F2
1E34:  MOVF   01,W
1E36:  SUBLW  02
1E38:  BNZ   1EAA
....................                                        PNP_estado == 1;
....................                                        output_low(PIN_D1);
1E3A:  BCF    F95.1
1E3C:  BCF    F8C.1
....................                                        lcd_gotoxy(0,2);
1E3E:  CLRF   4D
1E40:  MOVLW  02
1E42:  MOVWF  4E
1E44:  CALL   0906
....................                                        printf(lcd_putc," Regresando...");
1E48:  MOVLW  CA
1E4A:  MOVWF  FF6
1E4C:  MOVLW  06
1E4E:  MOVWF  FF7
1E50:  CALL   09AA
....................                                        delay_ms(1000);
1E54:  MOVLW  04
1E56:  MOVWF  3F
1E58:  MOVLW  FA
1E5A:  MOVWF  40
1E5C:  CALL   09CA
1E60:  DECFSZ 3F,F
1E62:  BRA    1E58
....................                                        printf(lcd_putc,"\f");
1E64:  MOVLW  0C
1E66:  MOVWF  4C
1E68:  CALL   0968
....................                                        lcd_gotoxy(0,1);
1E6C:  CLRF   4D
1E6E:  MOVLW  01
1E70:  MOVWF  4E
1E72:  CALL   0906
....................                                        printf(lcd_putc," 1>NPN 2>PNP");
1E76:  MOVLW  DA
1E78:  MOVWF  FF6
1E7A:  MOVLW  06
1E7C:  MOVWF  FF7
1E7E:  CALL   09AA
....................                                        lcd_gotoxy(0,2);
1E82:  CLRF   4D
1E84:  MOVLW  02
1E86:  MOVWF  4E
1E88:  CALL   0906
....................                                        printf(lcd_putc," 4>NADA 3>Regresar");
1E8C:  MOVLW  E8
1E8E:  MOVWF  FF6
1E90:  MOVLW  06
1E92:  MOVWF  FF7
1E94:  CALL   09AA
....................                                        delay_ms(1000);
1E98:  MOVLW  04
1E9A:  MOVWF  3F
1E9C:  MOVLW  FA
1E9E:  MOVWF  40
1EA0:  CALL   09CA
1EA4:  DECFSZ 3F,F
1EA6:  BRA    1E9C
....................                                        break;
1EA8:  BRA    1EAC
....................                                     }
1EAA:  BRA    1E30
....................                                  }
....................                               }
....................                                  
....................                               
....................                               
....................                               if(Boton() == 3) {
1EAC:  CALL   09F2
1EB0:  MOVF   01,W
1EB2:  SUBLW  03
1EB4:  BNZ   1ECA
....................                                  delay_ms(500);
1EB6:  MOVLW  02
1EB8:  MOVWF  3F
1EBA:  MOVLW  FA
1EBC:  MOVWF  40
1EBE:  CALL   09CA
1EC2:  DECFSZ 3F,F
1EC4:  BRA    1EBA
....................                                  goto MENUPRINCIPAL;
1EC6:  GOTO   0F06
....................                               }
1ECA:  BRA    1BBC
....................                            }
....................                         }
1ECC:  GOTO   169C
....................                      }
....................                   }
1ED0:  GOTO   10B6
....................                }
....................             }
1ED4:  GOTO   0F40
....................          }
1ED8:  MOVLB  0
1EDA:  GOTO   0F06
....................       }
.................... }   
1EDE:  SLEEP 

Configuration Fuses:
   Word  1: C93F   PLL12 CPUDIV4 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
